<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>圥忈的博客 • Posts by &#34;rsa&#34; tag</title>
    <link href="http://example.com" />
    <updated>2024-05-15T05:47:22.000Z</updated>
    <category term="Base家族编码" />
    <category term="buuctf" />
    <category term="matlab" />
    <category term="number-theory" />
    <category term="rsa" />
    <category term="matlab绘图" />
    <entry>
        <id>http://example.com/2024/05/15/rsa/</id>
        <title>&#39;rsa&#39;</title>
        <link rel="alternate" href="http://example.com/2024/05/15/rsa/"/>
        <content type="html">&lt;h1 id=&#34;ctf-rsapython安装及pycharm配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsapython安装及pycharm配置&#34;&gt;#&lt;/a&gt; 【CTF-RSA】python 安装及 pycharm 配置&lt;/h1&gt;
&lt;p&gt;python3 官网下载地址&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMvd2luZG93cy8=&#34;&gt; https://www.python.org/downloads/windows/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;python 编译器 pycharm Community 下载地址&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS96aC1jbi9weWNoYXJtL2Rvd25sb2FkLyNzZWN0aW9uPXdpbmRvd3M=&#34;&gt; https://www.jetbrains.com/zh-cn/pycharm/download/#section=windows&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;pycharm 汉化插件&lt;br&gt;
打开 pycharm 左上角的 file (文件) &amp;gt; 选择 settings (设置) &amp;gt; 打开 plugins (插件) &amp;gt; 搜索 chinese (中文插件), 下载好后重启 pycharm&lt;/p&gt;
&lt;p&gt;pycharm 设置虚拟环境&lt;br&gt;
设置虚拟环境的好处是：&lt;/p&gt;
&lt;p&gt;1. 方便移植和重装系统以后，安装模块&lt;/p&gt;
&lt;p&gt;2. 避免安装较多模块，发生冲突&lt;/p&gt;
&lt;p&gt;pycharm 安装库及设置国内镜像&lt;br&gt;
中国科技大学 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9weXBpLm1pcnJvcnMudXN0Yy5lZHUuY24vc2ltcGxlLw==&#34;&gt;https://pypi.mirrors.ustc.edu.cn/simple/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;安装 libnum 库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install libnum -i https://pypi.mirrors.ustc.edu.cn/simple/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;安装 pycryptodome库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install pycryptodome -i https://pypi.mirrors.ustc.edu.cn/simple/ &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;gmpy2 及相关库安装&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLw==&#34;&gt; https://www.lfd.uci.edu/~gohlke/pythonlibs/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在该网页中找到 gmpy2, 注意找对应得版本&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp39‑cp39‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp39‑cp39‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp38‑cp38‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp38‑cp38‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp37‑cp37m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp37‑cp37m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp36‑cp36m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp36‑cp36m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp35‑cp35m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp35‑cp35m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp34‑cp34m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp34‑cp34m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp27‑cp27m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp27‑cp27m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;N（Modulus）：模数，是两个大素数 P 和 Q 的乘积。N 的长度决定了 RSA 算法的安全性。&lt;/p&gt;
&lt;p&gt;E（Public Exponent）：公钥指数，通常为 65537（0x10001）。E 用于加密数据，是公钥的一部分。&lt;/p&gt;
&lt;p&gt;P（Prime Factor）：素数 P，是模数 N 的一个因子。&lt;/p&gt;
&lt;p&gt;Q（Prime Factor）：素数 Q，是模数 N 的另一个因子。&lt;/p&gt;
&lt;p&gt;DP（D mod (P-1)）：D 对 (P-1) 取模的结果，用于解密数据。&lt;/p&gt;
&lt;p&gt;DQ（D mod (Q-1)）：D 对 (Q-1) 取模的结果，用于解密数据。&lt;/p&gt;
&lt;p&gt;Qinv（Q^-1 mod P）：Q 的模 P 的乘法逆元，用于解密数据。&lt;/p&gt;
&lt;p&gt;D（Private Exponent）：私钥指数，用于解密数据或生成数字签名&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsarsa简介及原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsarsa简介及原理&#34;&gt;#&lt;/a&gt; 【CTF-RSA】RSA 简介及原理&lt;/h1&gt;
&lt;h2 id=&#34;rsa算法简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rsa算法简介&#34;&gt;#&lt;/a&gt; rsa 算法简介&lt;/h2&gt;
&lt;p&gt;RSA 是公钥密码体制，是一种使用不同的加密密钥与解密密钥&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/5fb3c27329b8976a11a47a59deb864d84769fda0.png%401256w_478h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/8a70da17879fa97dbf424abbeb5a4ff94e1ad396.png%401256w_358h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;rsa算法原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rsa算法原理&#34;&gt;#&lt;/a&gt; rsa 算法原理&lt;/h2&gt;
&lt;h3 id=&#34;欧拉函数φn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#欧拉函数φn&#34;&gt;#&lt;/a&gt; 欧拉函数 φ(n)&lt;/h3&gt;
&lt;p&gt;欧拉函数 φ(n) 的定义是小于 n 的自然数中与 n 互质的数的个数&lt;/p&gt;
&lt;h3 id=&#34;欧拉定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#欧拉定理&#34;&gt;#&lt;/a&gt; 欧拉定理&lt;/h3&gt;
&lt;p&gt;若 n,a 为正整数，且 n,a 互质，则:a^φ(n)≡1 mod n&lt;/p&gt;
&lt;h3 id=&#34;费马小定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#费马小定理&#34;&gt;#&lt;/a&gt; 费马小定理&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/7f87d43d837599c2d6d759300d780c7ef60f336f.png%401256w_274h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;模运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模运算&#34;&gt;#&lt;/a&gt; 模运算&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(a + b) % p = (a % p + b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a - b) % p = (a % p - b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a * b) % p = (a % p * b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;结合律&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a + b) % p + c) = (a + (b + c) % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a * b) % p * c) = (a * (b * c) % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;交换律&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a + b) % p = (b + a) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a * b) % p = (b * a) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;分配律&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a + b) % p = (a % p + b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a + b) % p * c) % p = ((a * c) % p + (b * c) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;重要定理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若 a ≡ b (mod p)，则对于任意的 c，都有(a + c) ≡ (b + c) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若 a ≡ b (mod p)，则对于任意的 c，都有(a * c) ≡ (b * c) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若 a ≡ b (mod p)，c ≡ d (mod p)，则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a + c) ≡ (b + d) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a - c) ≡ (b - d) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a * c) ≡ (b * d) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a / c) ≡ (b / d) (mod p)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a mod p的逆元便是可以使 a * a&amp;#x27; mod p = 1 的最小a&amp;#x27;。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;推导过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推导过程&#34;&gt;#&lt;/a&gt; 推导过程&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;式1：c=m^e%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式2：m=c^d%N&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将式 1 带入式 2 得 m = (m ^ e % N) ^ d % N&lt;/p&gt;
&lt;p&gt;需要证明：m == (m ^ e % N) ^ d % N&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(m^e%N)^d%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt;  (m^e)^d%N #模运算 a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m^(e*d)%N #幂的乘方，底数不变，指数相乘&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 e * d ≡ 1 (mod φ(N)) 即 e * d = K * φ(N) + 1，K 为任意正整数，代入得：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m^(K*φ(N)+1))%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m^(K*φ(N)*m^1)%N # 同底数相乘，指数相加&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m^(K*φ(N)*m)%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; ((m^φ(N)^K%N*m)%N # 幂的乘方，底数不变，指数相乘&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; ((m^φ(N)^K%N*m%N)%N # (a * b) % p = (a % p * b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; ((m^φ(N)%N)^K%N*m%N)%N # a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (1^K%N*m%N)%N # 根据欧拉定理：a^φ(n)≡1 mod n 即 a^φ(n) mod n = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m%N)%N # 1^K%N=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m%N)%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m%N)^1%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m^1)%N   # a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; m%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m  #因为 m &amp;lt; N&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsarsa基础题目及脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsarsa基础题目及脚本&#34;&gt;#&lt;/a&gt; 【CTF-RSA】RSA 基础题目及脚本&lt;/h1&gt;
&lt;h3 id=&#34;随机生成flag&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#随机生成flag&#34;&gt;#&lt;/a&gt; 随机生成 flag&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=string.printable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#随机生成flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(10):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(10):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag += a[random.randint(0, 99)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = hashlib.md5(flag.encode()).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;quot;flag&amp;#123;&amp;quot; + flag + &amp;quot;&amp;#125;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from uuid import uuid1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag=&amp;quot;flag&amp;#123;&amp;quot;+str(uuid1())+&amp;quot;&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/6bb7113e6f3e65e1f762f2565539c32563b340c1.png%40!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;出题脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;p=&amp;quot;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;q=&amp;quot;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;d=&amp;quot;,d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/d7ebf723ee05575e951a9dcebe6c6e8899e90e93.png%401256w_350h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;已知ndec求m&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#已知ndec求m&#34;&gt;#&lt;/a&gt; 已知 n,d,e,c 求 m&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 14685532699024100754723222996385121368294636639693750794149020559314539676501066491415844320990799035552463714403031072164829458702780715523923962246149328887690893262271480633736651143634392056066729487305166335857950659680699210683976952113003674104898343893168719508462975991580551696824510044412974267585312807460664570245139015568859112921920860421973308538800641652781742897528769692264955229878206911313791989518088100099218315995549914435278654377368771668058107642713121127495780090852489015591581414806590111818355121157794129813430710822697558144598815860067978324469091074823400715400666808772858128261149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d= 10655677501818714057545408290692306276248758047017058020876274084213258239416744966450976471246402284779991562186357882946337721435118045765127426899173581894141706933500094886492805160951008521020815528782559085235105783294876017603112074153984218299742602608478449101819428678878037976091306073545785820932796422483686522431260926680891531210950251782422010888047909274618007401655588566411972291526501884077240225819170340160706732901152519829956055255218835518533347875405883278225018714890042991619568316304958478955576005445279807142753050999269866987221510643119355301877102904394259290548609330522059178100989&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 7937297427288435728721973474925856865675225171317301007619581716746999628275946964127516634203401830643076435690247635478297903236185011960902817030042080567027165802992734580344202744697251074454156026031417427325660809453340428989949816426637434868049018580855865080715251672252410696685286047485204432648545886024276695749435709592994477514818763551176789963387889424072650811645828675090859926233585219662579177051353763021116106877502871331756544361402971459889233069752657661921397258845893293005099736406362733668960163109452223071514272504206470939914043855546880424121530822318600645513435826636440478681928&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c, d, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(m).decode()) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/78c48eb00ccb1dc84f95ef53eaec99891fa2affc.png%401256w_304h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;已知pqec求m&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#已知pqec求m&#34;&gt;#&lt;/a&gt; 已知 p,q,e,c 求 m&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 178974110759313878895493455207516672882434662571655460770401953730906926302476821805659378622536968418528094957044346203494793341636459433763427491907849563922785749794854266865548657682445692416895365631610849027415100889893466490767087266542637440212533807985124840688092762928583845838066174446047886496977&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 93610871651220602641323046206103959524660743045950590135111801621145944725719667412027010040112514078098465817329474817485502356054795293086881519931215167856745860801666777619204160653243683622930567962804914581845602027547589056026105213437044768786486688576038889017989891165091320977401144724582916902269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 10505609204533893330224001468185225454647695615253006709365840521320011117703729471412769493857753605106376689659952882885215696765275778768339621441610719177208351696489476567331875339672513868473669863672226315682278831184868041476134806131989809014422520472566202048041013413698358733781909446846787304422628166599338803127610040714545537436536348608012176828441837378861024372912755344397449657260043057239911064546424582314518819235470388313710641962070846850292694572345451390561142917224092435026246696084949470913298543523893386679712766629009873176804118782436042080621119334193337953451160118095182279971122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#数字转字节，转字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode()) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;![](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2tlZXAyMTIvbmltYS9tYWluLyVFNSVCMSU4RiVFNSVCOSU5NSVFNiU4OCVBQSVFNSU5QiVCRQ==&#34;&gt;https://raw.githubusercontent.com/keep212/nima/main/ 屏幕截图&lt;/span&gt; 2024-05-15 140447.png)&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsa基于n分解的rsa题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsa基于n分解的rsa题目&#34;&gt;#&lt;/a&gt; 【CTF-RSA】基于 N 分解的 RSA 题目&lt;/h1&gt;
&lt;p&gt;对 N 进行分解（只要知道 p 和 q, 就能解出任何 rsa）&lt;/p&gt;
&lt;p&gt;N 在有一般情况下不可分解的，如果 p 和 q 太接近，或相差过大，或 pq 很小等情况&lt;/p&gt;
&lt;h3 id=&#34;1在线查询分解网站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1在线查询分解网站&#34;&gt;#&lt;/a&gt; 1. 在线查询分解网站&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5mYWN0b3JkYi5jb20vaW5kZXgucGhw&#34;&gt;http://www.factordb.com/index.php&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;2使用yafu工具分解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2使用yafu工具分解&#34;&gt;#&lt;/a&gt; 2. 使用 yafu 工具分解&lt;/h3&gt;
&lt;p&gt;下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMveWFmdS8=&#34;&gt;https://sourceforge.net/projects/yafu/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#以分解49为例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yafu-x64.exe factor(49)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#导入文件进行分解，主要注意文本结尾要换行！！！不然要报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yafu-x64.exe &amp;quot;factor(@)&amp;quot; -batchfile 1.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3使用费马分解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3使用费马分解&#34;&gt;#&lt;/a&gt; 3. 使用费马分解&lt;/h3&gt;
&lt;p&gt;网上找的脚本，p 和 q 太接近&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def isqrt(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while y &amp;lt; x:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def fermat(n, verbose=True):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = isqrt(n) # int(ceil(n**0.5))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = isqrt(n) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while b*b != b2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # if verbose:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #     print(&amp;#x27;Trying: a=%s b2=%s b=%s&amp;#x27; % (a, b2, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a = a + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b = isqrt(b2) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        count += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q=a-b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert n == p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;a=&amp;#x27;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;b=&amp;#x27;,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;p=&amp;#x27;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;q=&amp;#x27;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;pq=&amp;#x27;,p*q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return p, q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fermat(n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4分解出来后用脚本解密即可&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4分解出来后用脚本解密即可&#34;&gt;#&lt;/a&gt; 4. 分解出来后，用脚本解密即可&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=gmpy2.invert(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;出题脚本-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-2&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h4&gt;
&lt;p&gt;p,q 接近，很快就能分解&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#下一个素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=gmpy2.next_prime(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(gmpy2.is_prime(q))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/afe1675f01cc159684046592319c16cdb6cdda0b.png%401256w_160h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;解题脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import  gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def isqrt(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while y &amp;lt; x:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def fermat(n, verbose=True):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = isqrt(n) # int(ceil(n**0.5))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = isqrt(n) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while b*b != b2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # if verbose:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #     print(&amp;#x27;Trying: a=%s b2=%s b=%s&amp;#x27; % (a, b2, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​        a = a + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​        b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​        b = isqrt(b2) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​        count += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    p=a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    q=a-b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    assert n == p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;a=&amp;#x27;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;b=&amp;#x27;,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    print(&amp;#x27;p=&amp;#x27;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    print(&amp;#x27;q=&amp;#x27;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;pq=&amp;#x27;,p*q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    return p, q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 11236396438945464079176717143196471087880430124798640194523124584883161483744355761881720924798661332027501424643154414538029585287580122761405974427818841257794157497994556608202723391478027760181705924317533420305444809223444128034654367210331137068958693840582892819495487826045956577156074156668942232139402108462349340352898572481115406698318121299787982873916502591396884489682255184448165523604671743400422220149772905676655777228607948091675612455989601008858361759327370403306760674195506394280387024357322586732298060169962426894360775981877169895632927906390632063530920611197753716095903307467004289983267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 4260482466101011731957430920901406417434306478040387371588613512063428441001754753741853444857207349755032658064826592770143368278573527632514794087007140974732031358793249329430363014561312271335226315065519570861993052432656879088776144909638480994662696119431870831156129142403063675855781198930583825083362703887688501680905266707624440432914989795886392952354713859444836529227033324455920455610359249535012999943891644938239837207994673190694512955995798836266797112432609992164908679997257920566918693544746179908166741635316261624634351348613130319346356388546672516037747806222134853885202448682842353199133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pq=fermat(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=pq[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=pq[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=gmpy2.invert(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode()) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/b51e22de0b0d9075a9020c02e6b730570f9d9be4.png%401256w_278h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsarsa密钥生成与读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsarsa密钥生成与读取&#34;&gt;#&lt;/a&gt; 【CTF-RSA】RSA 密钥生成与读取&lt;/h1&gt;
&lt;h2 id=&#34;安装pycryptodome模块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装pycryptodome模块&#34;&gt;#&lt;/a&gt; 安装 pycryptodome 模块&lt;/h2&gt;
&lt;h3 id=&#34;公钥生成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#公钥生成&#34;&gt;#&lt;/a&gt; 公钥生成&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 787228223375328491232514653709&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 814212346998672554509751911073&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 640970939378021470187479083920100737340912672709639557619757&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d= 590103645243332826117029128695341159496883001869370080307201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa_components = (n, e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keypair = RSA.construct(rsa_components)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;pubckey.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;) as f :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(keypair.exportKey())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;私钥生成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#私钥生成&#34;&gt;#&lt;/a&gt; 私钥生成&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 787228223375328491232514653709&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 814212346998672554509751911073&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 640970939378021470187479083920100737340912672709639557619757&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d= 590103645243332826117029128695341159496883001869370080307201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa_components = (n,e,d,p,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keypair = RSA.construct(rsa_components)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;private1.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;) as f :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(keypair.exportKey())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;公钥读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#公钥读取&#34;&gt;#&lt;/a&gt; 公钥读取&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;pubckey.pem&amp;quot;,&amp;quot;rb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = RSA.import_key(f.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;n = %d&amp;#x27; % key.n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;e = %d&amp;#x27; % key.e)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;私钥读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#私钥读取&#34;&gt;#&lt;/a&gt; 私钥读取&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;private1.pem&amp;quot;,&amp;quot;rb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = RSA.import_key(f.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;n = %d&amp;#x27; % key.n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;e = %d&amp;#x27; % key.e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;d = %d&amp;#x27; % key.d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;p = %d&amp;#x27; % key.p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;q = %d&amp;#x27; % key.q)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;出题脚本-基于n分解的题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-基于n分解的题目&#34;&gt;#&lt;/a&gt; 出题脚本 - 基于 N 分解的题目&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#下一个素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=int(gmpy2.next_prime(p))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;a272722c1db834353ea3ce1d9c71feca&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_c=libnum.n2s(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa_components = (n, e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keypair = RSA.construct(rsa_components)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;pubckey1.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;) as f :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(keypair.exportKey())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;flag.txt&amp;quot;,&amp;quot;wb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(flag_c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/335173d5bac49444e1ea16dd80a587d2e0dcbf93.png%401256w_468h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/bedadfdad9bcba50f4c7ed4dd4a96ff4811dd61b.png%401256w_192h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;解题脚本-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-2&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def isqrt(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while y &amp;lt; x:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def fermat(n, verbose=True):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = isqrt(n) # int(ceil(n**0.5))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = isqrt(n) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while b*b != b2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # if verbose:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #     print(&amp;#x27;Trying: a=%s b2=%s b=%s&amp;#x27; % (a, b2, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a = a + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b = isqrt(b2) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        count += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q=a-b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert n == p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;a=&amp;#x27;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;b=&amp;#x27;,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;p=&amp;#x27;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;q=&amp;#x27;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;pq=&amp;#x27;,p*q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return p, q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;pubckey1.pem&amp;quot;,&amp;quot;rb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = RSA.import_key(f.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n=key.n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e=key.e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;flag.txt&amp;quot;,&amp;quot;rb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c=f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c=libnum.s2n(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#费马分解,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1=fermat(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=n1[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=n1[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/1989cf5f79a4a51208c0ba623d1290f5c9cff21c.png%40!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;进阶自动生成密钥及加解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#进阶自动生成密钥及加解密&#34;&gt;#&lt;/a&gt; 进阶 —— 自动生成密钥及加解密&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import PKCS1_v1_5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto import Random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import PKCS1_OAEP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;random_generator = Random.new().read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa = RSA.generate(2048, random_generator)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 生成私钥&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private_key = rsa.exportKey()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# print(private_key.decode(&amp;#x27;utf-8&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;rsa_private_key.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;)as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(private_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 生成公钥&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public_key = rsa.publickey().exportKey()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# print(public_key.decode(&amp;#x27;utf-8&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;rsa_public_key.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;)as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(public_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#测试用密钥加密&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public_key = RSA.importKey(public_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msg=&amp;#x27;flag&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pk = PKCS1_v1_5.new(public_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;encrypt_text = pk.encrypt(msg.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(encrypt_text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#测试密钥解密&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private_key = RSA.importKey(private_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pk = PKCS1_v1_5.new(private_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msg = pk.decrypt(encrypt_text,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(msg)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#两种标准&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa_components = (n, e, int(d), p, q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arsa = RSA.construct(rsa_components)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsakey = RSA.importKey(arsa.exportKey())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsakey = PKCS1_OAEP.new(rsakey)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;decrypted = rsakey.decrypt(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(decrypted)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsa共模攻击脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsa共模攻击脚本&#34;&gt;#&lt;/a&gt; 【CTF-RSA】共模攻击脚本&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/ec5eb5692b3dec285a513ca7ce945dbaa4eedb00.png%401256w_354h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-3&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e1=2333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e2=23333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;6ed4c74e022cb18c8039e96de93aa9ce&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1=pow(m,e1,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2=pow(m,e2,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n1=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;e1=&amp;quot;,e1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c1=&amp;quot;,c1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n2=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;e2=&amp;quot;,e2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c2=&amp;quot;,c2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/fa8f24b2218ffda191d24a04e651d113340c096e.png%401256w_370h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;解密脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密脚本&#34;&gt;#&lt;/a&gt; 解密脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 25333966058003377512707481338795714713737652659944601834182685873529702913988641983855700459996104700470621411559153944988952210084014634675583566338568882440708528997808798650962116756969822211586531522430245040013570571043385238601846104615050089457836721437790715225367971106085839523500735480715155424498941150468093083816830215632716244390679417218873179734276657411907216486790815037105108306055794473002315541787461904728375164737225486501009857299717749346279371251245318729951905832578739696926931502225899707226264570557623527701806829827566904224572897378639191756878049342203546309520458672464170859577433&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e1= 2333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1= 11355981897781478907853356911752561659125575027336719997290835661089901154031171698660586203170528368228850895159361637188990782030255983633790580700032092629587631108597144196551438410868034739981960656110887650747325311613900008001234835897835613759692146419080113176963747835592656185435741504176116672174539018089139547795447109458469225330809064539216773123671814859510069089532677704482026169178543062578686794346026774853085101278125763460212801929360456888869350105294595904940799522522144740464043605342348269086324747729288399275079874271519208155039364092577755518532799345651172433227745483422620900776136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e2= 23333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2= 1326499538902841116411674554069945581390130048432351353260154261863309471312810811160302458644816390944833633923435634961251092531893503039914793217247984595331920909367627316087404934402312358642315675486438968585084964845763881078835787872160374025547400141298650794551970291119975344578667689961134814676553190178139842507675899262024572370313939107080072875068218336255452161407859907308656094331557912187788276334833723893856310434523337557011032081467262457427167978528280339494077785813461280853735266463152709443731638714219391773144349752633555310299318290576258086971373777118482642702020599928071855133041&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#共模攻击&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#共模攻击函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def rsa_gong_N_def(e1,e2,c1,c2,n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e1, e2, c1, c2, n=int(e1),int(e2),int(c1),int(c2),int(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = gmpy2.gcdext(e1, e2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s1 = s[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s2 = s[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if s1 &amp;lt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s1 = - s1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c1 = gmpy2.invert(c1, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    elif s2 &amp;lt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s2 = - s2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c2 = gmpy2.invert(c2, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m = (pow(c1,s1,n) * pow(c2 ,s2 ,n)) % n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return int(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = rsa_gong_N_def(e1,e2,c1,c2,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/db1d26321464b070f47f0a1977de7ecb752ae6eb.png%401256w_230h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;共模攻击原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#共模攻击原理&#34;&gt;#&lt;/a&gt; 共模攻击原理&lt;/h3&gt;
&lt;p&gt;两个及以上的公钥 (n,e) 来加密同一条信息 m&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;c1 = pow(m, e1, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2 = pow(m, e2, n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;e1，e2 互质，则有&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gcd(e1,e2)=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据扩展欧几里德算法 对于不完全为 0 的整数 a，b，gcd（a，b）表示 a，b 的最大公约数。那么一定存在整数 x，y 使得 gcd（a，b）=ax+by&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;e1*s1+e2*s2 = 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;s1、s2 皆为整数，但是一正一负，假设 s1 为正数，s2 为负数&lt;/p&gt;
&lt;p&gt;因为&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;c1 = m^e1%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2 = m^e2%n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可得：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2)%n = ((m^e1%n)^s1(m^e2%n)^s2)%n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据模运算性质： 幂运算是一种关于幂的数学运算。同底数幂相乘，底数不变，指数相加。同底数幂相除，底数不变，指数相减。幂的乘方，底数不变，指数相乘。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(a * b) % p = (a % p * b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;简化公式为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2)%n = ((m^e1%n)^s1*(m^e2%n)^s2)%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (c1^s1*c2^s2)%n = ((m^e1%n)^s1%n*(m^e2%n)^s2%n)%n #(a * b) % p = (a % p * b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (c1^s1*c2^s2)%n = ((m^e1)^s1%n*(m^e2)^s2%n)%n #((a % p) ^ b) % p =a ^ b % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (c1^s1*c2^s2)%n = ((m^e1)^s1*(m^e2)^s2)%n # (a % p * b % p) % p=(a * b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt;(c1^s1*c2^s2)%n = ((m^(e1*s1)*(m^(e2*s2))%n #。幂的乘方，底数不变，指数相乘。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2)%n = (m^(e1*s1+e2*s2))%n  # 同底数幂相乘，底数不变，指数相加。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为 e1&lt;em&gt;s1+e2&lt;/em&gt;s2 = 1 得：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2)%n = (m^1)%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2）%n=m&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述就是 rsa 共模攻击的过程&lt;/p&gt;
&lt;p&gt;因此，同一 m，同一 n, 不同 e，进行加密。在不需要知道 d 的情况下，可以进行解密。&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsawiener维纳攻击脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsawiener维纳攻击脚本&#34;&gt;#&lt;/a&gt; 【CTF-RSA】wiener (维纳) 攻击脚本&lt;/h1&gt;
&lt;p&gt;低解密指数攻击&lt;/p&gt;
&lt;p&gt;维纳攻击:e 指数很大 (理论上 d&amp;lt;N**0.25 此攻击起作用)&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-4&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#计算d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nbits=1024&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d = random.getrandbits(nbits // 4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (libnum.gcd(d, phi_n) == 1 and 36 * pow(d, 4) &amp;lt; n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#计算e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = libnum.invmod(d,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;输出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=102099548361332638344237630396918304669480123432427691789000801421929226904417516565900645418525797159668929644513100700481417366819546101164265596706858513650095068198188946822981224172023933260431303286767867370050964230357219983386055508144712031982008096516285393789767140630413556460318866725444111200943&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=94994203498929475603874878316562406769119091464658088508285677241091060748158032542307067657105896639464248805968843801720116349229945077164078734338861088173913967531166751856585737460477446495550234322955763049253862441121077805134024431490817802775319606751537898284798700294616843500662903168724602836801&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=81573644335666712672791855949066359386986007425938431546920059710780388358488503125182517117627957949413515274338734396361948242477931901530434398164748401317943265396004901457700820503669867532428599683112699749720514979210181537932231600377359054106599204293139340781914077341382222025122079086888130243607&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-3&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def continuedFra(x, y):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;计算连分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param x: 分子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param y: 分母&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return: 连分数列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cf = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while y:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cf.append(x // y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x, y = y, x % y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def gradualFra(cf):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;计算传入列表最后的渐进分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param cf: 连分数列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return: 该列表最后的渐近分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    numerator = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    denominator = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for x in cf[::-1]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 这里的渐进分数分子分母要分开&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        numerator, denominator = denominator, x * denominator + numerator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return numerator, denominator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def solve_pq(a, b, c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;使用韦达定理解出pq，x^2−(p+q)∗x+pq=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param a:x^2的系数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param b:x的系数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param c:pq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return:p，q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    par = gmpy2.isqrt(b * b - 4 * a * c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return (-b + par) // (2 * a), (-b - par) // (2 * a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def getGradualFra(cf):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;计算列表所有的渐近分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param cf: 连分数列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return: 该列表所有的渐近分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gf = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(1, len(cf) + 1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gf.append(gradualFra(cf[:i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return gf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def wienerAttack(e, n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param e:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param n:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return: 私钥d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cf = continuedFra(e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gf = getGradualFra(cf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for d, k in gf:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if k == 0: continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (e * d - 1) % k != 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        phi = (e * d - 1) // k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p, q = solve_pq(1, n - phi + 1, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if p * q == n:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=102099548361332638344237630396918304669480123432427691789000801421929226904417516565900645418525797159668929644513100700481417366819546101164265596706858513650095068198188946822981224172023933260431303286767867370050964230357219983386055508144712031982008096516285393789767140630413556460318866725444111200943&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=94994203498929475603874878316562406769119091464658088508285677241091060748158032542307067657105896639464248805968843801720116349229945077164078734338861088173913967531166751856585737460477446495550234322955763049253862441121077805134024431490817802775319606751537898284798700294616843500662903168724602836801&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=81573644335666712672791855949066359386986007425938431546920059710780388358488503125182517117627957949413515274338734396361948242477931901530434398164748401317943265396004901457700820503669867532428599683112699749720514979210181537932231600377359054106599204293139340781914077341382222025122079086888130243607&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=wienerAttack(e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c, d, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(m).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsa低加密指数攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsa低加密指数攻击&#34;&gt;#&lt;/a&gt; 【CTF-RSA】低加密指数攻击&lt;/h1&gt;
&lt;p&gt;加密指数指的是 e，e 一般选取 65535，当 e 很小，可直接破解。&lt;/p&gt;
&lt;p&gt;这类攻击在 CTF 题中，一般是 e=3&lt;/p&gt;
&lt;p&gt;如果 e = 3，且 m^e &amp;lt; n，c 开 3 次根式，得到 m。&lt;/p&gt;
&lt;p&gt;如果 e = 3 ，且 m^e &amp;gt; n，那么设 k，有:c = m^e +kn&lt;/p&gt;
&lt;p&gt;爆破 k，如果 c - kn 能开三次根式，得到 m。&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-5&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=gmpy2.invert(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n=18361906160620022464979295059548883385156763943394380833201208639301999608709114912270056929331270217554369812335058385974338512141859324983921470930958736360738390027166728364010907401951540109944793784157080984583656592972723810889149243441868648226149805798535282656161928879613643809863794073478884041202910160124060619201573772596307101846646211547036087826821419144901484859844669828292496176238256415692144872092048438977709004772671999206253947138558324768798764429817036656232137523183071900974937071243387207692734022115048640542690719058701296145264383203094482976978127329751006501499156643644516658977039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=2217344750798294937344050117513831761010547351781457575945714176628679412650463329423466955026804439931765627111856888102133234836914006818023839994342283023142702993182665344445325734299047409223354338948863171846780674244925724334091153701697864918695050507247415283070309&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-4&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def de(c, e, n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    k = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mm = c + n*k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result, flag = gmpy2.iroot(mm, e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if True == flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        k += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=18361906160620022464979295059548883385156763943394380833201208639301999608709114912270056929331270217554369812335058385974338512141859324983921470930958736360738390027166728364010907401951540109944793784157080984583656592972723810889149243441868648226149805798535282656161928879613643809863794073478884041202910160124060619201573772596307101846646211547036087826821419144901484859844669828292496176238256415692144872092048438977709004772671999206253947138558324768798764429817036656232137523183071900974937071243387207692734022115048640542690719058701296145264383203094482976978127329751006501499156643644516658977039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=2217344750798294937344050117513831761010547351781457575945714176628679412650463329423466955026804439931765627111856888102133234836914006818023839994342283023142702993182665344445325734299047409223354338948863171846780674244925724334091153701697864918695050507247415283070309&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=de(c,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsa低加密指数广播攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsa低加密指数广播攻击&#34;&gt;#&lt;/a&gt; 【CTF-RSA】低加密指数广播攻击&lt;/h1&gt;
&lt;p&gt;如果选取的加密指数较低，并且使用了相同的加密指数给一个接受者的群发送相同的信 息，那么可以进行广播攻击得到明文。&lt;/p&gt;
&lt;p&gt;在 CTF 中，n、 c 不同，明文 m， e 相同，其 e 比较小。使用中国剩余定理求解&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-6&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def rsa_def(e,m):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    #字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n_lt.append(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c_lt.append(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n_lt=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c_lt=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;#x27;flag&amp;#123;2cb2eb4b2c7fdf4e94e10344be856446&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(7):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rsa_def(e,m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n=&amp;quot;,n_lt)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c=&amp;quot;,c_lt)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;e= 23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= [28303622412582000131021407474534006627921799223355183106077505407831206380301837802779082885240206111505508547474437431362756095431762358110052438004267595363538307523189378160064363522004491855944919119597205658182749902342637937883927268605382518011199700158912849626569207674748509433787195694903010718581029837747981171596866887181030964844788562253129379797530253580033726662830283337751897717068387389316332038495989183875297434865972913656079980895151344185488446963115671720552088880147981915346363110130965930170755630143071342168860938247998306451689613273637151748431977358920444034764161368269864228260683, 20251452587759389751052720079014998244267616359016633593589175521621218456216360455295414295294412150809772398298894292213274346026242406070081445287045202845357692424984414731052455823237307016241779223277378745608301817094614950269964820345061379221697200410141112889155488951350825981000289053073683521941913801494200697246114178401082071562438086829634844209636507018099598320310860622688713956769159252262767722969006737392560062259268529057175218726693282184813651015664791336482617886917300606453413316038320561235717486917130822910721442930492265275565223486795987687552720234029811300311632264662984617939923, 14346699094920477306010014637065577396695146335017849885453710192053891302468843510448258124074965535071629427969248410027905493732280558837459311032388092215070142163153478283674348594955980639353521355441745601559314424603582895058504836475536927137989360726605508903641768784888818544654282487163986929656604018129571142512687134510041787214732147219138074791325301979785700412656267988690767850022868346773574953938614889361051066241822201821473385327983954592011097734422105185886881113996631236580465724811634148336929200213266140831603665217513011608681717494792540922272443225320166269546005384086341666270237, 20666343363156785654985613960098447088558685398640350288254320340496666688516590319064027915211047314924250684432033752242942966685842979794980296365888247039788491929724979065867747495180389495328018143172137761614969040970809046901475911809919819225814792921474015886234384233024615479366352095594442693243266913593735671556255730133253641239650968425165554567952946701451909296290474332348774876523488586367522569297383954521921027624472179940907798879661735838019525520096563628175856915838339369924996762439573028482405388108352766763640977505904313025884575825285855552752229632152736769500408011313183214392153, 14480286280129696514270349363639135690194813767915498959160314284345452109136054438918279879687988685577041179672481826413238969577366809496037008028319471115982075204004599853880859319285735251215720017350744902158301356474516391525891691871856049412845949704986820012935591952822443217869963788393612548023802605993419800696221415244404127247038175359086885939193086585037732169908522678773825469337954376145864799261157893957600692457882657459928699280090202008141189229552755119857595139897657107729811724161618369203527263317202234130089849201954557040754721260368951656599885121453704835178188315313686147051923, 25135420084057729138962207770153147249216029716010916549133072798022173651499205043606282483768583672328760981332426505696227594660119754631421070583142367295963352819026044721993905256646249896759721623276462449809859752925530184188042885144607718530989588516038414786694143648547597489366540402541899809051752326713817126431123487448396593702877775626937606471335455786422703851710737764866288332272933341502968739417462132708542330342772267969202023083086220041463278283077205795088208728884309357563743034975287256152505174426461145926368526423625546487258149118398734494641732919040020011403436393212191779432673, 14170383666109427589521313589398954693073999267690679429232942135812456809241794890000695435122337549594511547359442056505587452722540626257265898140591417773350910678019484155053006149919493857135172612823857432437751164396086806969247887722030626100150488635591461262100283389559941169785826738781070083631000931652943447440214092308220562550698836331050228146220398533720225203000322816574801344359625600962347408643059867457659818853613771081585704280121043234667995329377274986249499236061703041940482592689369088929027039513948760377275611911167035304174744652049727637136905531242917152702461696223811033602849]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= [15173807047472256447845684717251358912200122697842932385546098349809093752333910920794395969740005443648644569649151629387591807920298558650496538425219132987551223405408877632454158688064537658192460658356150057322506966948335987016028449001715452265499461776374053182409407643957629092529093158637338071846233068554991170358967852459399326506707061476129428800423426317404552334777482684000352415432732181431121500596157289667232882302431654245553236480148739150161235082097663476820421720676277364383804753596422154646210167713035821889664523396840593631837829893992707455057905959892044493550616949765027220821785, 11938220729710468926557967838524738768470825644612868603230757095292323093455865828959914062879644655551785832471143737493581841344185257107375234777532911128608967712481626952843271008996247807352342523498164298300504938844670197912254303803381691946636195711489073144969303997622633132286422880867271226194190255544078235550661988616892022747818310141637456428313681765661471975562221216381338670295432045738683059404018667138703833764008763778236536867798296840402557891175517847355068530786232834297244608865178392836134797580251614936231688236439984467175534272554294756436715223184842969069377142090754306086587, 8372259615196673779309934993544198416663757780787798713946610637626427463845006237283078696569258480955022027747227029707234987550305246888247136777153012680650117836880636761607863194764822189962747464025510178303075209848879650377247816192817842261342129001268715009974847247605278255193595427547890570752506772700910884836219465705104991007024562594310924752843471782461218371258698746171751166701903238716161531339945132602715536032022798223230723435175807913796348676823846038302524566716088962679362404006745480422576452325081934683229769895346449322176285464821570547521826791307002350786334042239662645563957, 5733976274584604503158989659243088656260484646101064598377820249243214941836104198790082691176209885137416348787627889019963374849716526301643203575745466143947067545186455524140490976182048095864032981061075827442834540637189552464126900919432241265888539704207825612690608583372413157779228956416948469330266827436190056447128563728081276323274058344982585240713393646248729347606147217955847165489399173144936327439947001621504890772515826043945534422085396820828587397025376566166372721369230275346318899064967181577034570239626240177509679081760324839630754365907895622832683887937718999018391437954527915504901, 11962620418277676374646808244354446889608161479405151063272409866849868879538467999438518866434088322058589141374532978662604437111947985330191441627067325730811388148805199455276493437021336994786423781063493329839484836248757775950256990830760793068417392697398710960950052662407124826751941922179917894234165713413459177376070935878803205790872796797683585051588692549376205056943215230738458048997617777633513907061623849828839043504459133638367820741574829044986070351587722416355383246077069665269193960717664499012759258851692437332541468322361668893398759490048718179565240789060484618800904819752877790839865, 14514190627252965989458912133650177358276024599448353767974956651001711285954527380677271379264744774560583389294677415329151572066496871191623403237537474484131590211694780397994927633637859321564626876861928816731833317835860346102068049048681141741602880112650970773766475860379331822623866557451204868940771037743371956603238411685645585455864559001752753943194800979965196045576484095541094062989278859774751950753918707697030394009501569165004933027458740532191312977538863175872726905565882031876620249853780381000852597492112187214600432630583588524386583025190254266601054787278440312207823089175947291805412, 7170711933239761804272372742798978256972824803609483931621008487728643522487624210005513129465353379861752443367806850891359310644714068239910036947843884154622114312629119056999639223587198702912932135706473355115493813596396494080029186640406895454294620829968679709936590321511385222821447179694303480562868112280011278299778419343863090503526288120666396481735329192528853631884136207219752754405396833982641885684715010162118882211883389908927141918526128685468851895086930506025457622185661218790174083864969366351390048046735613504180183923456680037579550089548742296821712544283816875194625748204510190006748]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解密脚本-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密脚本-2&#34;&gt;#&lt;/a&gt; 解密脚本&lt;/h3&gt;
&lt;h4 id=&#34;解密脚本1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密脚本1&#34;&gt;#&lt;/a&gt; 解密脚本 1&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from gmpy2 import invert, gcd, iroot&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def op(x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in x:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res *= i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return res&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def CRT(m, a):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert (len(m) == len(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M = op(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sum = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for m, a in zip(m, a):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Mi = M // m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ti = invert(Mi, m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sum += a * ti * Mi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return sum % M&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def GCRT(m, a):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert (len(m) == len(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    curm, cura = m[0], a[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for m, a in zip(m[1:], a[1:]):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        d = gcd(curm, m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c = a - cura&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        assert (c % d == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        K = c // d * invert(curm // d, m // d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cura += curm * K&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        curm = curm * m // d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cura % curm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= [28303622412582000131021407474534006627921799223355183106077505407831206380301837802779082885240206111505508547474437431362756095431762358110052438004267595363538307523189378160064363522004491855944919119597205658182749902342637937883927268605382518011199700158912849626569207674748509433787195694903010718581029837747981171596866887181030964844788562253129379797530253580033726662830283337751897717068387389316332038495989183875297434865972913656079980895151344185488446963115671720552088880147981915346363110130965930170755630143071342168860938247998306451689613273637151748431977358920444034764161368269864228260683, 20251452587759389751052720079014998244267616359016633593589175521621218456216360455295414295294412150809772398298894292213274346026242406070081445287045202845357692424984414731052455823237307016241779223277378745608301817094614950269964820345061379221697200410141112889155488951350825981000289053073683521941913801494200697246114178401082071562438086829634844209636507018099598320310860622688713956769159252262767722969006737392560062259268529057175218726693282184813651015664791336482617886917300606453413316038320561235717486917130822910721442930492265275565223486795987687552720234029811300311632264662984617939923, 14346699094920477306010014637065577396695146335017849885453710192053891302468843510448258124074965535071629427969248410027905493732280558837459311032388092215070142163153478283674348594955980639353521355441745601559314424603582895058504836475536927137989360726605508903641768784888818544654282487163986929656604018129571142512687134510041787214732147219138074791325301979785700412656267988690767850022868346773574953938614889361051066241822201821473385327983954592011097734422105185886881113996631236580465724811634148336929200213266140831603665217513011608681717494792540922272443225320166269546005384086341666270237, 20666343363156785654985613960098447088558685398640350288254320340496666688516590319064027915211047314924250684432033752242942966685842979794980296365888247039788491929724979065867747495180389495328018143172137761614969040970809046901475911809919819225814792921474015886234384233024615479366352095594442693243266913593735671556255730133253641239650968425165554567952946701451909296290474332348774876523488586367522569297383954521921027624472179940907798879661735838019525520096563628175856915838339369924996762439573028482405388108352766763640977505904313025884575825285855552752229632152736769500408011313183214392153, 14480286280129696514270349363639135690194813767915498959160314284345452109136054438918279879687988685577041179672481826413238969577366809496037008028319471115982075204004599853880859319285735251215720017350744902158301356474516391525891691871856049412845949704986820012935591952822443217869963788393612548023802605993419800696221415244404127247038175359086885939193086585037732169908522678773825469337954376145864799261157893957600692457882657459928699280090202008141189229552755119857595139897657107729811724161618369203527263317202234130089849201954557040754721260368951656599885121453704835178188315313686147051923, 25135420084057729138962207770153147249216029716010916549133072798022173651499205043606282483768583672328760981332426505696227594660119754631421070583142367295963352819026044721993905256646249896759721623276462449809859752925530184188042885144607718530989588516038414786694143648547597489366540402541899809051752326713817126431123487448396593702877775626937606471335455786422703851710737764866288332272933341502968739417462132708542330342772267969202023083086220041463278283077205795088208728884309357563743034975287256152505174426461145926368526423625546487258149118398734494641732919040020011403436393212191779432673, 14170383666109427589521313589398954693073999267690679429232942135812456809241794890000695435122337549594511547359442056505587452722540626257265898140591417773350910678019484155053006149919493857135172612823857432437751164396086806969247887722030626100150488635591461262100283389559941169785826738781070083631000931652943447440214092308220562550698836331050228146220398533720225203000322816574801344359625600962347408643059867457659818853613771081585704280121043234667995329377274986249499236061703041940482592689369088929027039513948760377275611911167035304174744652049727637136905531242917152702461696223811033602849]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= [15173807047472256447845684717251358912200122697842932385546098349809093752333910920794395969740005443648644569649151629387591807920298558650496538425219132987551223405408877632454158688064537658192460658356150057322506966948335987016028449001715452265499461776374053182409407643957629092529093158637338071846233068554991170358967852459399326506707061476129428800423426317404552334777482684000352415432732181431121500596157289667232882302431654245553236480148739150161235082097663476820421720676277364383804753596422154646210167713035821889664523396840593631837829893992707455057905959892044493550616949765027220821785, 11938220729710468926557967838524738768470825644612868603230757095292323093455865828959914062879644655551785832471143737493581841344185257107375234777532911128608967712481626952843271008996247807352342523498164298300504938844670197912254303803381691946636195711489073144969303997622633132286422880867271226194190255544078235550661988616892022747818310141637456428313681765661471975562221216381338670295432045738683059404018667138703833764008763778236536867798296840402557891175517847355068530786232834297244608865178392836134797580251614936231688236439984467175534272554294756436715223184842969069377142090754306086587, 8372259615196673779309934993544198416663757780787798713946610637626427463845006237283078696569258480955022027747227029707234987550305246888247136777153012680650117836880636761607863194764822189962747464025510178303075209848879650377247816192817842261342129001268715009974847247605278255193595427547890570752506772700910884836219465705104991007024562594310924752843471782461218371258698746171751166701903238716161531339945132602715536032022798223230723435175807913796348676823846038302524566716088962679362404006745480422576452325081934683229769895346449322176285464821570547521826791307002350786334042239662645563957, 5733976274584604503158989659243088656260484646101064598377820249243214941836104198790082691176209885137416348787627889019963374849716526301643203575745466143947067545186455524140490976182048095864032981061075827442834540637189552464126900919432241265888539704207825612690608583372413157779228956416948469330266827436190056447128563728081276323274058344982585240713393646248729347606147217955847165489399173144936327439947001621504890772515826043945534422085396820828587397025376566166372721369230275346318899064967181577034570239626240177509679081760324839630754365907895622832683887937718999018391437954527915504901, 11962620418277676374646808244354446889608161479405151063272409866849868879538467999438518866434088322058589141374532978662604437111947985330191441627067325730811388148805199455276493437021336994786423781063493329839484836248757775950256990830760793068417392697398710960950052662407124826751941922179917894234165713413459177376070935878803205790872796797683585051588692549376205056943215230738458048997617777633513907061623849828839043504459133638367820741574829044986070351587722416355383246077069665269193960717664499012759258851692437332541468322361668893398759490048718179565240789060484618800904819752877790839865, 14514190627252965989458912133650177358276024599448353767974956651001711285954527380677271379264744774560583389294677415329151572066496871191623403237537474484131590211694780397994927633637859321564626876861928816731833317835860346102068049048681141741602880112650970773766475860379331822623866557451204868940771037743371956603238411685645585455864559001752753943194800979965196045576484095541094062989278859774751950753918707697030394009501569165004933027458740532191312977538863175872726905565882031876620249853780381000852597492112187214600432630583588524386583025190254266601054787278440312207823089175947291805412, 7170711933239761804272372742798978256972824803609483931621008487728643522487624210005513129465353379861752443367806850891359310644714068239910036947843884154622114312629119056999639223587198702912932135706473355115493813596396494080029186640406895454294620829968679709936590321511385222821447179694303480562868112280011278299778419343863090503526288120666396481735329192528853631884136207219752754405396833982641885684715010162118882211883389908927141918526128685468851895086930506025457622185661218790174083864969366351390048046735613504180183923456680037579550089548742296821712544283816875194625748204510190006748]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = CRT(n, c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1 = iroot(m, e)  # 开e次方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m1[0])))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(mpz(13040004482819734622317003488996400249726426925342964419221160229528546987125461670186727037), True)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b&amp;#x27;flag&amp;#123;2cb2eb4b2c7fdf4e94e10344be856446&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;阶梯脚本2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#阶梯脚本2&#34;&gt;#&lt;/a&gt; 阶梯脚本 2&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import binascii,gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from functools import reduce&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def CRT(mi, ai):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert(reduce(gmpy2.gcd,mi)==1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert (isinstance(mi, list) and isinstance(ai, list))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M = reduce(lambda x, y: x * y, mi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ai_ti_Mi = [a * (M // m) * gmpy2.invert(M // m, m) for (m, a) in zip(mi, ai)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return reduce(lambda x, y: x + y, ai_ti_Mi) % M&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= [28303622412582000131021407474534006627921799223355183106077505407831206380301837802779082885240206111505508547474437431362756095431762358110052438004267595363538307523189378160064363522004491855944919119597205658182749902342637937883927268605382518011199700158912849626569207674748509433787195694903010718581029837747981171596866887181030964844788562253129379797530253580033726662830283337751897717068387389316332038495989183875297434865972913656079980895151344185488446963115671720552088880147981915346363110130965930170755630143071342168860938247998306451689613273637151748431977358920444034764161368269864228260683, 20251452587759389751052720079014998244267616359016633593589175521621218456216360455295414295294412150809772398298894292213274346026242406070081445287045202845357692424984414731052455823237307016241779223277378745608301817094614950269964820345061379221697200410141112889155488951350825981000289053073683521941913801494200697246114178401082071562438086829634844209636507018099598320310860622688713956769159252262767722969006737392560062259268529057175218726693282184813651015664791336482617886917300606453413316038320561235717486917130822910721442930492265275565223486795987687552720234029811300311632264662984617939923, 14346699094920477306010014637065577396695146335017849885453710192053891302468843510448258124074965535071629427969248410027905493732280558837459311032388092215070142163153478283674348594955980639353521355441745601559314424603582895058504836475536927137989360726605508903641768784888818544654282487163986929656604018129571142512687134510041787214732147219138074791325301979785700412656267988690767850022868346773574953938614889361051066241822201821473385327983954592011097734422105185886881113996631236580465724811634148336929200213266140831603665217513011608681717494792540922272443225320166269546005384086341666270237, 20666343363156785654985613960098447088558685398640350288254320340496666688516590319064027915211047314924250684432033752242942966685842979794980296365888247039788491929724979065867747495180389495328018143172137761614969040970809046901475911809919819225814792921474015886234384233024615479366352095594442693243266913593735671556255730133253641239650968425165554567952946701451909296290474332348774876523488586367522569297383954521921027624472179940907798879661735838019525520096563628175856915838339369924996762439573028482405388108352766763640977505904313025884575825285855552752229632152736769500408011313183214392153, 14480286280129696514270349363639135690194813767915498959160314284345452109136054438918279879687988685577041179672481826413238969577366809496037008028319471115982075204004599853880859319285735251215720017350744902158301356474516391525891691871856049412845949704986820012935591952822443217869963788393612548023802605993419800696221415244404127247038175359086885939193086585037732169908522678773825469337954376145864799261157893957600692457882657459928699280090202008141189229552755119857595139897657107729811724161618369203527263317202234130089849201954557040754721260368951656599885121453704835178188315313686147051923, 25135420084057729138962207770153147249216029716010916549133072798022173651499205043606282483768583672328760981332426505696227594660119754631421070583142367295963352819026044721993905256646249896759721623276462449809859752925530184188042885144607718530989588516038414786694143648547597489366540402541899809051752326713817126431123487448396593702877775626937606471335455786422703851710737764866288332272933341502968739417462132708542330342772267969202023083086220041463278283077205795088208728884309357563743034975287256152505174426461145926368526423625546487258149118398734494641732919040020011403436393212191779432673, 14170383666109427589521313589398954693073999267690679429232942135812456809241794890000695435122337549594511547359442056505587452722540626257265898140591417773350910678019484155053006149919493857135172612823857432437751164396086806969247887722030626100150488635591461262100283389559941169785826738781070083631000931652943447440214092308220562550698836331050228146220398533720225203000322816574801344359625600962347408643059867457659818853613771081585704280121043234667995329377274986249499236061703041940482592689369088929027039513948760377275611911167035304174744652049727637136905531242917152702461696223811033602849]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= [15173807047472256447845684717251358912200122697842932385546098349809093752333910920794395969740005443648644569649151629387591807920298558650496538425219132987551223405408877632454158688064537658192460658356150057322506966948335987016028449001715452265499461776374053182409407643957629092529093158637338071846233068554991170358967852459399326506707061476129428800423426317404552334777482684000352415432732181431121500596157289667232882302431654245553236480148739150161235082097663476820421720676277364383804753596422154646210167713035821889664523396840593631837829893992707455057905959892044493550616949765027220821785, 11938220729710468926557967838524738768470825644612868603230757095292323093455865828959914062879644655551785832471143737493581841344185257107375234777532911128608967712481626952843271008996247807352342523498164298300504938844670197912254303803381691946636195711489073144969303997622633132286422880867271226194190255544078235550661988616892022747818310141637456428313681765661471975562221216381338670295432045738683059404018667138703833764008763778236536867798296840402557891175517847355068530786232834297244608865178392836134797580251614936231688236439984467175534272554294756436715223184842969069377142090754306086587, 8372259615196673779309934993544198416663757780787798713946610637626427463845006237283078696569258480955022027747227029707234987550305246888247136777153012680650117836880636761607863194764822189962747464025510178303075209848879650377247816192817842261342129001268715009974847247605278255193595427547890570752506772700910884836219465705104991007024562594310924752843471782461218371258698746171751166701903238716161531339945132602715536032022798223230723435175807913796348676823846038302524566716088962679362404006745480422576452325081934683229769895346449322176285464821570547521826791307002350786334042239662645563957, 5733976274584604503158989659243088656260484646101064598377820249243214941836104198790082691176209885137416348787627889019963374849716526301643203575745466143947067545186455524140490976182048095864032981061075827442834540637189552464126900919432241265888539704207825612690608583372413157779228956416948469330266827436190056447128563728081276323274058344982585240713393646248729347606147217955847165489399173144936327439947001621504890772515826043945534422085396820828587397025376566166372721369230275346318899064967181577034570239626240177509679081760324839630754365907895622832683887937718999018391437954527915504901, 11962620418277676374646808244354446889608161479405151063272409866849868879538467999438518866434088322058589141374532978662604437111947985330191441627067325730811388148805199455276493437021336994786423781063493329839484836248757775950256990830760793068417392697398710960950052662407124826751941922179917894234165713413459177376070935878803205790872796797683585051588692549376205056943215230738458048997617777633513907061623849828839043504459133638367820741574829044986070351587722416355383246077069665269193960717664499012759258851692437332541468322361668893398759490048718179565240789060484618800904819752877790839865, 14514190627252965989458912133650177358276024599448353767974956651001711285954527380677271379264744774560583389294677415329151572066496871191623403237537474484131590211694780397994927633637859321564626876861928816731833317835860346102068049048681141741602880112650970773766475860379331822623866557451204868940771037743371956603238411685645585455864559001752753943194800979965196045576484095541094062989278859774751950753918707697030394009501569165004933027458740532191312977538863175872726905565882031876620249853780381000852597492112187214600432630583588524386583025190254266601054787278440312207823089175947291805412, 7170711933239761804272372742798978256972824803609483931621008487728643522487624210005513129465353379861752443367806850891359310644714068239910036947843884154622114312629119056999639223587198702912932135706473355115493813596396494080029186640406895454294620829968679709936590321511385222821447179694303480562868112280011278299778419343863090503526288120666396481735329192528853631884136207219752754405396833982641885684715010162118882211883389908927141918526128685468851895086930506025457622185661218790174083864969366351390048046735613504180183923456680037579550089548742296821712544283816875194625748204510190006748]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=gmpy2.iroot(CRT(n, c), e)[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;13040004482819734622317003488996400249726426925342964419221160229528546987125461670186727037&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b&amp;#x27;flag&amp;#123;2cb2eb4b2c7fdf4e94e10344be856446&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsan不互素共享素数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsan不互素共享素数&#34;&gt;#&lt;/a&gt; 【CTF-RSA】N 不互素（共享素数）&lt;/h1&gt;
&lt;p&gt;两个 n 里使用有相同的素数 p 或 q 在 CTF 中，同样一个 e (一般为 65537) 和 m，有两个或多个 n 和 c 时，那么 n 之间可能是共享素数&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-7&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;c9d48baa792e91ce65d175bb586f8c24&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1=p1*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n2=p2*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1=pow(m,e,n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2=pow(m,e,n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n1=&amp;quot;,n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n2=&amp;quot;,n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c1=&amp;quot;,c1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c2=&amp;quot;,c2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;112033192839831410128229314623644016892457474214603544009293323660253481717951000555944274929385767454448600673603543705582070863346470535753409649573999460325173934406017517052071246438800130085989821611221908264571097633716174917625191690203659123336145054187255755394681607476738638792807609503583942128287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1= 10625543525346830676006870950185691831444597644902937688548664474839451789500623122399254396349043194137265309127150449785754269880715662352707412035793547680593086762929625928250971615306188339436585278519056416828788773974282747077277578312189120674125326857556669957819991694938110804921956107475524196753691190172084151806587432567633986959422611394848414182355921488672244553709452073236104935236677954344428768255255100054171572028934423627125634780087424402980388287407955842046167150933175146807998723396182109084926137033146724176484195516940148635702902548991068794155382834516404680151040115265524953368803&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n2= 16963368478863237165539514788629717230509794880335414979340928156272483952877461650346703404736600543573268654053853406528874405233365433480511950945751787459984056635129991630952167422872043167517367026291964118481932229618540409542768859684629875635644451769141400996752979258243212278679645758472226598679049513891130451209669678914961165598718327535139903961419600189590593818949508868366591386211578344734960982688428366608540144212331829055016414892080760884384459092360249396385618417969715029114886771538141181557047932980027849299798044339800149366277557448859678544386644358923506165421387377971452133400237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1= 3083814592613126614027965982601537654202006134791395656021465412286460166093457898156692884715856869567564841602842861925386434838975288348214401028294260689771237300101802894534580773219096180174526083320214279520998065109710357139026683126849406635064651704725592412836189737225530918963461500807604488934388123181506653107818366579852355169342727070144725895457018660958197755959464742004451789536791140205308500661680822479247916930501856845353744746803851281425962654216148374636811404978863628264660712674442063987082523071773406042384503834533479670504453823734240363238708085719130650821063973261950270161428&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2= 13740386298909001233815681484510642184547992744157132970350241427600231037472755614023548206789735269078590834449245923454385325492305659242435611300542852213722841909380700099178894703174590126112041224283933050906079878737882887340652224562292433380944052673538602232295072801399008587550855279599758738224727323486864666105237460948172863914507051497974186625462313445057775348133531846046663852734437590095553782981005686291660604880068105148369641552089807164999699933504010826666901604098508377083799595612159033508965994444726491533830781284339377808073755805290835250781114692808914390954773552997805080977899&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-5&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1= 10625543525346830676006870950185691831444597644902937688548664474839451789500623122399254396349043194137265309127150449785754269880715662352707412035793547680593086762929625928250971615306188339436585278519056416828788773974282747077277578312189120674125326857556669957819991694938110804921956107475524196753691190172084151806587432567633986959422611394848414182355921488672244553709452073236104935236677954344428768255255100054171572028934423627125634780087424402980388287407955842046167150933175146807998723396182109084926137033146724176484195516940148635702902548991068794155382834516404680151040115265524953368803&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n2= 16963368478863237165539514788629717230509794880335414979340928156272483952877461650346703404736600543573268654053853406528874405233365433480511950945751787459984056635129991630952167422872043167517367026291964118481932229618540409542768859684629875635644451769141400996752979258243212278679645758472226598679049513891130451209669678914961165598718327535139903961419600189590593818949508868366591386211578344734960982688428366608540144212331829055016414892080760884384459092360249396385618417969715029114886771538141181557047932980027849299798044339800149366277557448859678544386644358923506165421387377971452133400237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1= 3083814592613126614027965982601537654202006134791395656021465412286460166093457898156692884715856869567564841602842861925386434838975288348214401028294260689771237300101802894534580773219096180174526083320214279520998065109710357139026683126849406635064651704725592412836189737225530918963461500807604488934388123181506653107818366579852355169342727070144725895457018660958197755959464742004451789536791140205308500661680822479247916930501856845353744746803851281425962654216148374636811404978863628264660712674442063987082523071773406042384503834533479670504453823734240363238708085719130650821063973261950270161428&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2= 13740386298909001233815681484510642184547992744157132970350241427600231037472755614023548206789735269078590834449245923454385325492305659242435611300542852213722841909380700099178894703174590126112041224283933050906079878737882887340652224562292433380944052673538602232295072801399008587550855279599758738224727323486864666105237460948172863914507051497974186625462313445057775348133531846046663852734437590095553782981005686291660604880068105148369641552089807164999699933504010826666901604098508377083799595612159033508965994444726491533830781284339377808073755805290835250781114692808914390954773552997805080977899&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求最大公约数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=gmpy2.gcd(n1,n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1=n1//q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(q-1)*(p1-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d1=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c1,d1,n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#数字转字节，转字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;13040004482825389441096275928544521243339469450955206317293093209414597159068563158095508605&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;c9d48baa792e91ce65d175bb586f8c24&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1= 10625543525346830676006870950185691831444597644902937688548664474839451789500623122399254396349043194137265309127150449785754269880715662352707412035793547680593086762929625928250971615306188339436585278519056416828788773974282747077277578312189120674125326857556669957819991694938110804921956107475524196753691190172084151806587432567633986959422611394848414182355921488672244553709452073236104935236677954344428768255255100054171572028934423627125634780087424402980388287407955842046167150933175146807998723396182109084926137033146724176484195516940148635702902548991068794155382834516404680151040115265524953368803&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n2= 16963368478863237165539514788629717230509794880335414979340928156272483952877461650346703404736600543573268654053853406528874405233365433480511950945751787459984056635129991630952167422872043167517367026291964118481932229618540409542768859684629875635644451769141400996752979258243212278679645758472226598679049513891130451209669678914961165598718327535139903961419600189590593818949508868366591386211578344734960982688428366608540144212331829055016414892080760884384459092360249396385618417969715029114886771538141181557047932980027849299798044339800149366277557448859678544386644358923506165421387377971452133400237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1= 3083814592613126614027965982601537654202006134791395656021465412286460166093457898156692884715856869567564841602842861925386434838975288348214401028294260689771237300101802894534580773219096180174526083320214279520998065109710357139026683126849406635064651704725592412836189737225530918963461500807604488934388123181506653107818366579852355169342727070144725895457018660958197755959464742004451789536791140205308500661680822479247916930501856845353744746803851281425962654216148374636811404978863628264660712674442063987082523071773406042384503834533479670504453823734240363238708085719130650821063973261950270161428&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2= 13740386298909001233815681484510642184547992744157132970350241427600231037472755614023548206789735269078590834449245923454385325492305659242435611300542852213722841909380700099178894703174590126112041224283933050906079878737882887340652224562292433380944052673538602232295072801399008587550855279599758738224727323486864666105237460948172863914507051497974186625462313445057775348133531846046663852734437590095553782981005686291660604880068105148369641552089807164999699933504010826666901604098508377083799595612159033508965994444726491533830781284339377808073755805290835250781114692808914390954773552997805080977899&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求最大公约数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=gmpy2.gcd(n1,n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1=n1//q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(q-1)*(p1-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d1=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c1,d1,n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#数字转字节，转字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsadp泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsadp泄露&#34;&gt;#&lt;/a&gt; 【CTF-RSA】dp 泄露&lt;/h1&gt;
&lt;h3 id=&#34;出题脚本-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-8&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def put_flag():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 字符串列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = string.printable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(10):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag += a[random.randint(0, 99)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = r&amp;quot;flag&amp;#123;%s&amp;#125;&amp;quot;%(hashlib.md5(flag.encode()).hexdigest())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp=d%(p-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=put_flag()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;dp=&amp;quot;,dp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;d4b1e0f286ad786066f7080b799b060c&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 23394036014464046501402792776884457087634068433705842139487912015519104667457488035047083371965503536792460851787650081706327143805464933298095489389084818332774953793854059606978467021122060941721159940921809773870657335464362378719134317047572114687528866506353323318174138423377776372281089909340016072870263135215376731630674713954427795890261571486636276952127575752748522492589539506478258930649380768233506393076363278803060558598509815268954407266874717384390312718209478291926475527005153885465608428599031442715759260865813504888269596677881780347479592998255350058004619030108388912201581076089336119468643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= 100674509715202325036081726312774815986187000783697455044387277186714326573821809713063426618185153848167198579179497656982506746232819368900025150095426269713393750558196053535255114827412538046108647122641808177368947613148236456610301824596042041271055359866313832084853116512985378487355450567630091705649&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 12127459340286917726546036238419091529597268566270618006396964642315960697809670228324352194626974775143594040184007995762230124277685135428557682256725346270076456760491553841122346906694778065552795002359965526224770887646547543805440124941737783340421200375963056356821003236095664853156958927717936209155044726879318559032451125971549741240792191258921980127372316983196390340347224459405077718348857806559168064784227269021302828794546867944957250008076452307745983922147833828528029871263104355277353451384507030114318047568878694705985438014743749080234970796793239251039347382419944322804681983892197888703621&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-6&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 23394036014464046501402792776884457087634068433705842139487912015519104667457488035047083371965503536792460851787650081706327143805464933298095489389084818332774953793854059606978467021122060941721159940921809773870657335464362378719134317047572114687528866506353323318174138423377776372281089909340016072870263135215376731630674713954427795890261571486636276952127575752748522492589539506478258930649380768233506393076363278803060558598509815268954407266874717384390312718209478291926475527005153885465608428599031442715759260865813504888269596677881780347479592998255350058004619030108388912201581076089336119468643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= 100674509715202325036081726312774815986187000783697455044387277186714326573821809713063426618185153848167198579179497656982506746232819368900025150095426269713393750558196053535255114827412538046108647122641808177368947613148236456610301824596042041271055359866313832084853116512985378487355450567630091705649&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 12127459340286917726546036238419091529597268566270618006396964642315960697809670228324352194626974775143594040184007995762230124277685135428557682256725346270076456760491553841122346906694778065552795002359965526224770887646547543805440124941737783340421200375963056356821003236095664853156958927717936209155044726879318559032451125971549741240792191258921980127372316983196390340347224459405077718348857806559168064784227269021302828794546867944957250008076452307745983922147833828528029871263104355277353451384507030114318047568878694705985438014743749080234970796793239251039347382419944322804681983892197888703621&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(1,65535):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=(dp*e-1)//i+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if n%p==0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        q=n//p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n= (p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=gmpy2.invert(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag=libnum.n2s(int(m)).decode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;134667619365743045595168553238362312023650599468530434568396313527895187587634403052721512639833457724360813431924046576022830236924118932514204765110094122509015108591511098512879423203741999141278981231917707934037407023776298580578629029647524334791630712323113230463832687613004097438988736658586221172249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173716860256720756010986199782897012515331445068177358103829931240562092491287733676752639070657545014548803292723216412791088678565614337516811748594976169892097100242359937925941407901138820607539009613167988691437541846667829527629900122609755232483505146549072069287070281676499661836078738207039875462107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13040004482825502968068078893777661764720816096319462874883263755612616818670936876452438909&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;d4b1e0f286ad786066f7080b799b060c&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;题目解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目解析&#34;&gt;#&lt;/a&gt; 题目解析&lt;/h3&gt;
&lt;p&gt;已知公钥 n，e 以及 dp&lt;/p&gt;
&lt;p&gt;其中，dp = d mod (p-1)&lt;/p&gt;
&lt;p&gt;已知：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;c = m^e mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ϕ(n)=(p−1)*(q−1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d∗e ≡ 1 mod ϕ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp = d mod (p−1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由上式可以得到&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dp*e≡d*e mod (p−1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因此可以得到&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;：d∗e=k∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;：d∗e≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod ϕ(n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;式 1 带入式 2&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; k∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e ≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod ϕ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; k∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e ≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)∗(q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; k1∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e = k2*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)∗(q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; dp*e =  k2*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)∗(q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-k1∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; dp*e = (p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*[k2*(p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)-k1]+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因 dp&amp;lt;p−1（dp 是 d//（p-1）的余数，dp&amp;lt;p−1）&lt;/p&gt;
&lt;p&gt;所以 e &amp;gt; k2∗(q−1)−k1&lt;/p&gt;
&lt;p&gt;假设 x=k2∗(q−1)−k1&lt;/p&gt;
&lt;p&gt;x 的范围为 (0,e)&lt;/p&gt;
&lt;p&gt;x∗(p−1)+1=dp∗e&lt;/p&gt;
&lt;p&gt;求出 p-1 方法，遍历 (0,e) 的范围，其中肯定有一个 p 可以被 n 整除，那么求出 p 和 q&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsadpdq&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsadpdq&#34;&gt;#&lt;/a&gt; 【CTF-RSA】dp,dq&lt;/h1&gt;
&lt;h3 id=&#34;出题脚本-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-9&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def put_flag():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 字符串列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = string.printable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(10):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag += a[random.randint(0, 99)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = r&amp;quot;flag&amp;#123;%s&amp;#125;&amp;quot;%(hashlib.md5(flag.encode()).hexdigest())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp=d%(p-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq=d%(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=put_flag()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;p=&amp;quot;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;q=&amp;quot;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;dq=&amp;quot;,dq)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;dp=&amp;quot;,dp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;cf0e0667c7442c2062d44325dfa1fff8&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 116448890546185683618055771450262312142016242676238094735985217275558021426787268511630302385159616509824437310766062886645283012210550645169977349508799805936368080215259139246007436664580533527641021648562878099835855488217605507804587234251629324592836704958089773215930952831323766320054699221381397968349&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 121314447894794933957911141434811889490960407007692356648851565427612228833554613770868517878896771681675653370553153871839922174394592991198603832478356982707395565149507463608294194106890694113693573162935964314084535850523178363478442420170042255278617265943573098151866633751578364943738065761428628706039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq= 59454945327569441442149441563463739239821128716298744269717311289340024381722395588850968548335831814757164816955258086418762841133709695047194050618312524643771276638189575715012912103380109010753068898795188028199051024351953337146407252291706779335244334724531552245903907860703808590993224196886127308379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= 12821691474758928437186481633048397766403546197594245870498639361893688795881668821885717411711121850784948039038831649145251723699762477006066139036811257757249066433210399450679610952158523123357151108778701014212056291911107333938353929571993792914871136350116358751944058404120303000831815761806127343937&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 9983837067627475378248837281152077424577644386920613072097254241896471299255096730106667334607635347860798847959593316696048354026485880426581453490989579741802704101509576499437856377836305511877118962352017825827558857421137932247147226103427393215520334795953723215808736388183152444480701951305372405468290514418251173641350383981901755628956285657852767644612558903853975128656097276863834433887282035569179705730464360229607976686393639473868252704891915443982668342477474154848246082390458011231850434283927962815103615634851592101896052435074200941912168878340717415600997946705421433642907356895602555961692&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-7&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# coding=utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def decrypt(dp,dq,p,q,c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    InvQ = gmpy2.invert(q, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mp = pow(c, dp, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mq = pow(c, dq, q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m = (((mp-mq)*InvQ) % p)*q+mq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 116448890546185683618055771450262312142016242676238094735985217275558021426787268511630302385159616509824437310766062886645283012210550645169977349508799805936368080215259139246007436664580533527641021648562878099835855488217605507804587234251629324592836704958089773215930952831323766320054699221381397968349&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 121314447894794933957911141434811889490960407007692356648851565427612228833554613770868517878896771681675653370553153871839922174394592991198603832478356982707395565149507463608294194106890694113693573162935964314084535850523178363478442420170042255278617265943573098151866633751578364943738065761428628706039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq= 59454945327569441442149441563463739239821128716298744269717311289340024381722395588850968548335831814757164816955258086418762841133709695047194050618312524643771276638189575715012912103380109010753068898795188028199051024351953337146407252291706779335244334724531552245903907860703808590993224196886127308379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= 12821691474758928437186481633048397766403546197594245870498639361893688795881668821885717411711121850784948039038831649145251723699762477006066139036811257757249066433210399450679610952158523123357151108778701014212056291911107333938353929571993792914871136350116358751944058404120303000831815761806127343937&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 9983837067627475378248837281152077424577644386920613072097254241896471299255096730106667334607635347860798847959593316696048354026485880426581453490989579741802704101509576499437856377836305511877118962352017825827558857421137932247147226103427393215520334795953723215808736388183152444480701951305372405468290514418251173641350383981901755628956285657852767644612558903853975128656097276863834433887282035569179705730464360229607976686393639473868252704891915443982668342477474154848246082390458011231850434283927962815103615634851592101896052435074200941912168878340717415600997946705421433642907356895602555961692&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;decrypt(dp,dq,p,q,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;cf0e0667c7442c2062d44325dfa1fff8&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;题目解析-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目解析-2&#34;&gt;#&lt;/a&gt; 题目解析&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;已知条件：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = m^e mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Φ(n) = (p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d*e ≡ 1 mod Φ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp = d mod (p-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq = d mod (q-1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先根据&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;m=c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;gcd&lt;/span&gt;(p,q)=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p∗q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;利用中国剩余定理,得：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1=c^d mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2=c^d mod q&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;已知条件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = m^e mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ϕ(n)= (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d*e≡ &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod ϕ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= d mod (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq= d mod (q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=c^d+k*n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;因为 n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=c^d+p*q*k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;同时取余q和p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; m1=c^d mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; c^d=kp+m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; m2=c^d mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;带入式&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2=(kp+m1) mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;等式两边同时减去m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(m2−m1)≡kp mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;因为&lt;span class=&#34;title function_&#34;&gt;gcd&lt;/span&gt;(p,q)=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以可以求p的逆元，得到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;≡k mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;得到如下两个式子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;k≡(m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c^d=kp+m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m≡c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;上下两个式子合并&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c^d = ((m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod q)p+m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m ≡ c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;最后可以有&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m≡(((m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod q)p+m1) mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;只剩最后一步了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1≡cd mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡cd mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1和m2怎么求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d≡dp mod (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d≡dq mod (q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;那么分别带入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1≡cdq mod (q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡cdp mod (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;费马小定理即假如p是质数，且&lt;span class=&#34;title function_&#34;&gt;gcd&lt;/span&gt;(a,p)=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a^(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以如果我们有等式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=dp+k*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;直接带入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡c^dp+k*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这里的指数，我们拆开，为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡c^dp*ck*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ck*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;因为p是大素数，显然和c互素所以可以直接得到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡cd^p mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;那么m1根据对称性也可以同理得到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1≡cd^q mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;故此，我们现在拥有了所有条件，下面归纳一下为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1≡cd^q mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡cd^p mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m≡(((m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod q)p+m1) mod n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsan是p的r次方&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsan是p的r次方&#34;&gt;#&lt;/a&gt; 【CTF-RSA】n 是 p 的 r 次方&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/tupian/main/texe/b6423b7a5d301c5bc141a453312c914fa8d73386.png%401256w_894h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-10&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.&lt;span class=&#34;title function_&#34;&gt;generate_prime&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=&lt;span class=&#34;number&#34;&gt;65537&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&lt;span class=&#34;string&#34;&gt;&amp;quot;flag&amp;#123;de8c3ea714f7f780185924d473997bcb&amp;#125;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.&lt;span class=&#34;title function_&#34;&gt;s2n&lt;/span&gt;(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p**&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=p**&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;-p**&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.&lt;span class=&#34;title function_&#34;&gt;invmod&lt;/span&gt;(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=&lt;span class=&#34;title function_&#34;&gt;pow&lt;/span&gt;(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&lt;span class=&#34;string&#34;&gt;&amp;quot;n=&amp;quot;&lt;/span&gt;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&lt;span class=&#34;string&#34;&gt;&amp;quot;e=&amp;quot;&lt;/span&gt;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&lt;span class=&#34;string&#34;&gt;&amp;quot;c=&amp;quot;&lt;/span&gt;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n= 16622523748365172904813592127476399281343727660606505617392198543235807423259452687676621686860269192604509820445802409254968963482780952401681342511953346114354237597355266224985159415203546461269421162429663695795646630067770430367870150442156212643421904327067607612643835104098557876657456979301279696161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 15149785767171289805982282199116965213185900381335528659748769541121555585117654564592061361366310297474619810692989995979933036914843280405808328316644883226261208875270217733849328131498613484049428472804357649204297506663052673501421178930563517387487395016265672942577669111963976761606745737080626352222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解密脚本-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密脚本-3&#34;&gt;#&lt;/a&gt; 解密脚本&lt;/h3&gt;
&lt;p&gt;先分解 n&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;使用yafu分解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23219089633250510580388184338893261190159425274266091829251069678345101374315005119889075848991325948461687799542168350589180122396501651434531030343667226410506241902501479054317717625217008857112114881864252928341340770771920275461651508679148124345837511394681152499950625703121385320234450147885925563601&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, using pretesting plan: normal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, no tune info: using qs/gnfs crossover of 95 digits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, ****************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, ****************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, Starting factorization of 4818619058739807726033451975297698875972020102640321802123262042534551118036419562514298978461153805413112499422269152127364929585538633207754060608869449&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, using pretesting plan: normal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, no tune info: using qs/gnfs crossover of 95 digits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, ****************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, input is a perfect power&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, input is a perfect power&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = 23219089633250510580388184338893261190159425274266091829251069678345101374315005119889075848991325948461687799542168350589180122396501651434531030343667226410506241902501479054317717625217008857112114881864252928341340770771920275461651508679148124345837511394681152499950625703121385320234450147885925563601&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = 4777659110099869449331032200405354033599223023041765916601886190091487314989244505694085724093454432510462782520998688417537643026221506529296297782026160739262075190691284018675189858368054339063575534858807322887095235742287437139426799368719305846674897884286541494038433345483824310623372192122891409065&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n = p**4 - p**3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = libnum.invmod(e, phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = pow(c, d, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 将解密的消息m转换为字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;decoded_message = libnum.n2s(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 打印解密的消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;de8c3ea714f7f780185924d473997bcb&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsan分解三个素数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsan分解三个素数&#34;&gt;#&lt;/a&gt; 【CTF-RSA】N 分解三个素数&lt;/h1&gt;
&lt;p&gt;对 n 进行分解，得到了 3 个素数 n = p * q * r&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-11&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=libnum.generate_prime(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q*r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)*(r-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n= 155569715564225941516401175393822123654661071656544682900501445388039464795156282583058732391822082699041937953698254493985631168080567689894352112882819752144420434749908373&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 2590934473244479149454029781088177201664803241879433405469420742163580990206205379085660779993465773098740370870207790131091064186457773458473135597972752013264935424276949&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-8&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
</content>
        <category term="rsa" />
        <updated>2024-05-15T05:47:22.000Z</updated>
    </entry>
</feed>
