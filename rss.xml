<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>圥忈的博客</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 21 May 2024 18:32:06 +0800</pubDate>
        <lastBuildDate>Tue, 21 May 2024 18:32:06 +0800</lastBuildDate>
        <category>Base家族编码</category>
        <category>buuctf</category>
        <category>matlab</category>
        <category>number-theory</category>
        <category>rsa</category>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/21/matlab/</guid>
            <title>&#39;matlab&#39;</title>
            <link>http://example.com/2024/05/21/matlab/</link>
            <category>matlab</category>
            <pubDate>Tue, 21 May 2024 18:32:06 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;matlab变量命名规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#matlab变量命名规则&#34;&gt;#&lt;/a&gt; MATLAB 变量命名规则&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;变量名区分大小写。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名长度不超过63位。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名以字母开头，可以有字母、数字和下划线组成。但不能使用标点。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名简洁明了，通过变量名可以直观看出变量所表示的物理意义。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;matlab命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#matlab命令&#34;&gt;#&lt;/a&gt; MATLAB 命令&lt;/h2&gt;
&lt;h3 id=&#34;1清空环境变量及命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1清空环境变量及命令&#34;&gt;#&lt;/a&gt; 1. 清空环境变量及命令&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;clear all      清除Workspace中的所有变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;clc            清除Command Window中的所有命令&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2注释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2注释&#34;&gt;#&lt;/a&gt; 2. 注释&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;%%    有横线注释&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%     没有横线注释&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3运算&#34;&gt;#&lt;/a&gt; 3. 运算&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;加+	减-	乘*	除/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4字符与字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4字符与字符串&#34;&gt;#&lt;/a&gt; 4. 字符与字符串&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;s = &amp;#x27;a&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abs(a) = 97      绝对值  ascall码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;char(97) = a      字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;length( )         计算字符串的长度&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;5num2str&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5num2str&#34;&gt;#&lt;/a&gt; 5.num2str&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;s = num2str(A)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = num2str(A,precision)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = num2str(A,formatSpec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = num2str(A) 将数值数组转换为表示数字的字符数组。输出格式取决于原始值的量级。num2str 对使用数值为绘图添加标签和标题非常有用。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = num2str(A,precision)返回表示数字的字符数组，最大有效位数由 precision 指定。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = num2str(A,formatSpec) 将 formatSpec 指定的格式应用到 A 所有元素。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;randn函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#randn函数&#34;&gt;#&lt;/a&gt; randn () 函数&lt;/h6&gt;
&lt;p&gt;randn () 函数用于产生正态分布的随机数，其调用格式和 rand () 函数基本一致，如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;X=randn % 返回一个标准正态分布的随机向量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randn(n) % 产生nxn的矩阵，元素为一个标准正态分布中的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randn(x,y) %产生xxy的矩阵，元素为一个标准正态分布中的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randn(sz) %sz为矩阵，产生size(sz)大小的矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randn(...,typename)% typename可以是&amp;#x27;single&amp;#x27;或&amp;#x27;double&amp;#x27;，产生对应数据类型的随机数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;r=randn;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randn(2,3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-1.1658&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-1.1480		0.7223		-0.6669&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0.1049		2.5855		 0.1873&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;randi函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#randi函数&#34;&gt;#&lt;/a&gt; randi () 函数&lt;/h6&gt;
&lt;p&gt;randi () 函数用于生成伪随机整数，也就是产生整数的函数。调用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;X=randi(imax) %返回一个(1,imax)之间的随机整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randi(imax,n)  %返回nxn的矩阵，元素为(1,imax)之间的随机整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randi(imax,sz1,sz2) %返回sz1xsz2的矩阵，元素为(1,imax)之间的随机整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randi(imax,sz) %sz为矩阵，返回size(sz)大小元素为(1,imax)之间的随机整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randi([imin,imax],...) %返回imin到imax之间的随机整数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;X=randi(5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randi(10,2,2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randi([5,10],[2,2]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1		10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3		 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9		10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8		 5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;randperm函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#randperm函数&#34;&gt;#&lt;/a&gt; randperm () 函数&lt;/h6&gt;
&lt;p&gt;randperm () 函数用于生成一组整数的随机排列，调用格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;p=randperm(n) %返回一个1~n的随机排列其不重复的行向量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=randperm(n,k) %返回一个1~n的随机排列其不重复的行向量&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;X=randperm(10);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=randperm(10,5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp(X)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4		8		 2		10		9		1		5		6		7		3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7		3		10		8		6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;矩阵&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#矩阵&#34;&gt;#&lt;/a&gt; 矩阵&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;A = [1 2 3:4 5 6:7 8 9]   用空格或逗号间隔用:分割&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B = A&amp;#x27;                    B等于A的转置[1 4 7:2 5 8:3 6 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C = A(:)                  把A矩阵拉长[1:4:7:2:5:8:3:6:9]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D = inv(A)                求逆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A * D&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;生成全是0的矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;E = zeros(行，列，维度)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rand、randi和randn的区别？ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1,rand生成均匀分布的伪随机数。分布在(0~1)之间主要语法:rand(m,n)生成m行n列的均匀分布的伪随机数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand(m.n,&amp;#x27;double&amp;#x27;)生成指定精度的均匀分布的伪随机数，参数还可以是&amp;#x27;single&amp;#x27; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand(Randstream,m,n)利用指定的RandStream(我理解为随机种子)生成伪&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;随机数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2,randn生成标准正态分布的伪随机数(均值为0，方差为1) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;主要语法:和上面一样&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3,randi生成均匀分布的伪随机整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;主要语法:randi(iMax)在开区间(0,iMax)生成均匀分布的伪随机整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;randi (iMax, m, n)在开区间(0,iMax)生成mXn型随机矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[= randi([iMin,iMax],m,n)在开区间(iMin, iMax)生成mXn型随机矩阵&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;元胞数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元胞数组&#34;&gt;#&lt;/a&gt; 元胞数组&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;元胞数组是MATLAB中特有的一种数据类型，是数组的一种，其内部元素可以是属于不同的数据类型，概念理解上，可以认为它和c语言里面的结构体、C++里面的对象很类似。元胞数组是matlab中的特色数据类型，它不同于其它数据类型(如字符型，字符数组或者叫字符串，以及一般的算术数据和数组)。它特有的存取数据方法决定了它的特点， 它有给人一种查询信息的感觉，可以逐渐追踪一直到所有的变量全部翻译成基本的数据信息。它的class函数输出就是cell (细胞之意)。 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;在MATLAB中，数组索引是从1开始的，而不是从0开始。这与许多其他编程语言（如C、C++、Java、Python等）的习惯不同，在这些语言中，数组索引是从0开始的。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;举个例子，如果你有一个MATLAB数组A，它有5个元素，那么这些元素的索引将是1到5：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = [10 20 30 40 50];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;element1 = A(1);  % 访问第一个元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;element2 = A(2);  % 访问第二个元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;element5 = A(5);  % 访问第五个元素&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;A = cell(1,6)一行六列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[]		[]		[]		[]		[]		[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A&amp;#123;2&amp;#125; = eye(3)索引从一开始与python不同  把eye放在第二个格子中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eye(3)生成一个3行3列对角元素为1，其他元素为0的矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[]		[3X3 double]	 []		[]		[]		[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A&amp;#123;5&amp;#125; = magic(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17	24	 1	 8	15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23	 5	 7	14	16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4	 6	13	20	22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10	12	19	21	 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11	18	25	 2	 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B = A&amp;#123;5&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;MAGIC &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;·magic字面意思是魔方，魔术的意思。在matlab中用来生成n阶幻方。比如三阶幻方就是1-9九个数字，组成一个3*3的矩阵，使得该矩阵无论横、竖还是斜三个方向上的三个数的和总是相同的。幻方是一个很古老的问题，你试一下就知道了！ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;·magic(n)生成一个n阶幻方，就是把1-n^2排成一个nxn的矩阵，使得矩阵的每行、 每列，以及主、副对角线上面的n个数之和都相等(容易证明，这个和等于n*(nA2+1)/2). &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;结构体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结构体&#34;&gt;#&lt;/a&gt; 结构体&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;books = struct(&amp;#x27;name&amp;#x27;,&amp;#123;&amp;#123;&amp;#x27;Machine Learning&amp;#x27;,&amp;#x27;Data Mining&amp;#x27;&amp;#125;&amp;#125;,&amp;#x27;price&amp;#x27;,[30 40])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;books.name               %属性 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;Machine Learning&amp;#x27; &amp;#x27;Data Mining&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;books.name(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;Machine Learning&amp;#x27;                       cell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;books.name&amp;#123;1&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Machine Learning                         字符串&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;matlab矩阵操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#matlab矩阵操作&#34;&gt;#&lt;/a&gt; MATLAB 矩阵操作&lt;/h2&gt;
&lt;h3 id=&#34;1矩阵的构建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1矩阵的构建&#34;&gt;#&lt;/a&gt; 1. 矩阵的构建&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;A = [1 2 3 5 8 5 4 6]          以空格和逗号为间隔，以封号换行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B = 1:2:9                      三个数据必须都有不然报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C = repmat(B, 3, 1)            把B重复三行一列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D = ones(2, 4)                 两行四列的都为一的矩阵&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2矩阵的四则混合运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2矩阵的四则混合运算&#34;&gt;#&lt;/a&gt; 2. 矩阵的四则混合运算&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;A = [1 2 3 4; 5 6 7 8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B = [1 1 2 2; 2 2 1 1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C = A + B = [2 3 5 6; 7 8 8 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D = A - B = [0 1 1 2; 3 4 6 7]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;E = A * B&amp;#x27; = [17 13; 41 37]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;F = A .* B = [1 2 6 8; 10 12 7 8]       对应性相称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;G = A / B                               G * B = A     G * B * PINV(B) = A * pinv(B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                        G = A *pinv(B) G = A * pinv(B)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                        相当于&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;G = A ./ B &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3矩阵的下标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3矩阵的下标&#34;&gt;#&lt;/a&gt; 3. 矩阵的下标&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;A = magic (5)               生成一个5 * 5的5阶幻方矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	17	24	1	8	15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	23	5	7	14	16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	4	6	13	20	22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	10	12	19	21	3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	11	18	25	2	9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B = A(2,3)                  B = 7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C = A(3,:)                  第三行C = 4	6	13	20	22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D = A(:,4)                  第四列 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[m,n] = find(A &amp;gt; 20)  找到大于20的序号值矩阵&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = 2						n = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1							2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    5							3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    4							4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    3							5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;matlab的逻辑与流程控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#matlab的逻辑与流程控制&#34;&gt;#&lt;/a&gt; MATLAB 的逻辑与流程控制&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if …… else …… end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for …… end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while …… end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Switch …… case …… end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;for循环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#for循环&#34;&gt;#&lt;/a&gt; for 循环&lt;/h3&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;MATLAB 中 &lt;strong&gt;for&lt;/strong&gt; [循环] 是一个重复的控制结构，可以有效地写一个循环，只是执行的次数是特定的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;matlab-for-循环语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#matlab-for-循环语法&#34;&gt;#&lt;/a&gt; MATLAB [for] 循环语法:&lt;/h3&gt;
&lt;p&gt;MATLAB 中的 for 循环的语法如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;for index = values&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;for 循环的值有下述三种形式之一：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;格式&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;initval:endval&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;将索引变量从初始到终值递增 1，并重复执行程序语句，直到索引值大于终值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;initval:step:endval&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;按每次迭代中的值步骤递增索引，或在步骤为负值时递减。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;valArray&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在每个迭代 &lt;em&gt;valArrayon&lt;/em&gt; 数组的后续列中创建列向量索引。例如，在第一次迭代中，index = valArray (:, 1)，循环执行最大 n 次，其中 n 是 &lt;em&gt;valArray&lt;/em&gt; 的列数，由 numel (valArray, 1,:) 给出。输入 &lt;em&gt;valArray&lt;/em&gt; 可以是任何 MATLAB 数据类型，包括字符串、单元格数组或结构。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;例子-1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例子-1&#34;&gt;#&lt;/a&gt; 例子 1&lt;/h4&gt;
&lt;p&gt;在 MATLAB 中建立一个脚本文件，并输入下述代码：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;for a = 10:20 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fprintf(&amp;#x27;value of a: %d&amp;#x27;, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行文件，显示下述结果：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;value of a: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of a: 20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;例子-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例子-2&#34;&gt;#&lt;/a&gt; 例子 2&lt;/h4&gt;
&lt;p&gt;在 MATLAB 中建立一个脚本文件，并输入下述代码：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;for a = 1.0: -0.1: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   disp(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行该文件，显示以下结果：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.9000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.8000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.7000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.6000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.5000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.4000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.3000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.2000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    0.1000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;例子3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例子3&#34;&gt;#&lt;/a&gt; 例子 3&lt;/h4&gt;
&lt;p&gt;在 MATLAB 中建立一个脚本文件，并输入下述代码：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;for a = [24,18,17,23,28]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   disp(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行该文件，显示下述结果：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/15/rsa/</guid>
            <title>&#39;rsa&#39;</title>
            <link>http://example.com/2024/05/15/rsa/</link>
            <category>rsa</category>
            <pubDate>Wed, 15 May 2024 13:47:22 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ctf-rsapython安装及pycharm配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsapython安装及pycharm配置&#34;&gt;#&lt;/a&gt; 【CTF-RSA】python 安装及 pycharm 配置&lt;/h1&gt;
&lt;p&gt;python3 官网下载地址&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMvd2luZG93cy8=&#34;&gt; https://www.python.org/downloads/windows/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;python 编译器 pycharm Community 下载地址&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS96aC1jbi9weWNoYXJtL2Rvd25sb2FkLyNzZWN0aW9uPXdpbmRvd3M=&#34;&gt; https://www.jetbrains.com/zh-cn/pycharm/download/#section=windows&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;pycharm 汉化插件&lt;br&gt;
打开 pycharm 左上角的 file (文件) &amp;gt; 选择 settings (设置) &amp;gt; 打开 plugins (插件) &amp;gt; 搜索 chinese (中文插件), 下载好后重启 pycharm&lt;/p&gt;
&lt;p&gt;pycharm 设置虚拟环境&lt;br&gt;
设置虚拟环境的好处是：&lt;/p&gt;
&lt;p&gt;1. 方便移植和重装系统以后，安装模块&lt;/p&gt;
&lt;p&gt;2. 避免安装较多模块，发生冲突&lt;/p&gt;
&lt;p&gt;pycharm 安装库及设置国内镜像&lt;br&gt;
中国科技大学 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9weXBpLm1pcnJvcnMudXN0Yy5lZHUuY24vc2ltcGxlLw==&#34;&gt;https://pypi.mirrors.ustc.edu.cn/simple/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;安装 libnum 库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install libnum -i https://pypi.mirrors.ustc.edu.cn/simple/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;安装 pycryptodome库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install pycryptodome -i https://pypi.mirrors.ustc.edu.cn/simple/ &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;gmpy2 及相关库安装&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLw==&#34;&gt; https://www.lfd.uci.edu/~gohlke/pythonlibs/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在该网页中找到 gmpy2, 注意找对应得版本&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp39‑cp39‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp39‑cp39‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp38‑cp38‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp38‑cp38‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp37‑cp37m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp37‑cp37m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp36‑cp36m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp36‑cp36m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp35‑cp35m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp35‑cp35m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp34‑cp34m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp34‑cp34m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp27‑cp27m‑win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gmpy2‑2.0.8‑cp27‑cp27m‑win32.whl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;N（Modulus）：模数，是两个大素数 P 和 Q 的乘积。N 的长度决定了 RSA 算法的安全性。&lt;/p&gt;
&lt;p&gt;E（Public Exponent）：公钥指数，通常为 65537（0x10001）。E 用于加密数据，是公钥的一部分。&lt;/p&gt;
&lt;p&gt;P（Prime Factor）：素数 P，是模数 N 的一个因子。&lt;/p&gt;
&lt;p&gt;Q（Prime Factor）：素数 Q，是模数 N 的另一个因子。&lt;/p&gt;
&lt;p&gt;DP（D mod (P-1)）：D 对 (P-1) 取模的结果，用于解密数据。&lt;/p&gt;
&lt;p&gt;DQ（D mod (Q-1)）：D 对 (Q-1) 取模的结果，用于解密数据。&lt;/p&gt;
&lt;p&gt;Qinv（Q^-1 mod P）：Q 的模 P 的乘法逆元，用于解密数据。&lt;/p&gt;
&lt;p&gt;D（Private Exponent）：私钥指数，用于解密数据或生成数字签名&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsarsa简介及原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsarsa简介及原理&#34;&gt;#&lt;/a&gt; 【CTF-RSA】RSA 简介及原理&lt;/h1&gt;
&lt;h2 id=&#34;rsa算法简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rsa算法简介&#34;&gt;#&lt;/a&gt; rsa 算法简介&lt;/h2&gt;
&lt;p&gt;RSA 是公钥密码体制，是一种使用不同的加密密钥与解密密钥&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/5fb3c27329b8976a11a47a59deb864d84769fda0.png%401256w_478h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/8a70da17879fa97dbf424abbeb5a4ff94e1ad396.png%401256w_358h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;rsa算法原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rsa算法原理&#34;&gt;#&lt;/a&gt; rsa 算法原理&lt;/h2&gt;
&lt;h3 id=&#34;欧拉函数φn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#欧拉函数φn&#34;&gt;#&lt;/a&gt; 欧拉函数 φ(n)&lt;/h3&gt;
&lt;p&gt;欧拉函数 φ(n) 的定义是小于 n 的自然数中与 n 互质的数的个数&lt;/p&gt;
&lt;h3 id=&#34;欧拉定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#欧拉定理&#34;&gt;#&lt;/a&gt; 欧拉定理&lt;/h3&gt;
&lt;p&gt;若 n,a 为正整数，且 n,a 互质，则:a^φ(n)≡1 mod n&lt;/p&gt;
&lt;h3 id=&#34;费马小定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#费马小定理&#34;&gt;#&lt;/a&gt; 费马小定理&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/7f87d43d837599c2d6d759300d780c7ef60f336f.png%401256w_274h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;模运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模运算&#34;&gt;#&lt;/a&gt; 模运算&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(a + b) % p = (a % p + b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a - b) % p = (a % p - b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a * b) % p = (a % p * b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;结合律&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a + b) % p + c) = (a + (b + c) % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a * b) % p * c) = (a * (b * c) % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;交换律&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a + b) % p = (b + a) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a * b) % p = (b * a) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;分配律&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a + b) % p = (a % p + b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a + b) % p * c) % p = ((a * c) % p + (b * c) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;重要定理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若 a ≡ b (mod p)，则对于任意的 c，都有(a + c) ≡ (b + c) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若 a ≡ b (mod p)，则对于任意的 c，都有(a * c) ≡ (b * c) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若 a ≡ b (mod p)，c ≡ d (mod p)，则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a + c) ≡ (b + d) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a - c) ≡ (b - d) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a * c) ≡ (b * d) (mod p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a / c) ≡ (b / d) (mod p)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a mod p的逆元便是可以使 a * a&amp;#x27; mod p = 1 的最小a&amp;#x27;。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;推导过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推导过程&#34;&gt;#&lt;/a&gt; 推导过程&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;式1：c=m^e%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式2：m=c^d%N&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将式 1 带入式 2 得 m = (m ^ e % N) ^ d % N&lt;/p&gt;
&lt;p&gt;需要证明：m == (m ^ e % N) ^ d % N&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(m^e%N)^d%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt;  (m^e)^d%N #模运算 a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m^(e*d)%N #幂的乘方，底数不变，指数相乘&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 e * d ≡ 1 (mod φ(N)) 即 e * d = K * φ(N) + 1，K 为任意正整数，代入得：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m^(K*φ(N)+1))%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m^(K*φ(N)*m^1)%N # 同底数相乘，指数相加&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m^(K*φ(N)*m)%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; ((m^φ(N)^K%N*m)%N # 幂的乘方，底数不变，指数相乘&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; ((m^φ(N)^K%N*m%N)%N # (a * b) % p = (a % p * b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; ((m^φ(N)%N)^K%N*m%N)%N # a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (1^K%N*m%N)%N # 根据欧拉定理：a^φ(n)≡1 mod n 即 a^φ(n) mod n = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m%N)%N # 1^K%N=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m%N)%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m%N)^1%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (m^1)%N   # a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; m%N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m  #因为 m &amp;lt; N&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsarsa基础题目及脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsarsa基础题目及脚本&#34;&gt;#&lt;/a&gt; 【CTF-RSA】RSA 基础题目及脚本&lt;/h1&gt;
&lt;h3 id=&#34;随机生成flag&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#随机生成flag&#34;&gt;#&lt;/a&gt; 随机生成 flag&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=string.printable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#随机生成flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(10):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(10):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag += a[random.randint(0, 99)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = hashlib.md5(flag.encode()).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;quot;flag&amp;#123;&amp;quot; + flag + &amp;quot;&amp;#125;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from uuid import uuid1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag=&amp;quot;flag&amp;#123;&amp;quot;+str(uuid1())+&amp;quot;&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/6bb7113e6f3e65e1f762f2565539c32563b340c1.png%40!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;出题脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;p=&amp;quot;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;q=&amp;quot;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;d=&amp;quot;,d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/d7ebf723ee05575e951a9dcebe6c6e8899e90e93.png%401256w_350h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;已知ndec求m&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#已知ndec求m&#34;&gt;#&lt;/a&gt; 已知 n,d,e,c 求 m&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 14685532699024100754723222996385121368294636639693750794149020559314539676501066491415844320990799035552463714403031072164829458702780715523923962246149328887690893262271480633736651143634392056066729487305166335857950659680699210683976952113003674104898343893168719508462975991580551696824510044412974267585312807460664570245139015568859112921920860421973308538800641652781742897528769692264955229878206911313791989518088100099218315995549914435278654377368771668058107642713121127495780090852489015591581414806590111818355121157794129813430710822697558144598815860067978324469091074823400715400666808772858128261149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d= 10655677501818714057545408290692306276248758047017058020876274084213258239416744966450976471246402284779991562186357882946337721435118045765127426899173581894141706933500094886492805160951008521020815528782559085235105783294876017603112074153984218299742602608478449101819428678878037976091306073545785820932796422483686522431260926680891531210950251782422010888047909274618007401655588566411972291526501884077240225819170340160706732901152519829956055255218835518533347875405883278225018714890042991619568316304958478955576005445279807142753050999269866987221510643119355301877102904394259290548609330522059178100989&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 7937297427288435728721973474925856865675225171317301007619581716746999628275946964127516634203401830643076435690247635478297903236185011960902817030042080567027165802992734580344202744697251074454156026031417427325660809453340428989949816426637434868049018580855865080715251672252410696685286047485204432648545886024276695749435709592994477514818763551176789963387889424072650811645828675090859926233585219662579177051353763021116106877502871331756544361402971459889233069752657661921397258845893293005099736406362733668960163109452223071514272504206470939914043855546880424121530822318600645513435826636440478681928&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c, d, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(m).decode()) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/78c48eb00ccb1dc84f95ef53eaec99891fa2affc.png%401256w_304h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;已知pqec求m&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#已知pqec求m&#34;&gt;#&lt;/a&gt; 已知 p,q,e,c 求 m&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 178974110759313878895493455207516672882434662571655460770401953730906926302476821805659378622536968418528094957044346203494793341636459433763427491907849563922785749794854266865548657682445692416895365631610849027415100889893466490767087266542637440212533807985124840688092762928583845838066174446047886496977&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 93610871651220602641323046206103959524660743045950590135111801621145944725719667412027010040112514078098465817329474817485502356054795293086881519931215167856745860801666777619204160653243683622930567962804914581845602027547589056026105213437044768786486688576038889017989891165091320977401144724582916902269&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 10505609204533893330224001468185225454647695615253006709365840521320011117703729471412769493857753605106376689659952882885215696765275778768339621441610719177208351696489476567331875339672513868473669863672226315682278831184868041476134806131989809014422520472566202048041013413698358733781909446846787304422628166599338803127610040714545537436536348608012176828441837378861024372912755344397449657260043057239911064546424582314518819235470388313710641962070846850292694572345451390561142917224092435026246696084949470913298543523893386679712766629009873176804118782436042080621119334193337953451160118095182279971122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#数字转字节，转字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode()) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;![](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2tlZXAyMTIvbmltYS9tYWluLyVFNSVCMSU4RiVFNSVCOSU5NSVFNiU4OCVBQSVFNSU5QiVCRQ==&#34;&gt;https://raw.githubusercontent.com/keep212/nima/main/ 屏幕截图&lt;/span&gt; 2024-05-15 140447.png)&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsa基于n分解的rsa题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsa基于n分解的rsa题目&#34;&gt;#&lt;/a&gt; 【CTF-RSA】基于 N 分解的 RSA 题目&lt;/h1&gt;
&lt;p&gt;对 N 进行分解（只要知道 p 和 q, 就能解出任何 rsa）&lt;/p&gt;
&lt;p&gt;N 在有一般情况下不可分解的，如果 p 和 q 太接近，或相差过大，或 pq 很小等情况&lt;/p&gt;
&lt;h3 id=&#34;1在线查询分解网站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1在线查询分解网站&#34;&gt;#&lt;/a&gt; 1. 在线查询分解网站&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5mYWN0b3JkYi5jb20vaW5kZXgucGhw&#34;&gt;http://www.factordb.com/index.php&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;2使用yafu工具分解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2使用yafu工具分解&#34;&gt;#&lt;/a&gt; 2. 使用 yafu 工具分解&lt;/h3&gt;
&lt;p&gt;下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMveWFmdS8=&#34;&gt;https://sourceforge.net/projects/yafu/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#以分解49为例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yafu-x64.exe factor(49)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#导入文件进行分解，主要注意文本结尾要换行！！！不然要报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yafu-x64.exe &amp;quot;factor(@)&amp;quot; -batchfile 1.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3使用费马分解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3使用费马分解&#34;&gt;#&lt;/a&gt; 3. 使用费马分解&lt;/h3&gt;
&lt;p&gt;网上找的脚本，p 和 q 太接近&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def isqrt(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while y &amp;lt; x:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def fermat(n, verbose=True):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = isqrt(n) # int(ceil(n**0.5))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = isqrt(n) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while b*b != b2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # if verbose:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #     print(&amp;#x27;Trying: a=%s b2=%s b=%s&amp;#x27; % (a, b2, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a = a + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b = isqrt(b2) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        count += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q=a-b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert n == p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;a=&amp;#x27;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;b=&amp;#x27;,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;p=&amp;#x27;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;q=&amp;#x27;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;pq=&amp;#x27;,p*q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return p, q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fermat(n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4分解出来后用脚本解密即可&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4分解出来后用脚本解密即可&#34;&gt;#&lt;/a&gt; 4. 分解出来后，用脚本解密即可&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=gmpy2.invert(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;出题脚本-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-2&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h4&gt;
&lt;p&gt;p,q 接近，很快就能分解&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#下一个素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=gmpy2.next_prime(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(gmpy2.is_prime(q))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/afe1675f01cc159684046592319c16cdb6cdda0b.png%401256w_160h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;解题脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import  gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def isqrt(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while y &amp;lt; x:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def fermat(n, verbose=True):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = isqrt(n) # int(ceil(n**0.5))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = isqrt(n) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while b*b != b2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # if verbose:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #     print(&amp;#x27;Trying: a=%s b2=%s b=%s&amp;#x27; % (a, b2, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​        a = a + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​        b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​        b = isqrt(b2) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​        count += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    p=a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    q=a-b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    assert n == p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;a=&amp;#x27;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;b=&amp;#x27;,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    print(&amp;#x27;p=&amp;#x27;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    print(&amp;#x27;q=&amp;#x27;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;pq=&amp;#x27;,p*q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;​    return p, q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 11236396438945464079176717143196471087880430124798640194523124584883161483744355761881720924798661332027501424643154414538029585287580122761405974427818841257794157497994556608202723391478027760181705924317533420305444809223444128034654367210331137068958693840582892819495487826045956577156074156668942232139402108462349340352898572481115406698318121299787982873916502591396884489682255184448165523604671743400422220149772905676655777228607948091675612455989601008858361759327370403306760674195506394280387024357322586732298060169962426894360775981877169895632927906390632063530920611197753716095903307467004289983267&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 4260482466101011731957430920901406417434306478040387371588613512063428441001754753741853444857207349755032658064826592770143368278573527632514794087007140974732031358793249329430363014561312271335226315065519570861993052432656879088776144909638480994662696119431870831156129142403063675855781198930583825083362703887688501680905266707624440432914989795886392952354713859444836529227033324455920455610359249535012999943891644938239837207994673190694512955995798836266797112432609992164908679997257920566918693544746179908166741635316261624634351348613130319346356388546672516037747806222134853885202448682842353199133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pq=fermat(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=pq[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=pq[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=gmpy2.invert(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode()) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/b51e22de0b0d9075a9020c02e6b730570f9d9be4.png%401256w_278h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsarsa密钥生成与读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsarsa密钥生成与读取&#34;&gt;#&lt;/a&gt; 【CTF-RSA】RSA 密钥生成与读取&lt;/h1&gt;
&lt;h2 id=&#34;安装pycryptodome模块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装pycryptodome模块&#34;&gt;#&lt;/a&gt; 安装 pycryptodome 模块&lt;/h2&gt;
&lt;h3 id=&#34;公钥生成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#公钥生成&#34;&gt;#&lt;/a&gt; 公钥生成&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 787228223375328491232514653709&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 814212346998672554509751911073&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 640970939378021470187479083920100737340912672709639557619757&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d= 590103645243332826117029128695341159496883001869370080307201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa_components = (n, e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keypair = RSA.construct(rsa_components)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;pubckey.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;) as f :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(keypair.exportKey())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;私钥生成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#私钥生成&#34;&gt;#&lt;/a&gt; 私钥生成&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 787228223375328491232514653709&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 814212346998672554509751911073&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 640970939378021470187479083920100737340912672709639557619757&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d= 590103645243332826117029128695341159496883001869370080307201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa_components = (n,e,d,p,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keypair = RSA.construct(rsa_components)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;private1.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;) as f :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(keypair.exportKey())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;公钥读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#公钥读取&#34;&gt;#&lt;/a&gt; 公钥读取&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;pubckey.pem&amp;quot;,&amp;quot;rb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = RSA.import_key(f.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;n = %d&amp;#x27; % key.n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;e = %d&amp;#x27; % key.e)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;私钥读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#私钥读取&#34;&gt;#&lt;/a&gt; 私钥读取&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;private1.pem&amp;quot;,&amp;quot;rb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = RSA.import_key(f.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;n = %d&amp;#x27; % key.n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;e = %d&amp;#x27; % key.e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;d = %d&amp;#x27; % key.d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;p = %d&amp;#x27; % key.p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;q = %d&amp;#x27; % key.q)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;出题脚本-基于n分解的题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-基于n分解的题目&#34;&gt;#&lt;/a&gt; 出题脚本 - 基于 N 分解的题目&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#下一个素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=int(gmpy2.next_prime(p))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;a272722c1db834353ea3ce1d9c71feca&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_c=libnum.n2s(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa_components = (n, e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keypair = RSA.construct(rsa_components)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;pubckey1.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;) as f :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(keypair.exportKey())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;flag.txt&amp;quot;,&amp;quot;wb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(flag_c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/335173d5bac49444e1ea16dd80a587d2e0dcbf93.png%401256w_468h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/bedadfdad9bcba50f4c7ed4dd4a96ff4811dd61b.png%401256w_192h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;解题脚本-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-2&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def isqrt(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while y &amp;lt; x:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = (x + n // x) // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def fermat(n, verbose=True):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = isqrt(n) # int(ceil(n**0.5))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = isqrt(n) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while b*b != b2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # if verbose:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #     print(&amp;#x27;Trying: a=%s b2=%s b=%s&amp;#x27; % (a, b2, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a = a + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b2 = a*a - n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        b = isqrt(b2) # int(b2**0.5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        count += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q=a-b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert n == p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;a=&amp;#x27;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;b=&amp;#x27;,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;p=&amp;#x27;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;q=&amp;#x27;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # print(&amp;#x27;pq=&amp;#x27;,p*q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return p, q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;pubckey1.pem&amp;quot;,&amp;quot;rb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    key = RSA.import_key(f.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n=key.n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e=key.e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;flag.txt&amp;quot;,&amp;quot;rb&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c=f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c=libnum.s2n(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#费马分解,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1=fermat(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=n1[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=n1[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/1989cf5f79a4a51208c0ba623d1290f5c9cff21c.png%40!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;进阶自动生成密钥及加解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#进阶自动生成密钥及加解密&#34;&gt;#&lt;/a&gt; 进阶 —— 自动生成密钥及加解密&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import PKCS1_v1_5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto import Random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.PublicKey import RSA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Cipher import PKCS1_OAEP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;random_generator = Random.new().read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa = RSA.generate(2048, random_generator)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 生成私钥&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private_key = rsa.exportKey()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# print(private_key.decode(&amp;#x27;utf-8&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;rsa_private_key.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;)as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(private_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 生成公钥&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public_key = rsa.publickey().exportKey()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# print(public_key.decode(&amp;#x27;utf-8&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;#x27;rsa_public_key.pem&amp;#x27;, &amp;#x27;wb&amp;#x27;)as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(public_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#测试用密钥加密&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public_key = RSA.importKey(public_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msg=&amp;#x27;flag&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pk = PKCS1_v1_5.new(public_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;encrypt_text = pk.encrypt(msg.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(encrypt_text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#测试密钥解密&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;private_key = RSA.importKey(private_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pk = PKCS1_v1_5.new(private_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msg = pk.decrypt(encrypt_text,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(msg)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#两种标准&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsa_components = (n, e, int(d), p, q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arsa = RSA.construct(rsa_components)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsakey = RSA.importKey(arsa.exportKey())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsakey = PKCS1_OAEP.new(rsakey)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;decrypted = rsakey.decrypt(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(decrypted)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsa共模攻击脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsa共模攻击脚本&#34;&gt;#&lt;/a&gt; 【CTF-RSA】共模攻击脚本&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/ec5eb5692b3dec285a513ca7ce945dbaa4eedb00.png%401256w_354h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-3&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e1=2333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e2=23333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;6ed4c74e022cb18c8039e96de93aa9ce&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1=pow(m,e1,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2=pow(m,e2,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n1=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;e1=&amp;quot;,e1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c1=&amp;quot;,c1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n2=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;e2=&amp;quot;,e2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c2=&amp;quot;,c2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/fa8f24b2218ffda191d24a04e651d113340c096e.png%401256w_370h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;解密脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密脚本&#34;&gt;#&lt;/a&gt; 解密脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 25333966058003377512707481338795714713737652659944601834182685873529702913988641983855700459996104700470621411559153944988952210084014634675583566338568882440708528997808798650962116756969822211586531522430245040013570571043385238601846104615050089457836721437790715225367971106085839523500735480715155424498941150468093083816830215632716244390679417218873179734276657411907216486790815037105108306055794473002315541787461904728375164737225486501009857299717749346279371251245318729951905832578739696926931502225899707226264570557623527701806829827566904224572897378639191756878049342203546309520458672464170859577433&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e1= 2333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1= 11355981897781478907853356911752561659125575027336719997290835661089901154031171698660586203170528368228850895159361637188990782030255983633790580700032092629587631108597144196551438410868034739981960656110887650747325311613900008001234835897835613759692146419080113176963747835592656185435741504176116672174539018089139547795447109458469225330809064539216773123671814859510069089532677704482026169178543062578686794346026774853085101278125763460212801929360456888869350105294595904940799522522144740464043605342348269086324747729288399275079874271519208155039364092577755518532799345651172433227745483422620900776136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e2= 23333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2= 1326499538902841116411674554069945581390130048432351353260154261863309471312810811160302458644816390944833633923435634961251092531893503039914793217247984595331920909367627316087404934402312358642315675486438968585084964845763881078835787872160374025547400141298650794551970291119975344578667689961134814676553190178139842507675899262024572370313939107080072875068218336255452161407859907308656094331557912187788276334833723893856310434523337557011032081467262457427167978528280339494077785813461280853735266463152709443731638714219391773144349752633555310299318290576258086971373777118482642702020599928071855133041&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#共模攻击&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#共模攻击函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def rsa_gong_N_def(e1,e2,c1,c2,n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e1, e2, c1, c2, n=int(e1),int(e2),int(c1),int(c2),int(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = gmpy2.gcdext(e1, e2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s1 = s[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s2 = s[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if s1 &amp;lt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s1 = - s1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c1 = gmpy2.invert(c1, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    elif s2 &amp;lt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s2 = - s2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c2 = gmpy2.invert(c2, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m = (pow(c1,s1,n) * pow(c2 ,s2 ,n)) % n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return int(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = rsa_gong_N_def(e1,e2,c1,c2,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/db1d26321464b070f47f0a1977de7ecb752ae6eb.png%401256w_230h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;共模攻击原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#共模攻击原理&#34;&gt;#&lt;/a&gt; 共模攻击原理&lt;/h3&gt;
&lt;p&gt;两个及以上的公钥 (n,e) 来加密同一条信息 m&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;c1 = pow(m, e1, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2 = pow(m, e2, n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;e1，e2 互质，则有&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gcd(e1,e2)=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据扩展欧几里德算法 对于不完全为 0 的整数 a，b，gcd（a，b）表示 a，b 的最大公约数。那么一定存在整数 x，y 使得 gcd（a，b）=ax+by&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;e1*s1+e2*s2 = 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;s1、s2 皆为整数，但是一正一负，假设 s1 为正数，s2 为负数&lt;/p&gt;
&lt;p&gt;因为&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;c1 = m^e1%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2 = m^e2%n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可得：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2)%n = ((m^e1%n)^s1(m^e2%n)^s2)%n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据模运算性质： 幂运算是一种关于幂的数学运算。同底数幂相乘，底数不变，指数相加。同底数幂相除，底数不变，指数相减。幂的乘方，底数不变，指数相乘。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(a * b) % p = (a % p * b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a ^ b % p = ((a % p) ^ b) % p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;简化公式为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2)%n = ((m^e1%n)^s1*(m^e2%n)^s2)%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (c1^s1*c2^s2)%n = ((m^e1%n)^s1%n*(m^e2%n)^s2%n)%n #(a * b) % p = (a % p * b % p) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (c1^s1*c2^s2)%n = ((m^e1)^s1%n*(m^e2)^s2%n)%n #((a % p) ^ b) % p =a ^ b % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; (c1^s1*c2^s2)%n = ((m^e1)^s1*(m^e2)^s2)%n # (a % p * b % p) % p=(a * b) % p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt;(c1^s1*c2^s2)%n = ((m^(e1*s1)*(m^(e2*s2))%n #。幂的乘方，底数不变，指数相乘。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2)%n = (m^(e1*s1+e2*s2))%n  # 同底数幂相乘，底数不变，指数相加。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为 e1&lt;em&gt;s1+e2&lt;/em&gt;s2 = 1 得：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2)%n = (m^1)%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(c1^s1*c2^s2）%n=m&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述就是 rsa 共模攻击的过程&lt;/p&gt;
&lt;p&gt;因此，同一 m，同一 n, 不同 e，进行加密。在不需要知道 d 的情况下，可以进行解密。&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsawiener维纳攻击脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsawiener维纳攻击脚本&#34;&gt;#&lt;/a&gt; 【CTF-RSA】wiener (维纳) 攻击脚本&lt;/h1&gt;
&lt;p&gt;低解密指数攻击&lt;/p&gt;
&lt;p&gt;维纳攻击:e 指数很大 (理论上 d&amp;lt;N**0.25 此攻击起作用)&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-4&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#计算d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nbits=1024&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d = random.getrandbits(nbits // 4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (libnum.gcd(d, phi_n) == 1 and 36 * pow(d, 4) &amp;lt; n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#计算e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = libnum.invmod(d,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;输出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=102099548361332638344237630396918304669480123432427691789000801421929226904417516565900645418525797159668929644513100700481417366819546101164265596706858513650095068198188946822981224172023933260431303286767867370050964230357219983386055508144712031982008096516285393789767140630413556460318866725444111200943&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=94994203498929475603874878316562406769119091464658088508285677241091060748158032542307067657105896639464248805968843801720116349229945077164078734338861088173913967531166751856585737460477446495550234322955763049253862441121077805134024431490817802775319606751537898284798700294616843500662903168724602836801&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=81573644335666712672791855949066359386986007425938431546920059710780388358488503125182517117627957949413515274338734396361948242477931901530434398164748401317943265396004901457700820503669867532428599683112699749720514979210181537932231600377359054106599204293139340781914077341382222025122079086888130243607&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-3&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def continuedFra(x, y):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;计算连分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param x: 分子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param y: 分母&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return: 连分数列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cf = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while y:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cf.append(x // y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x, y = y, x % y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def gradualFra(cf):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;计算传入列表最后的渐进分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param cf: 连分数列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return: 该列表最后的渐近分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    numerator = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    denominator = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for x in cf[::-1]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 这里的渐进分数分子分母要分开&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        numerator, denominator = denominator, x * denominator + numerator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return numerator, denominator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def solve_pq(a, b, c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;使用韦达定理解出pq，x^2−(p+q)∗x+pq=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param a:x^2的系数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param b:x的系数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param c:pq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return:p，q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    par = gmpy2.isqrt(b * b - 4 * a * c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return (-b + par) // (2 * a), (-b - par) // (2 * a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def getGradualFra(cf):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;计算列表所有的渐近分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param cf: 连分数列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return: 该列表所有的渐近分数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gf = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(1, len(cf) + 1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gf.append(gradualFra(cf[:i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return gf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def wienerAttack(e, n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param e:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :param n:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :return: 私钥d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cf = continuedFra(e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gf = getGradualFra(cf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for d, k in gf:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if k == 0: continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (e * d - 1) % k != 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        phi = (e * d - 1) // k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p, q = solve_pq(1, n - phi + 1, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if p * q == n:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=102099548361332638344237630396918304669480123432427691789000801421929226904417516565900645418525797159668929644513100700481417366819546101164265596706858513650095068198188946822981224172023933260431303286767867370050964230357219983386055508144712031982008096516285393789767140630413556460318866725444111200943&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=94994203498929475603874878316562406769119091464658088508285677241091060748158032542307067657105896639464248805968843801720116349229945077164078734338861088173913967531166751856585737460477446495550234322955763049253862441121077805134024431490817802775319606751537898284798700294616843500662903168724602836801&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=81573644335666712672791855949066359386986007425938431546920059710780388358488503125182517117627957949413515274338734396361948242477931901530434398164748401317943265396004901457700820503669867532428599683112699749720514979210181537932231600377359054106599204293139340781914077341382222025122079086888130243607&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=wienerAttack(e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c, d, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(m).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsa低加密指数攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsa低加密指数攻击&#34;&gt;#&lt;/a&gt; 【CTF-RSA】低加密指数攻击&lt;/h1&gt;
&lt;p&gt;加密指数指的是 e，e 一般选取 65535，当 e 很小，可直接破解。&lt;/p&gt;
&lt;p&gt;这类攻击在 CTF 题中，一般是 e=3&lt;/p&gt;
&lt;p&gt;如果 e = 3，且 m^e &amp;lt; n，c 开 3 次根式，得到 m。&lt;/p&gt;
&lt;p&gt;如果 e = 3 ，且 m^e &amp;gt; n，那么设 k，有:c = m^e +kn&lt;/p&gt;
&lt;p&gt;爆破 k，如果 c - kn 能开三次根式，得到 m。&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-5&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=gmpy2.invert(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n=18361906160620022464979295059548883385156763943394380833201208639301999608709114912270056929331270217554369812335058385974338512141859324983921470930958736360738390027166728364010907401951540109944793784157080984583656592972723810889149243441868648226149805798535282656161928879613643809863794073478884041202910160124060619201573772596307101846646211547036087826821419144901484859844669828292496176238256415692144872092048438977709004772671999206253947138558324768798764429817036656232137523183071900974937071243387207692734022115048640542690719058701296145264383203094482976978127329751006501499156643644516658977039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=2217344750798294937344050117513831761010547351781457575945714176628679412650463329423466955026804439931765627111856888102133234836914006818023839994342283023142702993182665344445325734299047409223354338948863171846780674244925724334091153701697864918695050507247415283070309&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-4&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def de(c, e, n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    k = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mm = c + n*k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result, flag = gmpy2.iroot(mm, e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if True == flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        k += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=18361906160620022464979295059548883385156763943394380833201208639301999608709114912270056929331270217554369812335058385974338512141859324983921470930958736360738390027166728364010907401951540109944793784157080984583656592972723810889149243441868648226149805798535282656161928879613643809863794073478884041202910160124060619201573772596307101846646211547036087826821419144901484859844669828292496176238256415692144872092048438977709004772671999206253947138558324768798764429817036656232137523183071900974937071243387207692734022115048640542690719058701296145264383203094482976978127329751006501499156643644516658977039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=2217344750798294937344050117513831761010547351781457575945714176628679412650463329423466955026804439931765627111856888102133234836914006818023839994342283023142702993182665344445325734299047409223354338948863171846780674244925724334091153701697864918695050507247415283070309&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=de(c,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsa低加密指数广播攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsa低加密指数广播攻击&#34;&gt;#&lt;/a&gt; 【CTF-RSA】低加密指数广播攻击&lt;/h1&gt;
&lt;p&gt;如果选取的加密指数较低，并且使用了相同的加密指数给一个接受者的群发送相同的信 息，那么可以进行广播攻击得到明文。&lt;/p&gt;
&lt;p&gt;在 CTF 中，n、 c 不同，明文 m， e 相同，其 e 比较小。使用中国剩余定理求解&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-6&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def rsa_def(e,m):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    #字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n_lt.append(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c_lt.append(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n_lt=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c_lt=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;#x27;flag&amp;#123;2cb2eb4b2c7fdf4e94e10344be856446&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(7):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rsa_def(e,m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n=&amp;quot;,n_lt)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c=&amp;quot;,c_lt)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;e= 23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= [28303622412582000131021407474534006627921799223355183106077505407831206380301837802779082885240206111505508547474437431362756095431762358110052438004267595363538307523189378160064363522004491855944919119597205658182749902342637937883927268605382518011199700158912849626569207674748509433787195694903010718581029837747981171596866887181030964844788562253129379797530253580033726662830283337751897717068387389316332038495989183875297434865972913656079980895151344185488446963115671720552088880147981915346363110130965930170755630143071342168860938247998306451689613273637151748431977358920444034764161368269864228260683, 20251452587759389751052720079014998244267616359016633593589175521621218456216360455295414295294412150809772398298894292213274346026242406070081445287045202845357692424984414731052455823237307016241779223277378745608301817094614950269964820345061379221697200410141112889155488951350825981000289053073683521941913801494200697246114178401082071562438086829634844209636507018099598320310860622688713956769159252262767722969006737392560062259268529057175218726693282184813651015664791336482617886917300606453413316038320561235717486917130822910721442930492265275565223486795987687552720234029811300311632264662984617939923, 14346699094920477306010014637065577396695146335017849885453710192053891302468843510448258124074965535071629427969248410027905493732280558837459311032388092215070142163153478283674348594955980639353521355441745601559314424603582895058504836475536927137989360726605508903641768784888818544654282487163986929656604018129571142512687134510041787214732147219138074791325301979785700412656267988690767850022868346773574953938614889361051066241822201821473385327983954592011097734422105185886881113996631236580465724811634148336929200213266140831603665217513011608681717494792540922272443225320166269546005384086341666270237, 20666343363156785654985613960098447088558685398640350288254320340496666688516590319064027915211047314924250684432033752242942966685842979794980296365888247039788491929724979065867747495180389495328018143172137761614969040970809046901475911809919819225814792921474015886234384233024615479366352095594442693243266913593735671556255730133253641239650968425165554567952946701451909296290474332348774876523488586367522569297383954521921027624472179940907798879661735838019525520096563628175856915838339369924996762439573028482405388108352766763640977505904313025884575825285855552752229632152736769500408011313183214392153, 14480286280129696514270349363639135690194813767915498959160314284345452109136054438918279879687988685577041179672481826413238969577366809496037008028319471115982075204004599853880859319285735251215720017350744902158301356474516391525891691871856049412845949704986820012935591952822443217869963788393612548023802605993419800696221415244404127247038175359086885939193086585037732169908522678773825469337954376145864799261157893957600692457882657459928699280090202008141189229552755119857595139897657107729811724161618369203527263317202234130089849201954557040754721260368951656599885121453704835178188315313686147051923, 25135420084057729138962207770153147249216029716010916549133072798022173651499205043606282483768583672328760981332426505696227594660119754631421070583142367295963352819026044721993905256646249896759721623276462449809859752925530184188042885144607718530989588516038414786694143648547597489366540402541899809051752326713817126431123487448396593702877775626937606471335455786422703851710737764866288332272933341502968739417462132708542330342772267969202023083086220041463278283077205795088208728884309357563743034975287256152505174426461145926368526423625546487258149118398734494641732919040020011403436393212191779432673, 14170383666109427589521313589398954693073999267690679429232942135812456809241794890000695435122337549594511547359442056505587452722540626257265898140591417773350910678019484155053006149919493857135172612823857432437751164396086806969247887722030626100150488635591461262100283389559941169785826738781070083631000931652943447440214092308220562550698836331050228146220398533720225203000322816574801344359625600962347408643059867457659818853613771081585704280121043234667995329377274986249499236061703041940482592689369088929027039513948760377275611911167035304174744652049727637136905531242917152702461696223811033602849]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= [15173807047472256447845684717251358912200122697842932385546098349809093752333910920794395969740005443648644569649151629387591807920298558650496538425219132987551223405408877632454158688064537658192460658356150057322506966948335987016028449001715452265499461776374053182409407643957629092529093158637338071846233068554991170358967852459399326506707061476129428800423426317404552334777482684000352415432732181431121500596157289667232882302431654245553236480148739150161235082097663476820421720676277364383804753596422154646210167713035821889664523396840593631837829893992707455057905959892044493550616949765027220821785, 11938220729710468926557967838524738768470825644612868603230757095292323093455865828959914062879644655551785832471143737493581841344185257107375234777532911128608967712481626952843271008996247807352342523498164298300504938844670197912254303803381691946636195711489073144969303997622633132286422880867271226194190255544078235550661988616892022747818310141637456428313681765661471975562221216381338670295432045738683059404018667138703833764008763778236536867798296840402557891175517847355068530786232834297244608865178392836134797580251614936231688236439984467175534272554294756436715223184842969069377142090754306086587, 8372259615196673779309934993544198416663757780787798713946610637626427463845006237283078696569258480955022027747227029707234987550305246888247136777153012680650117836880636761607863194764822189962747464025510178303075209848879650377247816192817842261342129001268715009974847247605278255193595427547890570752506772700910884836219465705104991007024562594310924752843471782461218371258698746171751166701903238716161531339945132602715536032022798223230723435175807913796348676823846038302524566716088962679362404006745480422576452325081934683229769895346449322176285464821570547521826791307002350786334042239662645563957, 5733976274584604503158989659243088656260484646101064598377820249243214941836104198790082691176209885137416348787627889019963374849716526301643203575745466143947067545186455524140490976182048095864032981061075827442834540637189552464126900919432241265888539704207825612690608583372413157779228956416948469330266827436190056447128563728081276323274058344982585240713393646248729347606147217955847165489399173144936327439947001621504890772515826043945534422085396820828587397025376566166372721369230275346318899064967181577034570239626240177509679081760324839630754365907895622832683887937718999018391437954527915504901, 11962620418277676374646808244354446889608161479405151063272409866849868879538467999438518866434088322058589141374532978662604437111947985330191441627067325730811388148805199455276493437021336994786423781063493329839484836248757775950256990830760793068417392697398710960950052662407124826751941922179917894234165713413459177376070935878803205790872796797683585051588692549376205056943215230738458048997617777633513907061623849828839043504459133638367820741574829044986070351587722416355383246077069665269193960717664499012759258851692437332541468322361668893398759490048718179565240789060484618800904819752877790839865, 14514190627252965989458912133650177358276024599448353767974956651001711285954527380677271379264744774560583389294677415329151572066496871191623403237537474484131590211694780397994927633637859321564626876861928816731833317835860346102068049048681141741602880112650970773766475860379331822623866557451204868940771037743371956603238411685645585455864559001752753943194800979965196045576484095541094062989278859774751950753918707697030394009501569165004933027458740532191312977538863175872726905565882031876620249853780381000852597492112187214600432630583588524386583025190254266601054787278440312207823089175947291805412, 7170711933239761804272372742798978256972824803609483931621008487728643522487624210005513129465353379861752443367806850891359310644714068239910036947843884154622114312629119056999639223587198702912932135706473355115493813596396494080029186640406895454294620829968679709936590321511385222821447179694303480562868112280011278299778419343863090503526288120666396481735329192528853631884136207219752754405396833982641885684715010162118882211883389908927141918526128685468851895086930506025457622185661218790174083864969366351390048046735613504180183923456680037579550089548742296821712544283816875194625748204510190006748]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解密脚本-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密脚本-2&#34;&gt;#&lt;/a&gt; 解密脚本&lt;/h3&gt;
&lt;h4 id=&#34;解密脚本1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密脚本1&#34;&gt;#&lt;/a&gt; 解密脚本 1&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from gmpy2 import invert, gcd, iroot&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def op(x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in x:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res *= i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return res&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def CRT(m, a):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert (len(m) == len(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M = op(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sum = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for m, a in zip(m, a):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Mi = M // m&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ti = invert(Mi, m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sum += a * ti * Mi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return sum % M&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def GCRT(m, a):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert (len(m) == len(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    curm, cura = m[0], a[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for m, a in zip(m[1:], a[1:]):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        d = gcd(curm, m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        c = a - cura&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        assert (c % d == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        K = c // d * invert(curm // d, m // d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cura += curm * K&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        curm = curm * m // d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return cura % curm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= [28303622412582000131021407474534006627921799223355183106077505407831206380301837802779082885240206111505508547474437431362756095431762358110052438004267595363538307523189378160064363522004491855944919119597205658182749902342637937883927268605382518011199700158912849626569207674748509433787195694903010718581029837747981171596866887181030964844788562253129379797530253580033726662830283337751897717068387389316332038495989183875297434865972913656079980895151344185488446963115671720552088880147981915346363110130965930170755630143071342168860938247998306451689613273637151748431977358920444034764161368269864228260683, 20251452587759389751052720079014998244267616359016633593589175521621218456216360455295414295294412150809772398298894292213274346026242406070081445287045202845357692424984414731052455823237307016241779223277378745608301817094614950269964820345061379221697200410141112889155488951350825981000289053073683521941913801494200697246114178401082071562438086829634844209636507018099598320310860622688713956769159252262767722969006737392560062259268529057175218726693282184813651015664791336482617886917300606453413316038320561235717486917130822910721442930492265275565223486795987687552720234029811300311632264662984617939923, 14346699094920477306010014637065577396695146335017849885453710192053891302468843510448258124074965535071629427969248410027905493732280558837459311032388092215070142163153478283674348594955980639353521355441745601559314424603582895058504836475536927137989360726605508903641768784888818544654282487163986929656604018129571142512687134510041787214732147219138074791325301979785700412656267988690767850022868346773574953938614889361051066241822201821473385327983954592011097734422105185886881113996631236580465724811634148336929200213266140831603665217513011608681717494792540922272443225320166269546005384086341666270237, 20666343363156785654985613960098447088558685398640350288254320340496666688516590319064027915211047314924250684432033752242942966685842979794980296365888247039788491929724979065867747495180389495328018143172137761614969040970809046901475911809919819225814792921474015886234384233024615479366352095594442693243266913593735671556255730133253641239650968425165554567952946701451909296290474332348774876523488586367522569297383954521921027624472179940907798879661735838019525520096563628175856915838339369924996762439573028482405388108352766763640977505904313025884575825285855552752229632152736769500408011313183214392153, 14480286280129696514270349363639135690194813767915498959160314284345452109136054438918279879687988685577041179672481826413238969577366809496037008028319471115982075204004599853880859319285735251215720017350744902158301356474516391525891691871856049412845949704986820012935591952822443217869963788393612548023802605993419800696221415244404127247038175359086885939193086585037732169908522678773825469337954376145864799261157893957600692457882657459928699280090202008141189229552755119857595139897657107729811724161618369203527263317202234130089849201954557040754721260368951656599885121453704835178188315313686147051923, 25135420084057729138962207770153147249216029716010916549133072798022173651499205043606282483768583672328760981332426505696227594660119754631421070583142367295963352819026044721993905256646249896759721623276462449809859752925530184188042885144607718530989588516038414786694143648547597489366540402541899809051752326713817126431123487448396593702877775626937606471335455786422703851710737764866288332272933341502968739417462132708542330342772267969202023083086220041463278283077205795088208728884309357563743034975287256152505174426461145926368526423625546487258149118398734494641732919040020011403436393212191779432673, 14170383666109427589521313589398954693073999267690679429232942135812456809241794890000695435122337549594511547359442056505587452722540626257265898140591417773350910678019484155053006149919493857135172612823857432437751164396086806969247887722030626100150488635591461262100283389559941169785826738781070083631000931652943447440214092308220562550698836331050228146220398533720225203000322816574801344359625600962347408643059867457659818853613771081585704280121043234667995329377274986249499236061703041940482592689369088929027039513948760377275611911167035304174744652049727637136905531242917152702461696223811033602849]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= [15173807047472256447845684717251358912200122697842932385546098349809093752333910920794395969740005443648644569649151629387591807920298558650496538425219132987551223405408877632454158688064537658192460658356150057322506966948335987016028449001715452265499461776374053182409407643957629092529093158637338071846233068554991170358967852459399326506707061476129428800423426317404552334777482684000352415432732181431121500596157289667232882302431654245553236480148739150161235082097663476820421720676277364383804753596422154646210167713035821889664523396840593631837829893992707455057905959892044493550616949765027220821785, 11938220729710468926557967838524738768470825644612868603230757095292323093455865828959914062879644655551785832471143737493581841344185257107375234777532911128608967712481626952843271008996247807352342523498164298300504938844670197912254303803381691946636195711489073144969303997622633132286422880867271226194190255544078235550661988616892022747818310141637456428313681765661471975562221216381338670295432045738683059404018667138703833764008763778236536867798296840402557891175517847355068530786232834297244608865178392836134797580251614936231688236439984467175534272554294756436715223184842969069377142090754306086587, 8372259615196673779309934993544198416663757780787798713946610637626427463845006237283078696569258480955022027747227029707234987550305246888247136777153012680650117836880636761607863194764822189962747464025510178303075209848879650377247816192817842261342129001268715009974847247605278255193595427547890570752506772700910884836219465705104991007024562594310924752843471782461218371258698746171751166701903238716161531339945132602715536032022798223230723435175807913796348676823846038302524566716088962679362404006745480422576452325081934683229769895346449322176285464821570547521826791307002350786334042239662645563957, 5733976274584604503158989659243088656260484646101064598377820249243214941836104198790082691176209885137416348787627889019963374849716526301643203575745466143947067545186455524140490976182048095864032981061075827442834540637189552464126900919432241265888539704207825612690608583372413157779228956416948469330266827436190056447128563728081276323274058344982585240713393646248729347606147217955847165489399173144936327439947001621504890772515826043945534422085396820828587397025376566166372721369230275346318899064967181577034570239626240177509679081760324839630754365907895622832683887937718999018391437954527915504901, 11962620418277676374646808244354446889608161479405151063272409866849868879538467999438518866434088322058589141374532978662604437111947985330191441627067325730811388148805199455276493437021336994786423781063493329839484836248757775950256990830760793068417392697398710960950052662407124826751941922179917894234165713413459177376070935878803205790872796797683585051588692549376205056943215230738458048997617777633513907061623849828839043504459133638367820741574829044986070351587722416355383246077069665269193960717664499012759258851692437332541468322361668893398759490048718179565240789060484618800904819752877790839865, 14514190627252965989458912133650177358276024599448353767974956651001711285954527380677271379264744774560583389294677415329151572066496871191623403237537474484131590211694780397994927633637859321564626876861928816731833317835860346102068049048681141741602880112650970773766475860379331822623866557451204868940771037743371956603238411685645585455864559001752753943194800979965196045576484095541094062989278859774751950753918707697030394009501569165004933027458740532191312977538863175872726905565882031876620249853780381000852597492112187214600432630583588524386583025190254266601054787278440312207823089175947291805412, 7170711933239761804272372742798978256972824803609483931621008487728643522487624210005513129465353379861752443367806850891359310644714068239910036947843884154622114312629119056999639223587198702912932135706473355115493813596396494080029186640406895454294620829968679709936590321511385222821447179694303480562868112280011278299778419343863090503526288120666396481735329192528853631884136207219752754405396833982641885684715010162118882211883389908927141918526128685468851895086930506025457622185661218790174083864969366351390048046735613504180183923456680037579550089548742296821712544283816875194625748204510190006748]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = CRT(n, c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1 = iroot(m, e)  # 开e次方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m1[0])))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(mpz(13040004482819734622317003488996400249726426925342964419221160229528546987125461670186727037), True)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b&amp;#x27;flag&amp;#123;2cb2eb4b2c7fdf4e94e10344be856446&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;阶梯脚本2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#阶梯脚本2&#34;&gt;#&lt;/a&gt; 阶梯脚本 2&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import binascii,gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from functools import reduce&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def CRT(mi, ai):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert(reduce(gmpy2.gcd,mi)==1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert (isinstance(mi, list) and isinstance(ai, list))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M = reduce(lambda x, y: x * y, mi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ai_ti_Mi = [a * (M // m) * gmpy2.invert(M // m, m) for (m, a) in zip(mi, ai)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return reduce(lambda x, y: x + y, ai_ti_Mi) % M&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= [28303622412582000131021407474534006627921799223355183106077505407831206380301837802779082885240206111505508547474437431362756095431762358110052438004267595363538307523189378160064363522004491855944919119597205658182749902342637937883927268605382518011199700158912849626569207674748509433787195694903010718581029837747981171596866887181030964844788562253129379797530253580033726662830283337751897717068387389316332038495989183875297434865972913656079980895151344185488446963115671720552088880147981915346363110130965930170755630143071342168860938247998306451689613273637151748431977358920444034764161368269864228260683, 20251452587759389751052720079014998244267616359016633593589175521621218456216360455295414295294412150809772398298894292213274346026242406070081445287045202845357692424984414731052455823237307016241779223277378745608301817094614950269964820345061379221697200410141112889155488951350825981000289053073683521941913801494200697246114178401082071562438086829634844209636507018099598320310860622688713956769159252262767722969006737392560062259268529057175218726693282184813651015664791336482617886917300606453413316038320561235717486917130822910721442930492265275565223486795987687552720234029811300311632264662984617939923, 14346699094920477306010014637065577396695146335017849885453710192053891302468843510448258124074965535071629427969248410027905493732280558837459311032388092215070142163153478283674348594955980639353521355441745601559314424603582895058504836475536927137989360726605508903641768784888818544654282487163986929656604018129571142512687134510041787214732147219138074791325301979785700412656267988690767850022868346773574953938614889361051066241822201821473385327983954592011097734422105185886881113996631236580465724811634148336929200213266140831603665217513011608681717494792540922272443225320166269546005384086341666270237, 20666343363156785654985613960098447088558685398640350288254320340496666688516590319064027915211047314924250684432033752242942966685842979794980296365888247039788491929724979065867747495180389495328018143172137761614969040970809046901475911809919819225814792921474015886234384233024615479366352095594442693243266913593735671556255730133253641239650968425165554567952946701451909296290474332348774876523488586367522569297383954521921027624472179940907798879661735838019525520096563628175856915838339369924996762439573028482405388108352766763640977505904313025884575825285855552752229632152736769500408011313183214392153, 14480286280129696514270349363639135690194813767915498959160314284345452109136054438918279879687988685577041179672481826413238969577366809496037008028319471115982075204004599853880859319285735251215720017350744902158301356474516391525891691871856049412845949704986820012935591952822443217869963788393612548023802605993419800696221415244404127247038175359086885939193086585037732169908522678773825469337954376145864799261157893957600692457882657459928699280090202008141189229552755119857595139897657107729811724161618369203527263317202234130089849201954557040754721260368951656599885121453704835178188315313686147051923, 25135420084057729138962207770153147249216029716010916549133072798022173651499205043606282483768583672328760981332426505696227594660119754631421070583142367295963352819026044721993905256646249896759721623276462449809859752925530184188042885144607718530989588516038414786694143648547597489366540402541899809051752326713817126431123487448396593702877775626937606471335455786422703851710737764866288332272933341502968739417462132708542330342772267969202023083086220041463278283077205795088208728884309357563743034975287256152505174426461145926368526423625546487258149118398734494641732919040020011403436393212191779432673, 14170383666109427589521313589398954693073999267690679429232942135812456809241794890000695435122337549594511547359442056505587452722540626257265898140591417773350910678019484155053006149919493857135172612823857432437751164396086806969247887722030626100150488635591461262100283389559941169785826738781070083631000931652943447440214092308220562550698836331050228146220398533720225203000322816574801344359625600962347408643059867457659818853613771081585704280121043234667995329377274986249499236061703041940482592689369088929027039513948760377275611911167035304174744652049727637136905531242917152702461696223811033602849]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= [15173807047472256447845684717251358912200122697842932385546098349809093752333910920794395969740005443648644569649151629387591807920298558650496538425219132987551223405408877632454158688064537658192460658356150057322506966948335987016028449001715452265499461776374053182409407643957629092529093158637338071846233068554991170358967852459399326506707061476129428800423426317404552334777482684000352415432732181431121500596157289667232882302431654245553236480148739150161235082097663476820421720676277364383804753596422154646210167713035821889664523396840593631837829893992707455057905959892044493550616949765027220821785, 11938220729710468926557967838524738768470825644612868603230757095292323093455865828959914062879644655551785832471143737493581841344185257107375234777532911128608967712481626952843271008996247807352342523498164298300504938844670197912254303803381691946636195711489073144969303997622633132286422880867271226194190255544078235550661988616892022747818310141637456428313681765661471975562221216381338670295432045738683059404018667138703833764008763778236536867798296840402557891175517847355068530786232834297244608865178392836134797580251614936231688236439984467175534272554294756436715223184842969069377142090754306086587, 8372259615196673779309934993544198416663757780787798713946610637626427463845006237283078696569258480955022027747227029707234987550305246888247136777153012680650117836880636761607863194764822189962747464025510178303075209848879650377247816192817842261342129001268715009974847247605278255193595427547890570752506772700910884836219465705104991007024562594310924752843471782461218371258698746171751166701903238716161531339945132602715536032022798223230723435175807913796348676823846038302524566716088962679362404006745480422576452325081934683229769895346449322176285464821570547521826791307002350786334042239662645563957, 5733976274584604503158989659243088656260484646101064598377820249243214941836104198790082691176209885137416348787627889019963374849716526301643203575745466143947067545186455524140490976182048095864032981061075827442834540637189552464126900919432241265888539704207825612690608583372413157779228956416948469330266827436190056447128563728081276323274058344982585240713393646248729347606147217955847165489399173144936327439947001621504890772515826043945534422085396820828587397025376566166372721369230275346318899064967181577034570239626240177509679081760324839630754365907895622832683887937718999018391437954527915504901, 11962620418277676374646808244354446889608161479405151063272409866849868879538467999438518866434088322058589141374532978662604437111947985330191441627067325730811388148805199455276493437021336994786423781063493329839484836248757775950256990830760793068417392697398710960950052662407124826751941922179917894234165713413459177376070935878803205790872796797683585051588692549376205056943215230738458048997617777633513907061623849828839043504459133638367820741574829044986070351587722416355383246077069665269193960717664499012759258851692437332541468322361668893398759490048718179565240789060484618800904819752877790839865, 14514190627252965989458912133650177358276024599448353767974956651001711285954527380677271379264744774560583389294677415329151572066496871191623403237537474484131590211694780397994927633637859321564626876861928816731833317835860346102068049048681141741602880112650970773766475860379331822623866557451204868940771037743371956603238411685645585455864559001752753943194800979965196045576484095541094062989278859774751950753918707697030394009501569165004933027458740532191312977538863175872726905565882031876620249853780381000852597492112187214600432630583588524386583025190254266601054787278440312207823089175947291805412, 7170711933239761804272372742798978256972824803609483931621008487728643522487624210005513129465353379861752443367806850891359310644714068239910036947843884154622114312629119056999639223587198702912932135706473355115493813596396494080029186640406895454294620829968679709936590321511385222821447179694303480562868112280011278299778419343863090503526288120666396481735329192528853631884136207219752754405396833982641885684715010162118882211883389908927141918526128685468851895086930506025457622185661218790174083864969366351390048046735613504180183923456680037579550089548742296821712544283816875194625748204510190006748]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=gmpy2.iroot(CRT(n, c), e)[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;13040004482819734622317003488996400249726426925342964419221160229528546987125461670186727037&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b&amp;#x27;flag&amp;#123;2cb2eb4b2c7fdf4e94e10344be856446&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsan不互素共享素数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsan不互素共享素数&#34;&gt;#&lt;/a&gt; 【CTF-RSA】N 不互素（共享素数）&lt;/h1&gt;
&lt;p&gt;两个 n 里使用有相同的素数 p 或 q 在 CTF 中，同样一个 e (一般为 65537) 和 m，有两个或多个 n 和 c 时，那么 n 之间可能是共享素数&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-7&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;c9d48baa792e91ce65d175bb586f8c24&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1=p1*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n2=p2*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1=pow(m,e,n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2=pow(m,e,n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n1=&amp;quot;,n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n2=&amp;quot;,n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c1=&amp;quot;,c1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c2=&amp;quot;,c2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;112033192839831410128229314623644016892457474214603544009293323660253481717951000555944274929385767454448600673603543705582070863346470535753409649573999460325173934406017517052071246438800130085989821611221908264571097633716174917625191690203659123336145054187255755394681607476738638792807609503583942128287&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1= 10625543525346830676006870950185691831444597644902937688548664474839451789500623122399254396349043194137265309127150449785754269880715662352707412035793547680593086762929625928250971615306188339436585278519056416828788773974282747077277578312189120674125326857556669957819991694938110804921956107475524196753691190172084151806587432567633986959422611394848414182355921488672244553709452073236104935236677954344428768255255100054171572028934423627125634780087424402980388287407955842046167150933175146807998723396182109084926137033146724176484195516940148635702902548991068794155382834516404680151040115265524953368803&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n2= 16963368478863237165539514788629717230509794880335414979340928156272483952877461650346703404736600543573268654053853406528874405233365433480511950945751787459984056635129991630952167422872043167517367026291964118481932229618540409542768859684629875635644451769141400996752979258243212278679645758472226598679049513891130451209669678914961165598718327535139903961419600189590593818949508868366591386211578344734960982688428366608540144212331829055016414892080760884384459092360249396385618417969715029114886771538141181557047932980027849299798044339800149366277557448859678544386644358923506165421387377971452133400237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1= 3083814592613126614027965982601537654202006134791395656021465412286460166093457898156692884715856869567564841602842861925386434838975288348214401028294260689771237300101802894534580773219096180174526083320214279520998065109710357139026683126849406635064651704725592412836189737225530918963461500807604488934388123181506653107818366579852355169342727070144725895457018660958197755959464742004451789536791140205308500661680822479247916930501856845353744746803851281425962654216148374636811404978863628264660712674442063987082523071773406042384503834533479670504453823734240363238708085719130650821063973261950270161428&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2= 13740386298909001233815681484510642184547992744157132970350241427600231037472755614023548206789735269078590834449245923454385325492305659242435611300542852213722841909380700099178894703174590126112041224283933050906079878737882887340652224562292433380944052673538602232295072801399008587550855279599758738224727323486864666105237460948172863914507051497974186625462313445057775348133531846046663852734437590095553782981005686291660604880068105148369641552089807164999699933504010826666901604098508377083799595612159033508965994444726491533830781284339377808073755805290835250781114692808914390954773552997805080977899&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-5&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1= 10625543525346830676006870950185691831444597644902937688548664474839451789500623122399254396349043194137265309127150449785754269880715662352707412035793547680593086762929625928250971615306188339436585278519056416828788773974282747077277578312189120674125326857556669957819991694938110804921956107475524196753691190172084151806587432567633986959422611394848414182355921488672244553709452073236104935236677954344428768255255100054171572028934423627125634780087424402980388287407955842046167150933175146807998723396182109084926137033146724176484195516940148635702902548991068794155382834516404680151040115265524953368803&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n2= 16963368478863237165539514788629717230509794880335414979340928156272483952877461650346703404736600543573268654053853406528874405233365433480511950945751787459984056635129991630952167422872043167517367026291964118481932229618540409542768859684629875635644451769141400996752979258243212278679645758472226598679049513891130451209669678914961165598718327535139903961419600189590593818949508868366591386211578344734960982688428366608540144212331829055016414892080760884384459092360249396385618417969715029114886771538141181557047932980027849299798044339800149366277557448859678544386644358923506165421387377971452133400237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1= 3083814592613126614027965982601537654202006134791395656021465412286460166093457898156692884715856869567564841602842861925386434838975288348214401028294260689771237300101802894534580773219096180174526083320214279520998065109710357139026683126849406635064651704725592412836189737225530918963461500807604488934388123181506653107818366579852355169342727070144725895457018660958197755959464742004451789536791140205308500661680822479247916930501856845353744746803851281425962654216148374636811404978863628264660712674442063987082523071773406042384503834533479670504453823734240363238708085719130650821063973261950270161428&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2= 13740386298909001233815681484510642184547992744157132970350241427600231037472755614023548206789735269078590834449245923454385325492305659242435611300542852213722841909380700099178894703174590126112041224283933050906079878737882887340652224562292433380944052673538602232295072801399008587550855279599758738224727323486864666105237460948172863914507051497974186625462313445057775348133531846046663852734437590095553782981005686291660604880068105148369641552089807164999699933504010826666901604098508377083799595612159033508965994444726491533830781284339377808073755805290835250781114692808914390954773552997805080977899&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求最大公约数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=gmpy2.gcd(n1,n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1=n1//q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(q-1)*(p1-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d1=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c1,d1,n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#数字转字节，转字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;13040004482825389441096275928544521243339469450955206317293093209414597159068563158095508605&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;c9d48baa792e91ce65d175bb586f8c24&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n1= 10625543525346830676006870950185691831444597644902937688548664474839451789500623122399254396349043194137265309127150449785754269880715662352707412035793547680593086762929625928250971615306188339436585278519056416828788773974282747077277578312189120674125326857556669957819991694938110804921956107475524196753691190172084151806587432567633986959422611394848414182355921488672244553709452073236104935236677954344428768255255100054171572028934423627125634780087424402980388287407955842046167150933175146807998723396182109084926137033146724176484195516940148635702902548991068794155382834516404680151040115265524953368803&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n2= 16963368478863237165539514788629717230509794880335414979340928156272483952877461650346703404736600543573268654053853406528874405233365433480511950945751787459984056635129991630952167422872043167517367026291964118481932229618540409542768859684629875635644451769141400996752979258243212278679645758472226598679049513891130451209669678914961165598718327535139903961419600189590593818949508868366591386211578344734960982688428366608540144212331829055016414892080760884384459092360249396385618417969715029114886771538141181557047932980027849299798044339800149366277557448859678544386644358923506165421387377971452133400237&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1= 3083814592613126614027965982601537654202006134791395656021465412286460166093457898156692884715856869567564841602842861925386434838975288348214401028294260689771237300101802894534580773219096180174526083320214279520998065109710357139026683126849406635064651704725592412836189737225530918963461500807604488934388123181506653107818366579852355169342727070144725895457018660958197755959464742004451789536791140205308500661680822479247916930501856845353744746803851281425962654216148374636811404978863628264660712674442063987082523071773406042384503834533479670504453823734240363238708085719130650821063973261950270161428&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2= 13740386298909001233815681484510642184547992744157132970350241427600231037472755614023548206789735269078590834449245923454385325492305659242435611300542852213722841909380700099178894703174590126112041224283933050906079878737882887340652224562292433380944052673538602232295072801399008587550855279599758738224727323486864666105237460948172863914507051497974186625462313445057775348133531846046663852734437590095553782981005686291660604880068105148369641552089807164999699933504010826666901604098508377083799595612159033508965994444726491533830781284339377808073755805290835250781114692808914390954773552997805080977899&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求最大公约数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=gmpy2.gcd(n1,n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1=n1//q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(q-1)*(p1-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d1=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c1,d1,n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#数字转字节，转字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsadp泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsadp泄露&#34;&gt;#&lt;/a&gt; 【CTF-RSA】dp 泄露&lt;/h1&gt;
&lt;h3 id=&#34;出题脚本-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-8&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def put_flag():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 字符串列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = string.printable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(10):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag += a[random.randint(0, 99)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = r&amp;quot;flag&amp;#123;%s&amp;#125;&amp;quot;%(hashlib.md5(flag.encode()).hexdigest())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp=d%(p-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=put_flag()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;dp=&amp;quot;,dp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;d4b1e0f286ad786066f7080b799b060c&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 23394036014464046501402792776884457087634068433705842139487912015519104667457488035047083371965503536792460851787650081706327143805464933298095489389084818332774953793854059606978467021122060941721159940921809773870657335464362378719134317047572114687528866506353323318174138423377776372281089909340016072870263135215376731630674713954427795890261571486636276952127575752748522492589539506478258930649380768233506393076363278803060558598509815268954407266874717384390312718209478291926475527005153885465608428599031442715759260865813504888269596677881780347479592998255350058004619030108388912201581076089336119468643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= 100674509715202325036081726312774815986187000783697455044387277186714326573821809713063426618185153848167198579179497656982506746232819368900025150095426269713393750558196053535255114827412538046108647122641808177368947613148236456610301824596042041271055359866313832084853116512985378487355450567630091705649&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 12127459340286917726546036238419091529597268566270618006396964642315960697809670228324352194626974775143594040184007995762230124277685135428557682256725346270076456760491553841122346906694778065552795002359965526224770887646547543805440124941737783340421200375963056356821003236095664853156958927717936209155044726879318559032451125971549741240792191258921980127372316983196390340347224459405077718348857806559168064784227269021302828794546867944957250008076452307745983922147833828528029871263104355277353451384507030114318047568878694705985438014743749080234970796793239251039347382419944322804681983892197888703621&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-6&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n= 23394036014464046501402792776884457087634068433705842139487912015519104667457488035047083371965503536792460851787650081706327143805464933298095489389084818332774953793854059606978467021122060941721159940921809773870657335464362378719134317047572114687528866506353323318174138423377776372281089909340016072870263135215376731630674713954427795890261571486636276952127575752748522492589539506478258930649380768233506393076363278803060558598509815268954407266874717384390312718209478291926475527005153885465608428599031442715759260865813504888269596677881780347479592998255350058004619030108388912201581076089336119468643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= 100674509715202325036081726312774815986187000783697455044387277186714326573821809713063426618185153848167198579179497656982506746232819368900025150095426269713393750558196053535255114827412538046108647122641808177368947613148236456610301824596042041271055359866313832084853116512985378487355450567630091705649&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 12127459340286917726546036238419091529597268566270618006396964642315960697809670228324352194626974775143594040184007995762230124277685135428557682256725346270076456760491553841122346906694778065552795002359965526224770887646547543805440124941737783340421200375963056356821003236095664853156958927717936209155044726879318559032451125971549741240792191258921980127372316983196390340347224459405077718348857806559168064784227269021302828794546867944957250008076452307745983922147833828528029871263104355277353451384507030114318047568878694705985438014743749080234970796793239251039347382419944322804681983892197888703621&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(1,65535):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=(dp*e-1)//i+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if n%p==0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        q=n//p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n= (p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=gmpy2.invert(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag=libnum.n2s(int(m)).decode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;134667619365743045595168553238362312023650599468530434568396313527895187587634403052721512639833457724360813431924046576022830236924118932514204765110094122509015108591511098512879423203741999141278981231917707934037407023776298580578629029647524334791630712323113230463832687613004097438988736658586221172249&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173716860256720756010986199782897012515331445068177358103829931240562092491287733676752639070657545014548803292723216412791088678565614337516811748594976169892097100242359937925941407901138820607539009613167988691437541846667829527629900122609755232483505146549072069287070281676499661836078738207039875462107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13040004482825502968068078893777661764720816096319462874883263755612616818670936876452438909&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;d4b1e0f286ad786066f7080b799b060c&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;题目解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目解析&#34;&gt;#&lt;/a&gt; 题目解析&lt;/h3&gt;
&lt;p&gt;已知公钥 n，e 以及 dp&lt;/p&gt;
&lt;p&gt;其中，dp = d mod (p-1)&lt;/p&gt;
&lt;p&gt;已知：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;c = m^e mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ϕ(n)=(p−1)*(q−1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d∗e ≡ 1 mod ϕ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp = d mod (p−1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由上式可以得到&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dp*e≡d*e mod (p−1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因此可以得到&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;：d∗e=k∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;：d∗e≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod ϕ(n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;式 1 带入式 2&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; k∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e ≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod ϕ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; k∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e ≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)∗(q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; k1∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e = k2*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)∗(q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; dp*e =  k2*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)∗(q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-k1∗(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)+dp∗e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; dp*e = (p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*[k2*(p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)-k1]+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因 dp&amp;lt;p−1（dp 是 d//（p-1）的余数，dp&amp;lt;p−1）&lt;/p&gt;
&lt;p&gt;所以 e &amp;gt; k2∗(q−1)−k1&lt;/p&gt;
&lt;p&gt;假设 x=k2∗(q−1)−k1&lt;/p&gt;
&lt;p&gt;x 的范围为 (0,e)&lt;/p&gt;
&lt;p&gt;x∗(p−1)+1=dp∗e&lt;/p&gt;
&lt;p&gt;求出 p-1 方法，遍历 (0,e) 的范围，其中肯定有一个 p 可以被 n 整除，那么求出 p 和 q&lt;/p&gt;
&lt;h1 id=&#34;ctf-rsadpdq&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsadpdq&#34;&gt;#&lt;/a&gt; 【CTF-RSA】dp,dq&lt;/h1&gt;
&lt;h3 id=&#34;出题脚本-9&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-9&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#coding:utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def put_flag():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 字符串列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = string.printable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(10):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag += a[random.randint(0, 99)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag = r&amp;quot;flag&amp;#123;%s&amp;#125;&amp;quot;%(hashlib.md5(flag.encode()).hexdigest())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp=d%(p-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq=d%(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=put_flag()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;p=&amp;quot;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;q=&amp;quot;,q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;dq=&amp;quot;,dq)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;dp=&amp;quot;,dp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;cf0e0667c7442c2062d44325dfa1fff8&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 116448890546185683618055771450262312142016242676238094735985217275558021426787268511630302385159616509824437310766062886645283012210550645169977349508799805936368080215259139246007436664580533527641021648562878099835855488217605507804587234251629324592836704958089773215930952831323766320054699221381397968349&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 121314447894794933957911141434811889490960407007692356648851565427612228833554613770868517878896771681675653370553153871839922174394592991198603832478356982707395565149507463608294194106890694113693573162935964314084535850523178363478442420170042255278617265943573098151866633751578364943738065761428628706039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq= 59454945327569441442149441563463739239821128716298744269717311289340024381722395588850968548335831814757164816955258086418762841133709695047194050618312524643771276638189575715012912103380109010753068898795188028199051024351953337146407252291706779335244334724531552245903907860703808590993224196886127308379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= 12821691474758928437186481633048397766403546197594245870498639361893688795881668821885717411711121850784948039038831649145251723699762477006066139036811257757249066433210399450679610952158523123357151108778701014212056291911107333938353929571993792914871136350116358751944058404120303000831815761806127343937&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 9983837067627475378248837281152077424577644386920613072097254241896471299255096730106667334607635347860798847959593316696048354026485880426581453490989579741802704101509576499437856377836305511877118962352017825827558857421137932247147226103427393215520334795953723215808736388183152444480701951305372405468290514418251173641350383981901755628956285657852767644612558903853975128656097276863834433887282035569179705730464360229607976686393639473868252704891915443982668342477474154848246082390458011231850434283927962815103615634851592101896052435074200941912168878340717415600997946705421433642907356895602555961692&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-7&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# coding=utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def decrypt(dp,dq,p,q,c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    InvQ = gmpy2.invert(q, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mp = pow(c, dp, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mq = pow(c, dq, q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m = (((mp-mq)*InvQ) % p)*q+mq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= 116448890546185683618055771450262312142016242676238094735985217275558021426787268511630302385159616509824437310766062886645283012210550645169977349508799805936368080215259139246007436664580533527641021648562878099835855488217605507804587234251629324592836704958089773215930952831323766320054699221381397968349&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q= 121314447894794933957911141434811889490960407007692356648851565427612228833554613770868517878896771681675653370553153871839922174394592991198603832478356982707395565149507463608294194106890694113693573162935964314084535850523178363478442420170042255278617265943573098151866633751578364943738065761428628706039&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq= 59454945327569441442149441563463739239821128716298744269717311289340024381722395588850968548335831814757164816955258086418762841133709695047194050618312524643771276638189575715012912103380109010753068898795188028199051024351953337146407252291706779335244334724531552245903907860703808590993224196886127308379&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= 12821691474758928437186481633048397766403546197594245870498639361893688795881668821885717411711121850784948039038831649145251723699762477006066139036811257757249066433210399450679610952158523123357151108778701014212056291911107333938353929571993792914871136350116358751944058404120303000831815761806127343937&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 9983837067627475378248837281152077424577644386920613072097254241896471299255096730106667334607635347860798847959593316696048354026485880426581453490989579741802704101509576499437856377836305511877118962352017825827558857421137932247147226103427393215520334795953723215808736388183152444480701951305372405468290514418251173641350383981901755628956285657852767644612558903853975128656097276863834433887282035569179705730464360229607976686393639473868252704891915443982668342477474154848246082390458011231850434283927962815103615634851592101896052435074200941912168878340717415600997946705421433642907356895602555961692&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;decrypt(dp,dq,p,q,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;cf0e0667c7442c2062d44325dfa1fff8&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;题目解析-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目解析-2&#34;&gt;#&lt;/a&gt; 题目解析&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;已知条件：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = m^e mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Φ(n) = (p-1)*(q-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d*e ≡ 1 mod Φ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp = d mod (p-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq = d mod (q-1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先根据&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;m=c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;gcd&lt;/span&gt;(p,q)=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p∗q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;利用中国剩余定理,得：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1=c^d mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2=c^d mod q&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;已知条件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = m^e mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ϕ(n)= (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d*e≡ &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod ϕ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dp= d mod (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dq= d mod (q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=c^d+k*n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;因为 n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=c^d+p*q*k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;同时取余q和p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; m1=c^d mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; c^d=kp+m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; m2=c^d mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;式&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;带入式&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2=(kp+m1) mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;等式两边同时减去m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(m2−m1)≡kp mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;因为&lt;span class=&#34;title function_&#34;&gt;gcd&lt;/span&gt;(p,q)=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以可以求p的逆元，得到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;≡k mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;得到如下两个式子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;k≡(m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c^d=kp+m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m≡c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;上下两个式子合并&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c^d = ((m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod q)p+m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m ≡ c^d mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;最后可以有&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m≡(((m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod q)p+m1) mod n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;只剩最后一步了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1≡cd mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡cd mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1和m2怎么求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d≡dp mod (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d≡dq mod (q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;那么分别带入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1≡cdq mod (q−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡cdp mod (p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;费马小定理即假如p是质数，且&lt;span class=&#34;title function_&#34;&gt;gcd&lt;/span&gt;(a,p)=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a^(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以如果我们有等式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=dp+k*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;直接带入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡c^dp+k*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这里的指数，我们拆开，为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡c^dp*ck*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ck*(p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)≡&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;因为p是大素数，显然和c互素所以可以直接得到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡cd^p mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;那么m1根据对称性也可以同理得到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1≡cd^q mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;故此，我们现在拥有了所有条件，下面归纳一下为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1≡cd^q mod q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2≡cd^p mod p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m≡(((m2−m1)*p−&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; mod q)p+m1) mod n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsan是p的r次方&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsan是p的r次方&#34;&gt;#&lt;/a&gt; 【CTF-RSA】n 是 p 的 r 次方&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/tupian/main/texe/b6423b7a5d301c5bc141a453312c914fa8d73386.png%401256w_894h_!web-article-pic.avif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-10&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.&lt;span class=&#34;title function_&#34;&gt;generate_prime&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=&lt;span class=&#34;number&#34;&gt;65537&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&lt;span class=&#34;string&#34;&gt;&amp;quot;flag&amp;#123;de8c3ea714f7f780185924d473997bcb&amp;#125;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.&lt;span class=&#34;title function_&#34;&gt;s2n&lt;/span&gt;(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p**&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=p**&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;-p**&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.&lt;span class=&#34;title function_&#34;&gt;invmod&lt;/span&gt;(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=&lt;span class=&#34;title function_&#34;&gt;pow&lt;/span&gt;(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&lt;span class=&#34;string&#34;&gt;&amp;quot;n=&amp;quot;&lt;/span&gt;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&lt;span class=&#34;string&#34;&gt;&amp;quot;e=&amp;quot;&lt;/span&gt;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&lt;span class=&#34;string&#34;&gt;&amp;quot;c=&amp;quot;&lt;/span&gt;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n= 16622523748365172904813592127476399281343727660606505617392198543235807423259452687676621686860269192604509820445802409254968963482780952401681342511953346114354237597355266224985159415203546461269421162429663695795646630067770430367870150442156212643421904327067607612643835104098557876657456979301279696161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 15149785767171289805982282199116965213185900381335528659748769541121555585117654564592061361366310297474619810692989995979933036914843280405808328316644883226261208875270217733849328131498613484049428472804357649204297506663052673501421178930563517387487395016265672942577669111963976761606745737080626352222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解密脚本-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密脚本-3&#34;&gt;#&lt;/a&gt; 解密脚本&lt;/h3&gt;
&lt;p&gt;先分解 n&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;使用yafu分解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23219089633250510580388184338893261190159425274266091829251069678345101374315005119889075848991325948461687799542168350589180122396501651434531030343667226410506241902501479054317717625217008857112114881864252928341340770771920275461651508679148124345837511394681152499950625703121385320234450147885925563601&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, using pretesting plan: normal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, no tune info: using qs/gnfs crossover of 95 digits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, ****************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, ****************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, Starting factorization of 4818619058739807726033451975297698875972020102640321802123262042534551118036419562514298978461153805413112499422269152127364929585538633207754060608869449&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, using pretesting plan: normal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, no tune info: using qs/gnfs crossover of 95 digits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, ****************************&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, input is a perfect power&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, input is a perfect power&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06/01/24 00:39:01 v1.34.5 @ LAPTOP-V0M71U09, prp77 = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = 23219089633250510580388184338893261190159425274266091829251069678345101374315005119889075848991325948461687799542168350589180122396501651434531030343667226410506241902501479054317717625217008857112114881864252928341340770771920275461651508679148124345837511394681152499950625703121385320234450147885925563601&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = 4777659110099869449331032200405354033599223023041765916601886190091487314989244505694085724093454432510462782520998688417537643026221506529296297782026160739262075190691284018675189858368054339063575534858807322887095235742287437139426799368719305846674897884286541494038433345483824310623372192122891409065&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = 69416273731307471601239913553838998413594935515871627319658832112504691596643&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n = p**4 - p**3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = libnum.invmod(e, phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = pow(c, d, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 将解密的消息m转换为字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;decoded_message = libnum.n2s(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 打印解密的消息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)).decode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;de8c3ea714f7f780185924d473997bcb&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;ctf-rsan分解三个素数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ctf-rsan分解三个素数&#34;&gt;#&lt;/a&gt; 【CTF-RSA】N 分解三个素数&lt;/h1&gt;
&lt;p&gt;对 n 进行分解，得到了 3 个素数 n = p * q * r&lt;/p&gt;
&lt;h3 id=&#34;出题脚本-11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#出题脚本-11&#34;&gt;#&lt;/a&gt; 出题脚本&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#生成随机素数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=libnum.generate_prime(32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=libnum.generate_prime(32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=libnum.generate_prime(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&amp;quot;flag&amp;#123;20d6e2da95dcc1fa5f5432a436c4be18&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#字符串转数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=libnum.s2n(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q*r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi_n=(p-1)*(q-1)*(r-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#求逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=libnum.invmod(e,phi_n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;n=&amp;quot;,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;e=&amp;quot;,e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;c=&amp;quot;,c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n= 155569715564225941516401175393822123654661071656544682900501445388039464795156282583058732391822082699041937953698254493985631168080567689894352112882819752144420434749908373&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e= 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c= 2590934473244479149454029781088177201664803241879433405469420742163580990206205379085660779993465773098740370870207790131091064186457773458473135597972752013264935424276949&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;解题脚本-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题脚本-8&#34;&gt;#&lt;/a&gt; 解题脚本&lt;/h3&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/11/Base%E5%AE%B6%E6%97%8F%E7%BC%96%E7%A0%81/</guid>
            <title>&#39;Base家族编码&#39;</title>
            <link>http://example.com/2024/05/11/Base%E5%AE%B6%E6%97%8F%E7%BC%96%E7%A0%81/</link>
            <category>Base家族编码</category>
            <pubDate>Sat, 11 May 2024 14:40:47 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;base-家族&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base-家族&#34;&gt;#&lt;/a&gt; Base 家族&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/202405072012952.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;base64-编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base64-编码&#34;&gt;#&lt;/a&gt; Base64 编码&lt;/h3&gt;
&lt;p&gt;原理介绍：&lt;br&gt;
1、将原始数据每三个字节作为一组，24bit&lt;br&gt;
2、将 24bit 分为四组，每组 6 个 bit&lt;br&gt;
3、在每组前面补加零，补全 4 组 8bit（原始数据从三字节变成四字节，增大近 90%）&lt;br&gt;
4、根据 base64 码表对应符号&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;例如：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文      本：	M        a        n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ASCII 编码：	77       97       110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8bit  字节：	01001101 01100001 01101110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6bit  字节：	010011 010110 000101 101110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Base64索引：	19     22     5      46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Base64编码：	T      W      F      u&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当位数不足时如：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/202405071027868.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;两个字节：两个字节共16个二进制位，依旧按照规则进行分组。此时总共16个二进制位，每6个一组，则第三组缺少2位，用0补齐，得到三个Base64编码，第四组完全没有数据则用“=”补上。因此，上图中“BC”转换之后为“QKM=”&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;一个字节：一个字节共8个二进制位，依旧按照规则进行分组。此时共8个二进制位，每6个一组，则第二组缺少4位，用0补齐，得到两个Base64编码，而后面两组没有对应数据，都用“=”补上。因此，上图中“A”转换之后为“QQ==”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Base64 算法代码特征：&lt;/p&gt;
&lt;p&gt;A-Za-z0-9+/=&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/202405071156161.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;解码 Python 实现：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#新表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;biao = &amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#密文&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = str.maketrans(biao,&amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(base64.b64decode(origin.translate(a)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;base32-编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base32-编码&#34;&gt;#&lt;/a&gt; Base32 编码&lt;/h3&gt;
&lt;p&gt;介绍：Base32 编码使用 32 个 ASCII 字符对任何数据进行编码，将原数据二进制形式取指定位数转换为 ASCII 码。首先获取数据的二进制形式，将其串联起来，每 5 个比特为一组进行切分，每一组内的 5 个比特可转换到指定的 32 个 ASCII 字符中的一个，将转换后的 ASCII 字符连接起来，就是编码后的数据。&lt;/p&gt;
&lt;p&gt;base32 编码表（A-Z2-7）：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/keep212/nima/main/202405072021690.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//编码实现&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main(int argc, char *argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char date[100]=&amp;quot;bacde&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char code[100];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    unsigned char table[33]=&amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int len_date,len_code,i,j,num;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    len_date=strlen(date);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;length of date=%d\n&amp;quot;,len_date);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;date: %s\n&amp;quot;,date);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(len_date%5!=0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        len_code=(len_date/5+1)*8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        len_code=(len_date/5)*8; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//关键代码块——————————————————————————————————————————————————————————————&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=0,j=0;i&amp;lt;len_code;i+=5,j+=8)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j]=table[date[i]&amp;gt;&amp;gt;3];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j+1]=table[((date[i]&amp;amp;7)&amp;lt;&amp;lt;2)|(date[i+1]&amp;gt;&amp;gt;6)];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j+2]=table[(date[i+1]&amp;gt;&amp;gt;1)&amp;amp;31];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j+3]=table[(date[i+1]&amp;amp;1)&amp;lt;&amp;lt;4|date[i+2]&amp;gt;&amp;gt;4];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j+4]=table[(date[i+2]&amp;amp;15)&amp;lt;&amp;lt;1|date[i+3]&amp;gt;&amp;gt;7];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j+5]=table[(date[i+3]&amp;gt;&amp;gt;2)&amp;amp;31];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j+6]=table[(date[i+3]&amp;amp;3)&amp;lt;&amp;lt;3|date[i+4]&amp;gt;&amp;gt;5];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j+7]=table[date[i+4]&amp;amp;31];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//————————————————————————————————————————————————————————————————————————-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    num=len_date%5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    switch(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        case 1: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(i=1;i&amp;lt;8-num;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                code[len_code-i]=&amp;#x27;=&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        case 2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(i=1;i&amp;lt;7-num;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                code[len_code-i]=&amp;#x27;=&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        case 3:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for(i=1;i&amp;lt;7-num;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                code[len_code-i]=&amp;#x27;=&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        case 4:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            code[len_code-1]=&amp;#x27;=&amp;#x27;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;length of code =%d\n&amp;quot;,len_code);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;the code:&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=0;i&amp;lt;len_code;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;%c&amp;quot;,code[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;base16-编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base16-编码&#34;&gt;#&lt;/a&gt; Base16 编码&lt;/h3&gt;
&lt;p&gt;介绍：Base16 编码就是将 ASCII 字符集中可打印的字符 (数字 0-9 和字母 A-F) 对应的二进制字节数据进行编码，编码的方式：先将数据 (根据 ASCII 编码，UTF-8 编码等) 转成对应的二进制数，不足 8 比特位高位补 0. 然后将所有的二进制全部串起来，4 个二进制位为一组，转化成对应十进制数。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main(void)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char date[100]=&amp;quot;bacde&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char code[100];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    unsigned char table[17]=&amp;quot;0123456789ABCDEF&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int len_date,len_code,i,j,num;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    len_date=strlen(date);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;length of date :\n%d\n&amp;quot;,len_date);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;date:\n%s\n&amp;quot;,date);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    len_code=len_date*2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//————————————————————————————————————————————————————————————————————&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   //关键代码块&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=0,j=0;i&amp;lt;len_date;i++,j+=2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j]=table[date[i]&amp;gt;&amp;gt;4];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code[j+1]=table[date[i]&amp;amp;15]; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//——————————————————————————————————————————————————————————————————————&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;length of code:\n%d\n&amp;quot;,len_code);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    printf(&amp;quot;code: \n&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for(i=0;i&amp;lt;len_code;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&amp;quot;%c&amp;quot;,code[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;其他简述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他简述&#34;&gt;#&lt;/a&gt; 其他简述&lt;/h3&gt;
&lt;h4 id=&#34;base58-编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base58-编码&#34;&gt;#&lt;/a&gt; Base58 编码：&lt;/h4&gt;
&lt;p&gt;Base58 是用于比特币（Bitcoin）中使用的一种独特的编码方式，主要用于产生 Bitcoin 的钱包地址。相比 Base64，Base58 不使用数字 “0”，字母大写 “O”，字母大写 “I”，和字母小写 “l”，以及 “+” 和 “/” 符号。 Base58 字母表：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;base62&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base62&#34;&gt;#&lt;/a&gt; Base62&lt;/h4&gt;
&lt;p&gt;Base62 使用了 62 个字符编码，包括 0-9，a-z，A-Z。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;例：编码前：这是一个例子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    编码后：UxIZABUpAxEZUhIxw1UhIxEFUhIVwJUlERA1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;base85&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base85&#34;&gt;#&lt;/a&gt; Base85&lt;/h4&gt;
&lt;p&gt;Base85 是一种类似于 Base64 的二进制文本编码形式，通过使用五个 ASCII 字符来表示四个字节的二进制数据。例如，它用于将图像嵌入到 Adobe PDF 文件中。&lt;/p&gt;
&lt;p&gt;Base85 包含下列字符：&lt;/p&gt;
&lt;p&gt;$%()*+,-./0123456789:;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;例：编码前：这是一个例子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    编码后：keEPJR&amp;#x27;5S\JE45?jM$Q6XcN&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;base91&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base91&#34;&gt;#&lt;/a&gt; Base91&lt;/h4&gt;
&lt;p&gt;顾名思义，Base91 需要 91 个字符来表示 ASCII 编码的二进制数据。&lt;/p&gt;
&lt;p&gt;Base91 包含下列字符：&lt;/p&gt;
&lt;p&gt;!&amp;quot;#$%&amp;amp;()*+,./0123456789:;&amp;lt;=&amp;gt;？&lt;/p&gt;
&lt;p&gt;@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;例：编码前：这是一个例子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    编码后：*~v6uRhaugfz5el@Dh!q&amp;amp;LB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;base92&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base92&#34;&gt;#&lt;/a&gt; Base92&lt;/h4&gt;
&lt;p&gt;Base92 是用 92 个可打印字符表示 8 位二进制数据 (含无法显示 打印字符) 的编码方式。&lt;/p&gt;
&lt;p&gt;Base92 包含下列字符：&lt;/p&gt;
&lt;p&gt;!#$%&amp;amp;’()*+,-./0123456789:;&amp;lt;=&amp;gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_abcdefghijklmnopqrstuvwxyz{|}~&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;例：编码前：这是一个例子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    编码后：toxRX&amp;lt;@w&amp;lt;U&amp;quot;[27@\f!Mpc*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;base94&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base94&#34;&gt;#&lt;/a&gt; Base94&lt;/h4&gt;
&lt;p&gt;Base94 是用 94 个可打印字符表示 8 位二进制数据 (含无法显示 打印字符) 的编码方式。&lt;/p&gt;
&lt;p&gt;Base94 包含下列字符：&lt;/p&gt;
&lt;p&gt;!&amp;quot;#$%&amp;amp;’()*+,-./0123456789:;&amp;lt;=&amp;gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~ 10.Base100&lt;/p&gt;
&lt;h4 id=&#34;base100-编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base100-编码&#34;&gt;#&lt;/a&gt; Base100 编码&lt;/h4&gt;
&lt;p&gt;（又名：Emoji 表情符号编码 / 解码），可将文本内容编码为 Emoji 表情符号；同时也可以将编码后的 Emoji 表情符号内容解码为文本。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;例：编码前：这是一个例子&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    编码后：📟💶💐📝💏💦📛💯👷📛💯💡📛💵💂📜💤💇&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;base128&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base128&#34;&gt;#&lt;/a&gt; Base128&lt;/h4&gt;
&lt;p&gt;Base128 是用 128 个字符表示 8 位二进制数据的编码方式。&lt;/p&gt;
&lt;p&gt;Base128 包含下列字符：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\xb5\xb6\xb7\xbc\xbd\xbe\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;本文作者-zoyager-welcome&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本文作者-zoyager-welcome&#34;&gt;#&lt;/a&gt; # 本文作者： zoyager @WELCOME&lt;/h2&gt;
&lt;p&gt;# 本文链接： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96b3lhZ2VyLmdpdGh1Yi5pby8yMDI0LzA1LzA3L0Jhc2UlRTUlQUUlQjYlRTYlOTclOEYlRTclQkMlOTYlRTclQTAlODEv&#34;&gt;https://zoyager.github.io/2024/05/07/Base 家族编码 /&lt;/span&gt;&lt;br&gt;
# 版权声明： 本站所有文章除特别声明外，均采用 (CC) BY-NC-SA 许可协议。转载请注明出处！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/08/number-theory/</guid>
            <title>&#39;number-theory&#39;</title>
            <link>http://example.com/2024/05/08/number-theory/</link>
            <category>number-theory</category>
            <pubDate>Wed, 08 May 2024 16:08:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;整数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#整数&#34;&gt;#&lt;/a&gt; 整数&lt;/h1&gt;
&lt;h2 id=&#34;整除的概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#整除的概念&#34;&gt;#&lt;/a&gt; 整除的概念&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定义：设a，b是任意两个整数，其中b ≠𝟎，如果存在一个整数q 使得等式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = bq &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;成立，则称b整除a或者a被b整除，记作b | a &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：6=3*2          写做   3|6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果b|a,则b叫做a的因数，而a叫做b的倍数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果b不能整除a，记作b a       &amp;quot;|&amp;quot;整除符号  &amp;quot; &amp;quot;不能整除符号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注: (1)对任何整数 b ≠𝟎 ， b | 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (2)对任何整数 b ， 有1 | b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (3)对任何整数 a ≠𝟎 , 有a | a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (4) b | a , 则b | (-a) , (-b) | (± a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;整除中的一些定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#整除中的一些定理&#34;&gt;#&lt;/a&gt; 整除中的一些定理&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定理1：设a，b，c ≠ 0是任意三个整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       若c | a ， b | a ,则 c | a &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定理2：设a，b，c ≠ 0是任意三个整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       若c | a ， c | a ,则 c | a ± b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定理3：设a，b，c ≠ 0是任意三个整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       若c | a ， c | b ,则对于任意整数s，t，有 c | sa + tb &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;b进制转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#b进制转换&#34;&gt;#&lt;/a&gt; b 进制转换&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;b进制转十进制：设b是大于1的正整数，则每个正整数n(十进制)可唯一地表示成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             n = ak * bk + ak-1 * bk-1 + ······ + a1*b + a0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      其中ai是整数，0 &amp;lt; ai  &amp;lt;  b – 1   ,i = 1,2,…..,k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;二进制---bin   八进制---oct   十进制---dec    十六进制---hex &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例子：10110（二进制）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             十进制：1*2^4 + 0*2^3 + 1*2^2 + 1*2^1 + 0*2^0 =  22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            75621（八进制）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            十进制：7*8^4 + 5*8^3 + 6*8^2 + 2*8^1 + 1* 8^0 =  31633&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             3BF（十六进制）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             十进制：3*16^2 + 11*16^1 + 15*16^0 = 959&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;b进制转换python&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#b进制转换python&#34;&gt;#&lt;/a&gt; b 进制转换 python&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;在python中如何实现进制转换：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;使用内置函数 bin()、oct()、int()、hex()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b进制转十进制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例1:a = int (&amp;#x27;100&amp;#x27;,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    输出为4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 例2:a = int (&amp;#x27;777&amp;#x27;,8) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	输出为511&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 例3:a = int (&amp;#x27;ABCF&amp;#x27;,16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	输出为43983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;十进制转b进制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例1:b = bin (10259)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    输出为0b10100000010011&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 例2:b = oct (777) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	print(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	输出为0o1411&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 例3:b = hex (7777)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	print(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	输出为0x1e61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;最大公因数与最小公倍数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最大公因数与最小公倍数&#34;&gt;#&lt;/a&gt; 最大公因数与最小公倍数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;最大公因数：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         定义：设a1,a2,……,an是n个整数，若整数d | ak ,则称d是 a1,a2,……,an是一个公因数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	若 a1,a2,……,an不全为零，则所有公因数中最大的一个公因数叫做 最大公因数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	记作d =（a，b,……）。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       特别的：当（a ，b，……）= 1,则称a，b，……是互素或互质的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;最小公倍数：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         定义：设a1,a2,……,an是n个整数，若整数a1 | m, a2 | m, …… , an | m 则称m是a1,a2,……,an是一个公倍数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	若 a1,a2,……,an所有公倍数中最小正整数叫做 最小公倍数  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       记作m = [a,b,……]       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;最大公因数的定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最大公因数的定理&#34;&gt;#&lt;/a&gt; 最大公因数的定理&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定理1：设a，b，…… ,n是任意三个整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       a,b,……,n与 |a|,|b|,……,|n|的公因数相同&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	 （a，b，……,n）= （|a|，|b|，……,|n|）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定理2：设b是任意一个整数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       则（0，b）= b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;广义欧几里得除法！！！！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	要想先了解广义广义欧几里得除法！！！！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	欧几里得除法，我们先了解欧几里得除法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定理：设a，b是两个整数，其中b&amp;gt;0，则存在唯一的整数q，r使得&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a = q*b + r ，   0 &amp;lt; r &amp;lt; b &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：a = 169 ， b = 54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        所以可得 169 = 54 * 3 + 7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;广义欧几里得除法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#广义欧几里得除法&#34;&gt;#&lt;/a&gt; &lt;strong&gt;广义欧几里得除法&lt;/strong&gt;&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;又称辗转相除法，实际上是在反复运用欧几里得除法求得最大公因数的过程。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        在辗转相除的过程中，每一步的欧几里得算法求出的结果其实都是在将a，b转换成两个较小的整数b，c的最大公因数来计算，直到r为0时，前一次欧几里得算法的r即为a，b的最大公因数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：a = 169 ， b = 121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     169  =  1*121 +  48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     121  =  2*48   +  25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     48    =  1*25   +  23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     25    =  1*23   +  2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     23    =  11*2   +  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     2      =  2*1     +  0	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以，（169，121）= 1   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Python实现广义欧几里得除法       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def gcd(a, b): &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while b!=0: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	a,b=b,a % b &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return a &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1个用法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def main(): &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	a = int(input(&amp;quot;请输入第一个整数:&amp;quot;)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	b = int(input(&amp;quot;请输入第二个整数:&amp;quot;)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	result= gcd(a, b) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	print(“最大公约数为:&amp;quot;,result) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;quot;__main__&amp;quot;: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;最后的if __name__ == &amp;quot;__main__&amp;quot;:语句是Python中的惯用写法，用于判断当前模块是否是直接执行的主程序。如果是直接执行的主程序，则调用main()函数；如果模块被导入到其他模块中，则main()函数不会被执行。这样可以保证模块的代码在被导入时不会立即执行，而是等到需要时再执行。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;如何求最小公倍数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何求最小公倍数&#34;&gt;#&lt;/a&gt; 如何求最小公倍数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;设a，b是两个正整数，则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             [a,b] = ab / (a,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：a = -1859 , b = 1573, 求[a，b]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;解：													求最大公因数:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    （-1859，1573）=（1859，1573）= 143						1859 = 1*1537 + 286&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     -1859 * 1573 = -2924207								1573 = 5*286 + 143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     所以[a,b] = -20449									  286 = 2*143 + 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;贝祖定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#贝祖定理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;贝祖定理&lt;/strong&gt;&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;贝祖定理（又称裴蜀定理），说明了对任何整数a，b其最大公因数d，一定存在x、y，使ax + by = d 成立&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;拓展欧几里得算法：在已知a，b下，在满足贝祖定理的条件下求解x，y的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;拓展欧几里得算法：       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：a = 169 ， b = 121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     169  =  1*121 +  48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     121  =  2*48   +  25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     48    =  1*25   +  23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     25    =  1*23   +  2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     23    =  11*2   +  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     2      =  2*1     +  0	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以，（169，121）= 1   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;上述是一次广义欧几里得除法的过程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果我们尝试将广义欧几里得除法进行一次逆运算？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 =  23 -  11*2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我们发现  2 = 25 – 1*23， 替换上式2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 =  23 -  11*(25 – 23*1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我们还发现   23 = 48 – 25*1， 替换上式23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1  = (48-25*1) – 11*(25 – (48-25*1)*1)    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    =  12*48 – 23*25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我们又发现 25 = 121 – 2*48 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 =  12*48 – 23*(121-2*48)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;最终，我们发现48 = 169 – 1*121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 = 12*(169 – 1*121) – 23*(121-2*(169-1*121)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   =  58*169 – 81*121 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我们不难发现，我们通过一次广义欧几里得除法逆运算得到了符合贝祖定理的等式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          在上式中，a = 169，b = 121 最大公因数d = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          我们解得x = 58 ， y = -81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以，所谓的拓展欧几里得算法，不过是广义欧几里得算法的逆运算罢了！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;素数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#素数&#34;&gt;#&lt;/a&gt; 素数&lt;/h1&gt;
&lt;h2 id=&#34;什么是素数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是素数&#34;&gt;#&lt;/a&gt; &lt;strong&gt;什么是素数？&lt;/strong&gt;&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;素数(prime)又称质数，是指在大于1的自然数中，除了1和它本身以外不再有其他因数  的自然数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1~30中的素数：2，3，5，7，11，13，17，19 ，23，29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;素数(prime)由于其特性以及复杂性，在密码学中有着极其重要的作用，尤其是公钥密码体系。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;素数的算数基本定理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#素数的算数基本定理&#34;&gt;#&lt;/a&gt; 素数的算数基本定理&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定理1(算术基本定理)：任意自整数n(n &amp;gt; 1)，当n或是素数或是素数的乘积时，若n有分解式n  =  p1 * p2 * p3 *…… * pn和n  =  q1 * q2 * q3 *…… * qm，其中p1 ，p2 ，p3 ，…… pn，q1， q2， q3， …… qm都是素数，则有m = n，且对q1， q2， q3， …… qm，均有pi = qi &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定理2：任一大于1的整数n能够唯一地表示成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                      n = p1^a1  * p2^a2 * ……. ps^as          ai  &amp;gt; 0 , i = 1,2,…..,s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              其中p1 ，p2 ，p3  …… ，ps为素数，上式叫做n的标准分解式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：150 = 2*5*5*3 = 21*31*52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             999 = 3*3*3*37 = 33*37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;算术基本定理的核心思想是素因数分解的唯一性。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;欧拉euler函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#欧拉euler函数&#34;&gt;#&lt;/a&gt; 欧拉 (EULER) 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;设n是一个正整数，则1 ， 2 ，…… , n – 1中与n互素的整数个数成为欧拉函数，记作φ(n)。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;切记：欧拉函数是定义在正整数上的函数， φ(n)的值等于1，2，……, n – 1中与n互素的数的个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例： φ(10)  =  4， φ(7)  = 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;欧拉函数的性质&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#欧拉函数的性质&#34;&gt;#&lt;/a&gt; &lt;strong&gt;欧拉函数的性质&lt;/strong&gt;&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定理1： 若(m, n) = 1,则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              φ(mn) = φ(m) φ(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定理2： φ(n)=n(1-1/p1)(1-1/p2)……(1-1/pk)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;特别地，当n = p为素数时， φ(p) = p - 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例： φ(15) = φ(5) φ(3) = 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例： φ(41) =  40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;φ(m n) = φ(m) φ(n) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             = (m-1)(n-1) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;恭喜你，你已经提前掌握RSA加密算法的一部分原理啦！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;同余&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#同余&#34;&gt;#&lt;/a&gt; 同余&lt;/h1&gt;
&lt;h2 id=&#34;同余-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#同余-2&#34;&gt;#&lt;/a&gt; 同余&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定义：给定一个正整数m，如果对于整数a，b有m  | a – b，则a，b叫做模m同余，记作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                a ≡ b (mod m )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：因为 7 | 29 – 1 ，所以   29 ≡ 1 (mod 7 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    因为 7 | 23 + 5 ，所以   23 ≡ -5(mod 7)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定理1：设m是一个正整数，a，b是两个整数，则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              a ≡ b (mod m )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;的充要条件是存在整数k，使得a = b + km&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：因67 = 8*8 + 3     ，所以67  ≡ 3 (mod 8 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定理2：模m同余是等价关系即&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(1)对任意整数a， a ≡ a (mod m )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(2)若a ≡ b (mod m ) ， 则b ≡ a (mod m )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(3) 若 a ≡ b (mod m )， b ≡ c (mod m )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        则a ≡ c (mod m )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定理3：模数的运算规则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;模运算与基本四则运算有些相似，但是除法例外。其规则如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a + b) % p = (a % p + b % p) % p （1）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a – b) % p = (a % p – b % p) % p （2）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a * b) % p = (a % p * b % p) % p （3）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a^b) % p = ((a % p)^b) % p （4）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定理3：模数的运算规则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;结合律：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a+b) % p + c) % p = (a + (b+c) % p) % p （5）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a*b) % p * c)% p = (a * (b*c) % p) % p （6）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;交换律：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a + b) % p = (b+a) % p （7）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(a * b) % p = (b * a) % p （8）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定理3：模数的运算规则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;分配律：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((a +b)% p * c) % p = ((a * c) % p + (b * c) % p) % p （9）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;重要定理：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若a≡b (% p)，则对于任意的c，都有(a + c) ≡ (b + c) (%p)；（10）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若a≡b (% p)，则对于任意的c，都有(a * c) ≡ (b * c) (%p)；（11）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若a≡b (% p)，c≡d (% p)，则 (a + c) ≡ (b + d) (%p)，(a – c) ≡ (b – d) (%p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;逆元&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#逆元&#34;&gt;#&lt;/a&gt; 逆元&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;逆元的概念：若 x * a ≡ 1 (mod y) , x， y 互质，则称 a 为 x 的逆元，标记为 a -1。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;逆元也可认为是数论意义上的倒数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：  7mod22的逆元&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在前面，我们知道由贝祖定理可知：x，y来说，一定存在唯一的a，b使得，ax + by = (x  ,  y)。在本题当中，x = 7，y = 22，又因为要求逆元二点前提是(7 , 22) = 1,所以存在唯一结果 7a + 22b = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以利用辗转相除法，我们可以求得a，b的值，如果a是正数，则其逆元就是a；如果a是负数，逆元则为b – x。答案最后是19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;同余式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#同余式&#34;&gt;#&lt;/a&gt; 同余式&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;如何求解一次同余式：      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定义：设m是一个正整数，f(x)为多项式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              f(x) = anxn + …… + a1x + a0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;其中ai是整数，则&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              f(x) ≡ b (mod m)   (1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;叫做模m的同余式。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     如果整数a使得&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          f(a) ≡ b (modm)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 成立，则x ≡ a (modm)叫做同余式(1)的一个解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 本质上，同余式就是在取模的条件下求解方程式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;全部解 = 特解 + 通解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例：求解一次同余式  33x ≡ 22 (mod 77)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;解：首先，先计算最大公因数(33, 77) = 11, 并由(33, 77) = 11 | 22 ,,所以同余式有解，其次，运用广义欧几里得除法，求出同余式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        3x ≡ 1 (mod 7) 的一个特解 x0，≡ 5 (mod 7)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;再次写出同余式3x ≡ 2 (mod 7) 的一个特解 x0 ≡ 2 * x0，≡ 3 (mod 7)   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;同余式的通解为t * 𝟕𝟕/((𝟑𝟑 ,   𝟕𝟕)) ,   t = 0 , 1 , 2 ,……. , (33 , 77) - 1  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以，同余式全部解 x ≡ 3 + t * 𝟕𝟕/((𝟑𝟑 ,   𝟕𝟕)) ≡ 3 + t *7 (mod 77)   , t = 0 , 1 , 2 ,……. , (33 , 77) - 1  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;同余式组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#同余式组&#34;&gt;#&lt;/a&gt; 同余式组&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;定义：由若干个一次同余式构成的同余式组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;𝒂_𝟏 𝒙≡𝒃_𝟏 (𝐦𝐨𝐝𝒎_𝟏 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;𝒂_𝟐 𝒙≡𝒃_𝟐 (𝐦𝐨𝐝𝒎_𝟐 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;𝒂_𝒏 𝒙≡𝒃_𝒏 (𝐦𝐨𝐝𝒎_𝒏 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定义：由若干个一次同余式构成的同余式组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果存在 x_0 ∈ Z 使得a_i * x_0 ≡ 𝒃_𝟏 (𝐦𝐨𝐝𝒎_i)(i = 1,2,3……)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;则  x ≡ (mod[m_1,m_2,……])  为其解 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;同余式组定理：中国剩余定理      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定义：m1 , m2 , …….,mk是k个两两互素的正整数，则对任意的整数b1 ,b2,…… , bk, 同余式组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;𝒂_𝟏 𝒙≡𝒃_𝟏 (𝐦𝐨𝐝𝒎_𝟏 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;𝒂_𝟐 𝒙≡𝒃_𝟐 (𝐦𝐨𝐝𝒎_𝟐 )                 (1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;𝒂_𝒏 𝒙≡𝒃_𝒏 (𝐦𝐨𝐝𝒎_𝒏 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;有唯一解，其解为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x=M&amp;#x27;_1*M_1*b, +M&amp;#x27;_2*M_2*b, +..+M&amp;#x27;_k*M_k*b (modm) (2) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;其中m=m_1* m_2....m_k m=m_i*M_i,M&amp;#x27;_i M_i=1(mod m_i) i-1,2,L,k &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/08/buuctf/</guid>
            <title>&#39;buuctf&#39;</title>
            <link>http://example.com/2024/05/08/buuctf/</link>
            <category>buuctf</category>
            <pubDate>Wed, 08 May 2024 12:19:48 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;一眼就解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一眼就解密&#34;&gt;#&lt;/a&gt; 一眼就解密&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;题目&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;下面的字符串解密后便能获得flag：ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注意：得到的 flag 请包上 flag&amp;#123;&amp;#125; 提交&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;解题思路&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;观察密文，可以看到有一个=，这是base 64的标志，三个字节为一组，需要4个base 64 编码来表达，不够的编码用=来补充&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以用base 64来解密&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;打开 http://www.hiencode.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;找到base 64解密&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输入ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;得到flag&amp;#123;THE_FLAG_OF_THIS_STRING&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2024/05/07/python%E5%B0%8F%E7%BB%93/</guid>
            <title>&#39;python小结&#39;</title>
            <link>http://example.com/2024/05/07/python%E5%B0%8F%E7%BB%93/</link>
            <pubDate>Tue, 07 May 2024 17:56:32 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;乘法表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#乘法表&#34;&gt;#&lt;/a&gt; 乘法表&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;j=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while j&amp;lt;10:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    i=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while i&amp;lt;=j:    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;&amp;#123;i&amp;#125;*&amp;#123;j&amp;#125;=&amp;#123;i*j&amp;#125;&amp;#x27;,end=&amp;#x27;\t&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        i+=1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    j+=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;星号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#星号&#34;&gt;#&lt;/a&gt; 星号&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;i=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while i&amp;lt;=5:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print (&amp;#x27;*&amp;#x27;*i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    i=i+1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数&#34;&gt;#&lt;/a&gt; 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def han(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;&amp;#x27;&amp;#x27;加法函数&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x=a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  print(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;han(12,13)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;help(han)``&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;位置参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#位置参数&#34;&gt;#&lt;/a&gt; 位置参数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def xiao(姓名,年龄,性别):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;#x27;您的姓名是&amp;#123;姓名&amp;#125;,性别是&amp;#123;性别&amp;#125;,年龄是&amp;#123;年龄&amp;#125;岁&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xiao(&amp;#x27;圥忈&amp;#x27;,&amp;#x27;20&amp;#x27;,&amp;#x27;男&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xiao( 姓名=&amp;#x27;圥忈&amp;#x27;,年龄=&amp;#x27;20&amp;#x27;,性别=&amp;#x27;男&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xiao( &amp;#x27;圥忈&amp;#x27;,性别=&amp;#x27;男&amp;#x27;,年龄=&amp;#x27;20&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xiao( &amp;#x27;20&amp;#x27;,姓名=&amp;#x27;圥忈&amp;#x27;,性别=&amp;#x27;男&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;可变函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可变函数&#34;&gt;#&lt;/a&gt; 可变函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def name(*args):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;&amp;#x27;&amp;#x27;位置可变函数&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(args)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def abc(**kwargs):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;&amp;#x27;&amp;#x27;关键字可变函数&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abc(长=20,宽=10,高=10)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name(20)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;元组的拆包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元组的拆包&#34;&gt;#&lt;/a&gt; 元组的拆包&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 元组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=(1,2,3,)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x,y,z=a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(z)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 字典&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=&amp;#123;&amp;#x27;姓名&amp;#x27;:&amp;#x27;圥忈&amp;#x27;,&amp;#x27;年龄&amp;#x27;:20&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def name():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a,b=c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(c[a])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(c[b])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;函数的递归&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数的递归&#34;&gt;#&lt;/a&gt; 函数的递归&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def 递归(a):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if a == 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x=a+递归(a-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = 递归(100)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(x)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;filter函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#filter函数&#34;&gt;#&lt;/a&gt; filter 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;print(list(filter(lambda x : x % 2 ,range(1,11))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(list(filter(lambda x : x % 2 == 0,range(1,11))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;filter(函数名，可迭代对象)&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;打印出来是对象地址&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;转为列表在打印&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# filter有两个参数，第1参数可以是函数，也可以是None.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#当第一个参数是函数的时候，将第2个参数中每个元素进行计算。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#当第1个参数是函数的时候，直接将第二个参数中为True的值筛选出来&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;map函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#map函数&#34;&gt;#&lt;/a&gt; map 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#map (函数名，迭代对象)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#将函数的每一个元素作为函数的参数进行运算加工，直到每一个数据加工完毕&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(list(map(lambda x : x**2 ,range(1,11))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;reduce函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#reduce函数&#34;&gt;#&lt;/a&gt; reduce 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import functools#导入模块&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (functools.reduce(lambda x,y : x+y ,range (1,100)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;文件备份&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件备份&#34;&gt;#&lt;/a&gt; 文件备份&lt;/h2&gt;
&lt;p&gt;找到一个自己的文件&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;文件备份&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件名 = input(&amp;#x27;请输入你要备份的文件名：&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;点的位置 = 文件名.rfind(&amp;#x27;.&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if 点的位置 &amp;gt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    后缀 = 文件名[点的位置:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;文件名输入错误&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;新名字 = 文件名[0:点的位置]+&amp;#x27;[备份]&amp;#x27;+ 后缀&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件对象旧 = open(文件名,&amp;#x27;rb&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件对象新 = open(新名字,&amp;#x27;wb&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#不确定文件大小循环读取&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    读取数据 = 文件对象旧.read(6)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if len(读取数据) == 0:#读完了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    文件对象新.write(读取数据)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件对象旧.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件对象新.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;文件和文件夹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件和文件夹&#34;&gt;#&lt;/a&gt; 文件和文件夹&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#文件对象=open (&amp;#x27;文件名&amp;#x27;，&amp;#x27;访问模式&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&amp;#x27;r&amp;#x27;只读  &amp;#x27;w&amp;#x27;&amp;#x27;写入&amp;#x27;  &amp;#x27;a&amp;#x27;&amp;#x27;追加&amp;#x27;若省略为只读模式。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;有b为二进制有+为可读可写&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#r、rb、r+、rb+：只要文件不存在都报错，文件指针（光标的位置）放在文件开头&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#w、wb、w+、wb+、：只要文件不存在就新建文件，文件指针在开头，用新内容覆盖原内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#a、ab、a+、ab+：只要文件不存在新建文件，文件指针在结尾&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;读写&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 文件对象.write(&amp;#x27;内容&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 文件对象.read(&amp;#x27;num&amp;#x27;)num表示要从文件中读取数据的长度\n为一个字节，不写为全部&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = open (&amp;#x27;1.txt&amp;#x27;,&amp;#x27;w&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.write(&amp;#x27;&amp;#x27;&amp;#x27;aaaa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bbbb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cccc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = open (&amp;#x27;1.txt&amp;#x27;,&amp;#x27;r&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(a.read(6))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;文件对象.readlines()#需要赋值给一个变量&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 整个文件的内容一次性读取，并返回一个列表原文件中每一行为一个元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 每一行都有一个\n，最后一行没有&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;文件对象名.readline#需要赋值给一个变量&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 一次性读取一行内容，第一次读取第一行，第二次读取第二行，不带换行符。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;seek()移动文件指针&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#文件对象》seek(偏移量，起始位置)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 起始位置：0开头，1当前位置，2文件结尾&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 偏移位置：假设起始位置为开头，偏移量是5，那文件从第六个字节上开始&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 偏移量和起始位置都为0时，可以只写一个0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = open (&amp;#x27;1.txt&amp;#x27;,&amp;#x27;r&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.seek(2,0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(a.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;文件备份&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件名 = input(&amp;#x27;请输入你要备份的文件名：&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;点的位置 = 文件名.rfind(&amp;#x27;.&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if 点的位置 &amp;gt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    后缀 = 文件名[点的位置:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;文件名输入错误&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;新名字 = 文件名[0:点的位置]+&amp;#x27;[备份]&amp;#x27;+ 后缀&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件对象旧 = open(文件名,&amp;#x27;rb&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件对象新 = open(新名字,&amp;#x27;wb&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#不确定文件大小循环读取&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    读取数据 = 文件对象旧.read(6)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if len(读取数据) == 0:#读完了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    文件对象新.write(读取数据)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件对象旧.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件对象新.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;文件和文件夹模块操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件和文件夹模块操作&#34;&gt;#&lt;/a&gt; 文件和文件夹模块操作&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import os #导入模块&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#os.函数名()    使用os模块相关的功能&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;os.rename(&amp;#x27;旧文件名&amp;#x27;,&amp;#x27;新文件名&amp;#x27;)&amp;#x27;&amp;#x27;&amp;#x27;#改文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;os.remove(&amp;#x27;文件名)&amp;#x27;&amp;#x27;&amp;#x27;#删除文件不可以删文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;os.mddir(&amp;#x27;新文件夹&amp;#x27;)&amp;#x27;&amp;#x27;&amp;#x27;#创建文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;os.rmdir(&amp;#x27;文件夹&amp;#x27;)&amp;#x27;&amp;#x27;&amp;#x27;#删除文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;os.hetcwd()&amp;#x27;&amp;#x27;&amp;#x27;#查看文件夹所在目录需要print&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;os.chdir&amp;#x27;&amp;#x27;&amp;#x27;#改变默认目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#在aa的目录下创建bb目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#os.chdir（&amp;#x27;aa&amp;#x27;）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#os.mkdir(&amp;#x27;bb&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;os.listdir&amp;#x27;&amp;#x27;&amp;#x27;#获取某个文件夹下的所有文件和文件夹，返回一个列表&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;批量修改文件名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#批量修改文件名&#34;&gt;#&lt;/a&gt; 批量修改文件名&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import os &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;用户输入0 = input(r&amp;#x27;输入文件夹所咋路径（例如 c:\abc）:&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;用户输入1 = input(&amp;#x27;请输入要添加或删除的名字:&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;用户输入2  = int(input(&amp;#x27;添加请按1,删除请按2:&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;目录列表 = os.listdir(用户输入0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for 遍历文件名 in 目录列表:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if 用户输入2 == 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        新名字 = 用户输入1 + 遍历文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(新名字)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    elif 用户输入2 == 2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        前缀长度 = len(用户输入1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        新名字 = 遍历文件名[前缀长度:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(新名字)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(&amp;#x27;输入错误,只能输入1或2&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    os.chdir(用户输入0 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    os.rename(遍历文件名,新名字)xxxxxxxxxx import os 用户输入0 = input(r&amp;#x27;输入文件夹所咋路径（例如 c:\abc）:&amp;#x27;)用户输入1 = input(&amp;#x27;请输入要添加或删除的名字:&amp;#x27;)用户输入2  = int(input(&amp;#x27;添加请按1,删除请按2:&amp;#x27;))目录列表 = os.listdir(用户输入0)for 遍历文件名 in 目录列表:    if 用户输入2 == 1:        新名字 = 用户输入1 + 遍历文件名        print(新名字)    elif 用户输入2 == 2:        前缀长度 = len(用户输入1)        新名字 = 遍历文件名[前缀长度:]        print(新名字)    else:        print(&amp;#x27;输入错误,只能输入1或2&amp;#x27;)        break    os.chdir(用户输入0 )    os.rename(遍历文件名,新名字)1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;装饰器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#装饰器&#34;&gt;#&lt;/a&gt; 装饰器&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def  a1 (x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def a2(*arge,**kwarge):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(&amp;#x27;开始&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x(*arge,**kwarge)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(&amp;#x27;结束&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return a2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@a1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def a3(name,time):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;#x27;&amp;#123;name&amp;#125;开始吃饭，现在&amp;#123;time&amp;#125;点了&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a3 (&amp;#x27;圥忈&amp;#x27;,20)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@a1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def a4(age):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;#x27;我的年龄是&amp;#123;age&amp;#125;岁&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a4 (20)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@a1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def a5(name,time,**kwargs):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;#x27;我叫&amp;#123;name&amp;#125;，现在&amp;#123;time&amp;#125;点了&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a5 (&amp;#x27;圥忈&amp;#x27;,18,姓名 = &amp;#x27;圥忈&amp;#x27;,年龄 = 20,性别 = &amp;#x27;男&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;面相对象定义类及方法调用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面相对象定义类及方法调用&#34;&gt;#&lt;/a&gt; 面相对象。定义类及方法调用&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 类名():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self,姓名,年龄):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #添加实例属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.姓名 = 姓名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.年龄 = 年龄&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例方法(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print (f&amp;#x27;我的姓名是&amp;#123;self.姓名&amp;#125;,年龄是&amp;#123;self.年龄&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象1 = 类名(&amp;#x27;圥忈&amp;#x27;,20)#创建对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象1.实例方法()#调用实例方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象2 = 类名(&amp;#x27;圥&amp;#x27;,20)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象2.实例方法()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象3 = 类名(&amp;#x27;忈&amp;#x27;,20)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象3.实例方法()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;面向对象构造函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面向对象构造函数&#34;&gt;#&lt;/a&gt; 面向对象，构造函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 月饼():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__ (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #焙烤的时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.时间 = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #烤的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.状态 = &amp;#x27;生的&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #调料列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.调料 = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 焙烤时间(self,时间):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    #1.先计算月饼整体焙烤的时间 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.时间 += 时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        #2.用整体烤过的时间再判断&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if 0 &amp;lt;= self.时间 &amp;lt; 3:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.状态 = &amp;#x27;生的&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        elif 3 &amp;lt;= self.时间 &amp;lt; 5:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.状态 = &amp;#x27;半生不熟&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        elif 5 &amp;lt;= self.时间 &amp;lt; 8:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.状态 = &amp;#x27;熟了&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            self.状态 = &amp;#x27;糊了&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 添加调料(self,调料):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.调料.extend(调料)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    #书写str魔法方法,属于输出对象状态。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __str__ (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return f&amp;#x27;这批月饼被考过的时间是&amp;#123;self.时间&amp;#125;，状态是&amp;#123;self.状态&amp;#125;，调料有&amp;#123;self.调料&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象名 = 月饼()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象名.焙烤时间(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象名.添加调料([&amp;#x27;蔓越莓&amp;#x27;,&amp;#x27;豆沙&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(对象名)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象名.焙烤时间(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象名.添加调料([&amp;#x27;蛋黄&amp;#x27;,&amp;#x27;蛋液&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(对象名)xxxxxxxxxx class 月饼():    def __init__ (self):        #焙烤的时间        self.时间 = 0        #烤的状态        self.状态 = &amp;#x27;生的&amp;#x27;        #调料列表        self.调料 = []    def 焙烤时间(self,时间):    #1.先计算月饼整体焙烤的时间         self.时间 += 时间        #2.用整体烤过的时间再判断        if 0 &amp;lt;= self.时间 &amp;lt; 3:            self.状态 = &amp;#x27;生的&amp;#x27;        elif 3 &amp;lt;= self.时间 &amp;lt; 5:            self.状态 = &amp;#x27;半生不熟&amp;#x27;        elif 5 &amp;lt;= self.时间 &amp;lt; 8:            self.状态 = &amp;#x27;熟了&amp;#x27;        else:            self.状态 = &amp;#x27;糊了&amp;#x27;        def 添加调料(self,调料):        self.调料.extend(调料)            #书写str魔法方法,属于输出对象状态。    def __str__ (self):        return f&amp;#x27;这批月饼被考过的时间是&amp;#123;self.时间&amp;#125;，状态是&amp;#123;self.状态&amp;#125;，调料有&amp;#123;self.调料&amp;#125;&amp;#x27;对象名 = 月饼()对象名.焙烤时间(2)对象名.添加调料([&amp;#x27;蔓越莓&amp;#x27;,&amp;#x27;豆沙&amp;#x27;])print(对象名)对象名.焙烤时间(4)对象名.添加调料([&amp;#x27;蛋黄&amp;#x27;,&amp;#x27;蛋液&amp;#x27;])print(对象名)1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;面向对象单继承&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面向对象单继承&#34;&gt;#&lt;/a&gt; 面向对象单继承&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 小头爸爸(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.age = 30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例方法(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;quot;小头爸爸的年龄是&amp;#123;self.age&amp;#125;岁&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 大头儿子(小头爸爸):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象 = 大头儿子()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.实例方法()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;面向对象多继承1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面向对象多继承1&#34;&gt;#&lt;/a&gt; 面向对象，多继承 1&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 叶问(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;咏春&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 李小龙(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;截拳道&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 圥忈(李小龙,叶问):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象 = 圥忈()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.实例()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 叶问(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;咏春&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 李小龙(叶问):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;截拳道&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 圥忈(李小龙):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象 = 圥忈()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.实例()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#手动查类的继承顺序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(圥忈.__mro__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;面向对象多继承2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面向对象多继承2&#34;&gt;#&lt;/a&gt; 面向对象，多继承 2&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 叶问(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;咏春&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 李小龙(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;截拳道&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 圥忈(李小龙,叶问):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;健身&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象 = 圥忈()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.实例()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 叶问(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;咏春&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 李小龙(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;截拳道&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 圥忈(李小龙,叶问):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;健身&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 叶问_实例(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        叶问.__init__(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        叶问.实例(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 李小龙_实例(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        李小龙.__init__(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        李小龙.实例(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象 = 圥忈()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.实例()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.叶问_实例()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.李小龙_实例()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;面向对象组合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面向对象组合&#34;&gt;#&lt;/a&gt; 面向对象，组合&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 叶问(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self,x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 李小龙(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self,x):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 香港(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self,x,y):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.叶问 = 叶问(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.李小龙 = 李小龙(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def print_功夫(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;在香港，叶问使用功夫&amp;#123;self.叶问.功夫&amp;#125;次，李小龙使用功夫&amp;#123;self.李小龙.功夫&amp;#125;次&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;香港 = 香港(1,10)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;香港.print_功夫()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;self.李小龙 = 李小龙(y)&amp;#x27;#公有&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;self.__李小龙 = 李小龙(y)&amp;#x27;#私有不继承给下一个人&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;敏队对象获取和修改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#敏队对象获取和修改&#34;&gt;#&lt;/a&gt; 敏队对象获取和修改&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 圥(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 忈(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self._武器 = &amp;#x27;屠龙刀&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 获取武器(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return self._武器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 修改武器(self, new_weapon):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self._武器 = new_weapon&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obj = 圥()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obj.忈()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(obj.获取武器())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;obj.修改武器(&amp;#x27;倚天剑&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(obj.获取武器())xxxxxxxxxx class 圥(object):    def 忈(self):        self._武器 = &amp;#x27;屠龙刀&amp;#x27;    def 获取武器(self):        return self._武器    def 修改武器(self, new_weapon):        self._武器 = new_weaponobj = 圥()obj.忈()print(obj.获取武器())obj.修改武器(&amp;#x27;倚天剑&amp;#x27;)print(obj.获取武器())1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;面对对象函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面对对象函数&#34;&gt;#&lt;/a&gt; 面对对象，函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 叶问(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;咏春&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 李小龙(叶问):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;截拳道&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        super().__init__()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        super().实例()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 圥忈(李小龙,叶问):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.功夫 = &amp;#x27;健身&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(f&amp;#x27;使用&amp;#123;self.功夫&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 叶问_实例(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        叶问.__init__(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        叶问.实例(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 李小龙_实例(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        李小龙.__init__(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        李小龙.实例(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 叶问和李小龙实例(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        super().__init__()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        super().实例()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象 = 圥忈()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.叶问和李小龙实例()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;面对对象多态&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面对对象多态&#34;&gt;#&lt;/a&gt; 面对对象，多态&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 复仇者联盟 (object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print (&amp;#x27;消灭灭霸&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 钢铁侠 (复仇者联盟):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print (&amp;#x27;空中作战&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 美国队长 (复仇者联盟):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print (&amp;#x27;地面作战&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class 神盾局 (object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def 指挥实例 (self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        复仇者联盟.实例()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;帮派1 = 钢铁侠 ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;帮派2 = 美国队长 ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象 = 神盾局 ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.指挥实例(帮派1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对象.指挥实例(帮派2)xxxxxxxxxx class 复仇者联盟 (object):    def 实例 (self):        print (&amp;#x27;消灭灭霸&amp;#x27;)class 钢铁侠 (复仇者联盟):    def 实例 (self):        print (&amp;#x27;空中作战&amp;#x27;)class 美国队长 (复仇者联盟):    def 实例 (self):        print (&amp;#x27;地面作战&amp;#x27;)class 神盾局 (object):    def 指挥实例 (self):        复仇者联盟.实例()帮派1 = 钢铁侠 ()帮派2 = 美国队长 ()对象 = 神盾局 ()对象.指挥实例(帮派1)对象.指挥实例(帮派2)1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;异常处理和储存数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#异常处理和储存数据&#34;&gt;#&lt;/a&gt; 异常处理和储存数据&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a = int(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = int(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(a/b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;except:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;except(1,2,3):&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;分母不能为零&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(a/b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;except(1,2,3) as 变量名:&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;except Exception as 出错消息:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;#x27;出错了，出错信息是&amp;#123;出错消息&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;else&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(a/b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;except(1,2,3) as 变量名:&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;except Exception as 出错消息:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;#x27;出错了，出错信息是&amp;#123;出错消息&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;我是else一切正常&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    变量名 = open(&amp;#x27;1.txt&amp;#x27;,&amp;#x27;r&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;except:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    变量名 = open(&amp;#x27;1.txt&amp;#x27;,&amp;#x27;w&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27;没有异常&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;finally:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    #文件关闭&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    变量名.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#不使用close&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    with open(&amp;#x27;1.txt&amp;#x27;,&amp;#x27;w&amp;#x27;)as 变量名:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for i in 变量名:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            print(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;except Exception as 错误信息:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;#x27;出错了，出错信息是&amp;#123;出错消息&amp;#125;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;异常处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#异常处理&#34;&gt;#&lt;/a&gt; 异常处理&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class 密码(Exception):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self,长度,最小长度):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.长度 = 长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.最小长度 = 最小长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __str__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return f&amp;#x27;你输入的长度是&amp;#123;self.长度&amp;#125;，不能少于&amp;#123;self.最小长度&amp;#125;个字符&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def 自定义异常():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        用户输入 = input()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if len (用户输入) &amp;lt; 8:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            raise 密码(len(用户输入),8)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    except Exception as 错误信息:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(错误信息)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(&amp;#x27;密码以输入完成&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;自定义异常()xxxxxxxxxx class 密码(Exception):    def __init__(self,长度,最小长度):        self.长度 = 长度        self.最小长度 = 最小长度        def __str__(self):        return f&amp;#x27;你输入的长度是&amp;#123;self.长度&amp;#125;，不能少于&amp;#123;self.最小长度&amp;#125;个字符&amp;#x27;def 自定义异常():    try:        用户输入 = input()        if len (用户输入) &amp;lt; 8:            raise 密码(len(用户输入),8)    except Exception as 错误信息:        print(错误信息)    else:        print(&amp;#x27;密码以输入完成&amp;#x27;)自定义异常()1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;仿射&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#仿射&#34;&gt;#&lt;/a&gt; 仿射&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 定义解密函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def decrypt_char(c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;e(x)=11x+6(mod26)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return (19 * (c - 6)) % 26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 将字母转换为数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def char_to_num(char):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return ord(char) - ord(&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 将数字转换为字母&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def num_to_char(num):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return chr(num + ord(&amp;#x27;a&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 密文&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ciphertext = &amp;quot;welcylk&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;decrypted_text = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 解密密文&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for char in ciphertext:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    decrypted_num = decrypt_char(char_to_num(char))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    decrypted_text += num_to_char(decrypted_num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 输出解密后的文本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;Decrypted text:&amp;quot;, decrypted_text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 将解密后的文本转换为base64形式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;#x27;在这里，我们使用Python的base64模块将解密后的文本转换为base64形式。&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;#x27;首先，我们调用decrypted_text.encode()将解密后的文本转换为字节序列。接下来，我们使用base64.b64encode()对字节序列进行编码，最后，调用.decode()将字节序列转换为字符串。&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;#x27;这样，我们就得到了一个base64编码的字符串，即flag。在这段代码中，这个base64编码的字符串被存储在变量base64_flag中。&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# &amp;#x27;如果你愿意，我可以为你详细解释每一行代码的作用。请告诉我如果你需要进一步的解释。&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base64_flag = base64.b64encode(decrypted_text.encode()).decode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 输出base64形式的flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;Base64 flag:&amp;quot;, base64_flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#由于解密需要找到 a 的模 26 的逆元，这里需要计算 invmod(a, 26)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#inv_a = invmod(a, 26)  # 如果找不到逆元，这个计算会返回 None&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#if inv_a is None:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#print(&amp;quot;无法解密，a 与 26 不互质&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;笔记&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#笔记&#34;&gt;#&lt;/a&gt; 笔记&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;切片&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;序列[开始位置下标：结束位置下标：步长]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查找&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查找 find正序查找&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rfind逆序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;没有时返回-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查找 index没有事报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查找 count 查找出现几次&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;替换&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;replace（&amp;#x27;&amp;#x27; ，&amp;#x27;&amp;#x27;，替换次数）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;分割&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;split（分割字符，分割次数）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名.split&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;合并&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;连接符号&amp;#x27;.join（变量名）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检查字符串是否以子串开头：startswith&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检查字符串是否以子串结尾：endswith&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：变量名.startswith(endswith)(子串，开始位置下标，结束位置下标）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;len（）查看变量长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;列表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#列表&#34;&gt;#&lt;/a&gt; 列表&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;列表中的增加数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名.append（数据）结尾&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名.extend（数据）结尾多个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名.insert(位置下标，数据)指定位置加数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;列表中删除&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del 变量名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del 变量名[下标]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del 变量名.pop(下标)不指定默认最后一个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名.remove（数据）移除列表中某个数据的第一个匹配项&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名.clear()清空列表，返回结果是[ ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;列表中的改&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名[n ]=x，下标为n的数据替换为x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reverse（）把整个列表倒序排列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：变量名.reverse（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sort（）排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：变量名.sort（reverse=False）默认为升序改为True为降序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;复制列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：变量名.copy()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量名2=变量名.copy()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;列表总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#列表总结&#34;&gt;#&lt;/a&gt; 列表总结&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;列表总结: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1、列表格式，用中括号存数据，每个数据用逗号隔开[数据1，数据2，数据3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2、常用操作方法: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(1)Index()查找数据在列表中第一次出现的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(2) len0返回列表的数据个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(3)append 在列表末尾追加个数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(4)extend在列表末尾追加多个数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(5)insert在指定位置增加数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(6)del删除列表或删除列表指定下标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(7)remove删除列表第一个指定的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(8)sort列表排序&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;元组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#元组&#34;&gt;#&lt;/a&gt; 元组&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;元组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;只查不改可以删除&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定义单个数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = （1，）元组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = （1）整形&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int      float         str      list 列表       tuple 元组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;字典1-tuple&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字典1-tuple&#34;&gt;#&lt;/a&gt; 字典 1 tuple&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;字典&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;字典是按key键和values值的方式成对出现&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;空字典的创建&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;名字=&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;名字=dict（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;增加和修改&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：字典序列名[键] = 值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;有泽改 无泽增&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;删数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del字典序列名[键] 一个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del字典序列名 删除字典&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;清空字典：clear（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：字典序列名.clear（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;字典序列名[键] 存在返回值 不存在报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;get（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：字典序列名.get(键，随便写)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果存在返回值，不存在返回你写的值如果没写返回None&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;values（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：字典序列名.values()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;返回所有值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;items（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;语法：字典序列名.items（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;可迭代对象（里面的数据是元组），迭代就是重复反馈的过程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=&amp;#123;&amp;#x27;华为&amp;#x27;:520,&amp;#x27;小米&amp;#x27;:520,&amp;#x27;苹果&amp;#x27;:14,&amp;#x27;三星&amp;#x27;:24&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(a.items ()) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dict_items([(&amp;#x27;华为&amp;#x27;，520),(&amp;#x27;小米&amp;#x27;，520),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&amp;#x27;苹果&amp;#x27;，14),(&amp;#x27;三星&amp;#x27;，24)])1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;集合set&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集合set&#34;&gt;#&lt;/a&gt; 集合 set&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;集合set&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set（）空集合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;有数据用&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;自动去重&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;增加数据：   集合名.add（数据）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;追加数据：   集合名.update（数据序列）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           数据序列：列表，字符串，元组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;删除数据：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               集合名.remove(数据)不存在报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               集合名.discard(数据)不存在不报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;集合名.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  查看返回数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  变量名=集合名.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  查看被删除的数据print（变量名）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  查看集合还剩什么print（集合名）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;range&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#range&#34;&gt;#&lt;/a&gt; range&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;range（start，end，step）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;range（0，11，1）从0到10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(0，11)：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      a.append(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;等效&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=[i for i in range(0,11)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=[i for i in range(0,11,2)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=[i for i in range(0,11) if i%2 ==0]等效取偶数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;字典2-tuple&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字典2-tuple&#34;&gt;#&lt;/a&gt; 字典 2 tuple&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;字典&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=[&amp;#x27;华为&amp;#x27;，&amp;#x27;小米&amp;#x27;，&amp;#x27;苹果&amp;#x27;，&amp;#x27;三星&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=[100,200,150,20]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=&amp;#123;a[i]:b[i] for i in range(len(a))&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;提取字典中的目&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=&amp;#123;&amp;#x27;华为&amp;#x27;:520,&amp;#x27;小米&amp;#x27;:520,&amp;#x27;苹果&amp;#x27;:14,&amp;#x27;三星&amp;#x27;:24&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=&amp;#123;i，j  for I in a.items（）if j&amp;gt;100&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出&amp;#123;&amp;#x27;华为&amp;#x27;:520,&amp;#x27;小米&amp;#x27;:520&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;集合去重c=[2，2，3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=&amp;#123;i**3 for i in c&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出&amp;#123;8，27&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enumerate（）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出为例（0，第一个元素）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in enumerate（a，1）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出从一开始（1，第一个元素）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;函数-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数-2&#34;&gt;#&lt;/a&gt; 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lambda函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lambda 形参：表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def 函数名（）：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     return 50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(函数名（）)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;等效于&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;函数名=lambda：50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print（（lambda：50）（））&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;俩个形参&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print（（lambda a，b：a+b）（30+40））&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def 函数名 （a，b）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return a+b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;结果=函数名（30，40）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print（结果）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;可变位置参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print（（lambda  *args：args）（1，5，2，3，4）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出（1，5，2，3，4）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;可变关键字参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print（（lambda **kwargs：kwargs）（姓名=&amp;#x27;圥忈&amp;#x27;，年龄=20））&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出&amp;#123;&amp;#x27;姓名&amp;#x27;:&amp;#x27;圥忈&amp;#x27;，&amp;#x27;年龄&amp;#x27;:&amp;#x27;20&amp;#x27;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def name(a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return a if a&amp;gt;b else b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (name(1,2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;等效于&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print（（lambda a，b：a if a&amp;gt;b else b）（2，1）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;排序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = [&amp;#123;&amp;#x27;名&amp;#x27;：&amp;#x27;圥忈&amp;#x27;，&amp;#x27;年龄&amp;#x27;:20&amp;#125;,&amp;#123;&amp;#x27;名&amp;#x27;：&amp;#x27;小李&amp;#x27;，&amp;#x27;年龄&amp;#x27;:30&amp;#125;,&amp;#123;&amp;#x27;名&amp;#x27;：&amp;#x27;小赵&amp;#x27;，&amp;#x27;年龄&amp;#x27;:40&amp;#125;,]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c.sort(key=lambda x:x[&amp;#x27;名&amp;#x27;]，reverse =True)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print（c）降序      False升序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter（函数名，可迭代对象）作用：过渡序列中不符合条件的元素&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;推导式总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推导式总结&#34;&gt;#&lt;/a&gt; 推导式总结&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;推导式总结&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;推导式有什么用？简化代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;常用推导式:列表推导式和字典推导式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[(xx for xx in range()] #列表推导式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;xx1: x02 for... in...&amp;#125;  #字典推导式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;xx for xx in...&amp;#125; #集合推导式(不常用，现阶段知这么一回事就可以了)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;函数函数式编程之内置高阶函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数函数式编程之内置高阶函数&#34;&gt;#&lt;/a&gt; 函数 (函数式编程之内置高阶函数)&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;函数(函数式编程之内置高阶函数) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1、filter(函数名，可迭代对象)作用:过渡序列中不符合条件的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;列表名=[1,2,3.4,5,6,7,8,9,10]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def 函数名(x): &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return x %2 == 0                         filter( lambda x:x%2,列表名) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;结果=filter(函数名，列表名) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(结果)#打印的是对象地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(list(结果)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filter有两个参数，第1参数可以是函数，也可以是None. &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;当第1个参数是函数的时候，将第2个参数中每个元素进行计算。 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;当第1个参数是None时，直接将第二个参数中为True的值筛选出来。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;斐波那契数列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#斐波那契数列&#34;&gt;#&lt;/a&gt; 斐波那契数列&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;写一个程序：打印斐波那契数列。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;提示:斐波那契数列是一系列的数字，其中下一个数字是前面两个数字的和。例如：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 1 2 3 5 8 ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;任务:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输入一个整数，并将其存储在n中。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定义两个整数变量t1和t2，其值均为1。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;使用一个for循环，从i = 1到n，包括n进行循环。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在每个循环中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;打印t1的值。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定义 result 为 t1 和 t2 之和。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;将 t2 的值分配给 t1。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;将 result 的值分配给 t2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n = int(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t1 = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t2 = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 1到n的循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(1,n+1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 打印t1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(t1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 定义result为t1和t2之和&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = t1 + t2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 将 `t2` 的值分配给 `t1`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t1 = t2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 将 `result` 的值分配给 `t2`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t2 = result&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;打印小于n的斐波那契数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#打印小于n的斐波那契数&#34;&gt;#&lt;/a&gt; 打印小于 n 的斐波那契数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;写一个程序：打印所有小于n的斐波那契数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;提示: 斐波那契数列是一系列的数字，其中一个数字是最后两个数字的相加。比如说：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 1 2 3 5 ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;任务：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;接受用户的整数输入，并将其存储在n中。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定义两个整数变量t1和t2，其值均为1。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;当t1小于n时，运行循环。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在每个循环中，打印t1的值。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;同时，定义result 变量为t1和t2之和。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;将t2的值分配给t1。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;将 result 的值分配给 t2。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n = int(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t1 = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t2 = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(1,n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 打印t1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(t1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 定义result 为t1和t2之和&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = t1 + t2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 将t2的值分配给t1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t1 = t2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if t1 &amp;gt;= n:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t2 = result&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;反转列表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反转列表&#34;&gt;#&lt;/a&gt; 反转列表&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;编写一个程序：反转一个给定的列表。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建列表my_list并将[1, 2, 3, 4]分配给它。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建一个新的列表，并将my_list的元素反转后添加到新列表中。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出新列表&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;my_list = [1, 2, 3, 4]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(my_list[::-1])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;如果您想要让用户输入一个元组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如果您想要让用户输入一个元组&#34;&gt;#&lt;/a&gt; 如果您想要让用户输入一个元组&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;input_str = input(&amp;quot;请输入一个元组，元素之间用逗号分隔（输入 &amp;#x27;q&amp;#x27; 结束）: &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if input_str.lower() == &amp;#x27;q&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input_tuple = tuple(map(int, input_str.split(&amp;#x27;,&amp;#x27;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 使用 for 循环遍历元组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for num in input_tuple:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;函数可变参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数可变参数&#34;&gt;#&lt;/a&gt; 函数可变参数&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;编写一个程序，创建一个可接受可变数量参数的函数，并返回所有参数的乘积:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建multiply_numbers()的函数，可以接受任何数量的参数（0或更多）。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在该函数中，计算所有参数(每个参数为整数)的乘积，并返回结果。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在函数外:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输入三个整数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;用这三个整数调用multiply_numbers()函数并打印返回值。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def multiply_numbers(*args):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for num in args:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result *= num&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;num1 = int(input(&amp;quot;&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;num2 = int(input(&amp;quot;&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;num3 = int(input(&amp;quot;&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = multiply_numbers(num1, num2, num3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(result)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;车辆类中创建引擎类对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#车辆类中创建引擎类对象&#34;&gt;#&lt;/a&gt; 车辆类中创建引擎类对象&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;编写写一个程序，在一个类中创建另一个类的对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建类:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建两个类：发动机类Engine，属性为动力power；车辆类Vehicle，属性为: 轮子wheels和发动机engine。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Engine类__init__()方法，带两个参数。self和power来创建并初始化Engine类的power属性。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vehicle类__init__()方法，带两个参数self和wheels来初始化Vehicle类的wheels属性。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在Vehicle的init__()方法中，engine属性应该为一个Engine类的对象，其power属性等于400。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在Vehicle类中创建get_power()方法，打印 属性engine的power属性。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在类外:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建车辆Vehicle类对象，轮子wheels属性等于4。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;调用该对象的get_power()方法。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;更多提示，请看代码示例。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Engine:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self, power):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.power = power&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Vehicle:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self, wheels):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.wheels = wheels&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.engine = Engine(400)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def get_power(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(self.engine.power)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;my_vehicle = Vehicle(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;my_vehicle.get_power()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
    </channel>
</rss>
